
Lab4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000d34  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000ec8  08000ec8  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000ec8  08000ec8  00020014  2**0
                  CONTENTS
  4 .ARM          00000000  08000ec8  08000ec8  00020014  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000ec8  08000ec8  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000ec8  08000ec8  00010ec8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000ecc  08000ecc  00010ecc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000014  20000000  08000ed0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000024  20000014  08000ee4  00020014  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000038  08000ee4  00020038  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020014  2**0
                  CONTENTS, READONLY
 12 .debug_info   00003715  00000000  00000000  00020044  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000ad1  00000000  00000000  00023759  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000428  00000000  00000000  00024230  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000003c0  00000000  00000000  00024658  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000ca4b  00000000  00000000  00024a18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000028a2  00000000  00000000  00031463  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003e35e  00000000  00000000  00033d05  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000ce  00000000  00000000  00072063  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001148  00000000  00000000  00072134  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000014 	.word	0x20000014
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000eb0 	.word	0x08000eb0

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000018 	.word	0x20000018
 80001d0:	08000eb0 	.word	0x08000eb0

080001d4 <NVIC_SetPriority>:

    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	6039      	str	r1, [r7, #0]
 80001de:	71fb      	strb	r3, [r7, #7]
  if((int32_t)IRQn < 0) {
 80001e0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001e4:	2b00      	cmp	r3, #0
 80001e6:	da0b      	bge.n	8000200 <NVIC_SetPriority+0x2c>
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80001e8:	683b      	ldr	r3, [r7, #0]
 80001ea:	b2da      	uxtb	r2, r3
 80001ec:	490c      	ldr	r1, [pc, #48]	; (8000220 <NVIC_SetPriority+0x4c>)
 80001ee:	79fb      	ldrb	r3, [r7, #7]
 80001f0:	f003 030f 	and.w	r3, r3, #15
 80001f4:	3b04      	subs	r3, #4
 80001f6:	0112      	lsls	r2, r2, #4
 80001f8:	b2d2      	uxtb	r2, r2
 80001fa:	440b      	add	r3, r1
 80001fc:	761a      	strb	r2, [r3, #24]
  }
  else {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80001fe:	e009      	b.n	8000214 <NVIC_SetPriority+0x40>
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000200:	683b      	ldr	r3, [r7, #0]
 8000202:	b2da      	uxtb	r2, r3
 8000204:	4907      	ldr	r1, [pc, #28]	; (8000224 <NVIC_SetPriority+0x50>)
 8000206:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800020a:	0112      	lsls	r2, r2, #4
 800020c:	b2d2      	uxtb	r2, r2
 800020e:	440b      	add	r3, r1
 8000210:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8000214:	bf00      	nop
 8000216:	370c      	adds	r7, #12
 8000218:	46bd      	mov	sp, r7
 800021a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800021e:	4770      	bx	lr
 8000220:	e000ed00 	.word	0xe000ed00
 8000224:	e000e100 	.word	0xe000e100

08000228 <SysTick_Config>:
    function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
    must contain a vendor-specific implementation of this function.

 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8000228:	b580      	push	{r7, lr}
 800022a:	b082      	sub	sp, #8
 800022c:	af00      	add	r7, sp, #0
 800022e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk) { return (1UL); }    /* Reload value impossible */
 8000230:	687b      	ldr	r3, [r7, #4]
 8000232:	3b01      	subs	r3, #1
 8000234:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000238:	d301      	bcc.n	800023e <SysTick_Config+0x16>
 800023a:	2301      	movs	r3, #1
 800023c:	e00f      	b.n	800025e <SysTick_Config+0x36>

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800023e:	4a0a      	ldr	r2, [pc, #40]	; (8000268 <SysTick_Config+0x40>)
 8000240:	687b      	ldr	r3, [r7, #4]
 8000242:	3b01      	subs	r3, #1
 8000244:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8000246:	210f      	movs	r1, #15
 8000248:	f04f 30ff 	mov.w	r0, #4294967295
 800024c:	f7ff ffc2 	bl	80001d4 <NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000250:	4b05      	ldr	r3, [pc, #20]	; (8000268 <SysTick_Config+0x40>)
 8000252:	2200      	movs	r2, #0
 8000254:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000256:	4b04      	ldr	r3, [pc, #16]	; (8000268 <SysTick_Config+0x40>)
 8000258:	2207      	movs	r2, #7
 800025a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800025c:	2300      	movs	r3, #0
}
 800025e:	4618      	mov	r0, r3
 8000260:	3708      	adds	r7, #8
 8000262:	46bd      	mov	sp, r7
 8000264:	bd80      	pop	{r7, pc}
 8000266:	bf00      	nop
 8000268:	e000e010 	.word	0xe000e010

0800026c <Delay>:
 * @param					uint32_t milisecond
 * @return					none
 * @Note					none
*/
void Delay(uint32_t dlyTicks)
{
 800026c:	b480      	push	{r7}
 800026e:	b085      	sub	sp, #20
 8000270:	af00      	add	r7, sp, #0
 8000272:	6078      	str	r0, [r7, #4]
      uint32_t curTicks;

      curTicks = msTicks;
 8000274:	4b08      	ldr	r3, [pc, #32]	; (8000298 <Delay+0x2c>)
 8000276:	681b      	ldr	r3, [r3, #0]
 8000278:	60fb      	str	r3, [r7, #12]
      while ((msTicks - curTicks) < dlyTicks) ;
 800027a:	bf00      	nop
 800027c:	4b06      	ldr	r3, [pc, #24]	; (8000298 <Delay+0x2c>)
 800027e:	681a      	ldr	r2, [r3, #0]
 8000280:	68fb      	ldr	r3, [r7, #12]
 8000282:	1ad3      	subs	r3, r2, r3
 8000284:	687a      	ldr	r2, [r7, #4]
 8000286:	429a      	cmp	r2, r3
 8000288:	d8f8      	bhi.n	800027c <Delay+0x10>
}
 800028a:	bf00      	nop
 800028c:	bf00      	nop
 800028e:	3714      	adds	r7, #20
 8000290:	46bd      	mov	sp, r7
 8000292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000296:	4770      	bx	lr
 8000298:	20000034 	.word	0x20000034

0800029c <SPI1_SlaveConfig>:
void SPI1_SlaveConfig(void){
 800029c:	b580      	push	{r7, lr}
 800029e:	b088      	sub	sp, #32
 80002a0:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	SPI_InitTypeDef SPI_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;

	RCC_AHB1PeriphClockCmd(SPI_SLAVE_GPIO_CLOCK, ENABLE);
 80002a2:	2101      	movs	r1, #1
 80002a4:	2001      	movs	r0, #1
 80002a6:	f000 fc5d 	bl	8000b64 <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 80002aa:	2302      	movs	r3, #2
 80002ac:	773b      	strb	r3, [r7, #28]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80002ae:	2300      	movs	r3, #0
 80002b0:	77bb      	strb	r3, [r7, #30]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80002b2:	2302      	movs	r3, #2
 80002b4:	777b      	strb	r3, [r7, #29]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 80002b6:	2300      	movs	r3, #0
 80002b8:	77fb      	strb	r3, [r7, #31]
	GPIO_InitStructure.GPIO_Pin = MISO_SLAVE| MOSI_SLAVE|SCK_SLAVE;
 80002ba:	23e0      	movs	r3, #224	; 0xe0
 80002bc:	61bb      	str	r3, [r7, #24]
	GPIO_Init(SPI_SLAVE_GPIO, &GPIO_InitStructure);
 80002be:	f107 0318 	add.w	r3, r7, #24
 80002c2:	4619      	mov	r1, r3
 80002c4:	4829      	ldr	r0, [pc, #164]	; (800036c <SPI1_SlaveConfig+0xd0>)
 80002c6:	f000 fb75 	bl	80009b4 <GPIO_Init>
//	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
//	GPIO_InitStructure.GPIO_Pin = SCK_SLAVE;
//	GPIO_Init(GPIOB, &GPIO_InitStructure);

//	GPIO_PinAFConfig(GPIOB, GPIO_PinSource3, GPIO_AF_SPI1);
	GPIO_PinAFConfig(SPI_SLAVE_GPIO, GPIO_PinSource5, GPIO_AF_SPI1);
 80002ca:	2205      	movs	r2, #5
 80002cc:	2105      	movs	r1, #5
 80002ce:	4827      	ldr	r0, [pc, #156]	; (800036c <SPI1_SlaveConfig+0xd0>)
 80002d0:	f000 fbfe 	bl	8000ad0 <GPIO_PinAFConfig>
	GPIO_PinAFConfig(SPI_SLAVE_GPIO, GPIO_PinSource6, GPIO_AF_SPI1);
 80002d4:	2205      	movs	r2, #5
 80002d6:	2106      	movs	r1, #6
 80002d8:	4824      	ldr	r0, [pc, #144]	; (800036c <SPI1_SlaveConfig+0xd0>)
 80002da:	f000 fbf9 	bl	8000ad0 <GPIO_PinAFConfig>
	GPIO_PinAFConfig(SPI_SLAVE_GPIO, GPIO_PinSource7, GPIO_AF_SPI1);
 80002de:	2205      	movs	r2, #5
 80002e0:	2107      	movs	r1, #7
 80002e2:	4822      	ldr	r0, [pc, #136]	; (800036c <SPI1_SlaveConfig+0xd0>)
 80002e4:	f000 fbf4 	bl	8000ad0 <GPIO_PinAFConfig>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 80002e8:	2300      	movs	r3, #0
 80002ea:	773b      	strb	r3, [r7, #28]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 80002ec:	2301      	movs	r3, #1
 80002ee:	77fb      	strb	r3, [r7, #31]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80002f0:	2302      	movs	r3, #2
 80002f2:	777b      	strb	r3, [r7, #29]

	GPIO_InitStructure.GPIO_Pin = NSS_SLAVE;
 80002f4:	2310      	movs	r3, #16
 80002f6:	61bb      	str	r3, [r7, #24]
	GPIO_Init(SPI_SLAVE_GPIO, &GPIO_InitStructure);
 80002f8:	f107 0318 	add.w	r3, r7, #24
 80002fc:	4619      	mov	r1, r3
 80002fe:	481b      	ldr	r0, [pc, #108]	; (800036c <SPI1_SlaveConfig+0xd0>)
 8000300:	f000 fb58 	bl	80009b4 <GPIO_Init>

	// enable peripheral clock SPI1
	RCC_APB2PeriphClockCmd(SPI_SLAVE_CLOCK, ENABLE);
 8000304:	2101      	movs	r1, #1
 8000306:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800030a:	f000 fc6b 	bl	8000be4 <RCC_APB2PeriphClockCmd>

	// set to full deplex mode, seperate MOSI and MISO Lines
	SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 800030e:	2300      	movs	r3, #0
 8000310:	80bb      	strh	r3, [r7, #4]

	// Use SPI1 as slave mode
	SPI_InitStructure.SPI_Mode = SPI_Mode_Slave;
 8000312:	2300      	movs	r3, #0
 8000314:	80fb      	strh	r3, [r7, #6]

	// One packet of data is 8 bits wide
	SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;
 8000316:	2300      	movs	r3, #0
 8000318:	813b      	strh	r3, [r7, #8]

	// Clock is low when idle
	SPI_InitStructure.SPI_CPOL = SPI_CPOL_Low;
 800031a:	2300      	movs	r3, #0
 800031c:	817b      	strh	r3, [r7, #10]

	// Data sampled at first edge
	SPI_InitStructure.SPI_CPHA = SPI_CPHA_1Edge;
 800031e:	2300      	movs	r3, #0
 8000320:	81bb      	strh	r3, [r7, #12]

	//SPI frequency is APB2 frequency
	SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_4;
 8000322:	2308      	movs	r3, #8
 8000324:	823b      	strh	r3, [r7, #16]

	// Set NSS us software
	SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;
 8000326:	f44f 7300 	mov.w	r3, #512	; 0x200
 800032a:	81fb      	strh	r3, [r7, #14]

	// data is trasmitted MSB first
	SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_LSB;
 800032c:	2380      	movs	r3, #128	; 0x80
 800032e:	827b      	strh	r3, [r7, #18]

	SPI_Init(SPI_SLAVE, &SPI_InitStructure);
 8000330:	1d3b      	adds	r3, r7, #4
 8000332:	4619      	mov	r1, r3
 8000334:	480e      	ldr	r0, [pc, #56]	; (8000370 <SPI1_SlaveConfig+0xd4>)
 8000336:	f000 fc75 	bl	8000c24 <SPI_Init>

	// Enable SPI1
	SPI_Cmd(SPI_SLAVE, ENABLE);
 800033a:	2101      	movs	r1, #1
 800033c:	480c      	ldr	r0, [pc, #48]	; (8000370 <SPI1_SlaveConfig+0xd4>)
 800033e:	f000 fcb5 	bl	8000cac <SPI_Cmd>

	NVIC_InitStructure.NVIC_IRQChannel = SPI1_IRQn;
 8000342:	2323      	movs	r3, #35	; 0x23
 8000344:	703b      	strb	r3, [r7, #0]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 8000346:	2300      	movs	r3, #0
 8000348:	707b      	strb	r3, [r7, #1]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 800034a:	2300      	movs	r3, #0
 800034c:	70bb      	strb	r3, [r7, #2]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 800034e:	2301      	movs	r3, #1
 8000350:	70fb      	strb	r3, [r7, #3]
	NVIC_Init(&NVIC_InitStructure);
 8000352:	463b      	mov	r3, r7
 8000354:	4618      	mov	r0, r3
 8000356:	f000 facb 	bl	80008f0 <NVIC_Init>

	SPI_ITConfig(SPI_SLAVE, SPI_I2S_IT_RXNE, ENABLE);
 800035a:	2201      	movs	r2, #1
 800035c:	2160      	movs	r1, #96	; 0x60
 800035e:	4804      	ldr	r0, [pc, #16]	; (8000370 <SPI1_SlaveConfig+0xd4>)
 8000360:	f000 fce0 	bl	8000d24 <SPI_I2S_ITConfig>
}
 8000364:	bf00      	nop
 8000366:	3720      	adds	r7, #32
 8000368:	46bd      	mov	sp, r7
 800036a:	bd80      	pop	{r7, pc}
 800036c:	40020000 	.word	0x40020000
 8000370:	40013000 	.word	0x40013000

08000374 <SPI2_MasterConfig>:
void SPI2_MasterConfig(void){
 8000374:	b580      	push	{r7, lr}
 8000376:	b088      	sub	sp, #32
 8000378:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	SPI_InitTypeDef SPI_InitStructure;
//	NVIC_InitTypeDef NVIC_InitStructure;

	RCC_AHB1PeriphClockCmd(SPI_MASTER_GPIO_CLOCK, ENABLE);
 800037a:	2101      	movs	r1, #1
 800037c:	2002      	movs	r0, #2
 800037e:	f000 fbf1 	bl	8000b64 <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 8000382:	2302      	movs	r3, #2
 8000384:	773b      	strb	r3, [r7, #28]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000386:	2300      	movs	r3, #0
 8000388:	77bb      	strb	r3, [r7, #30]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800038a:	2302      	movs	r3, #2
 800038c:	777b      	strb	r3, [r7, #29]

	GPIO_InitStructure.GPIO_Pin = SCK_MASTER| MISO_MASTER| MOSI_MASTER;
 800038e:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 8000392:	61bb      	str	r3, [r7, #24]
	GPIO_Init(SPI_MASTER_GPIO, &GPIO_InitStructure);
 8000394:	f107 0318 	add.w	r3, r7, #24
 8000398:	4619      	mov	r1, r3
 800039a:	4823      	ldr	r0, [pc, #140]	; (8000428 <SPI2_MasterConfig+0xb4>)
 800039c:	f000 fb0a 	bl	80009b4 <GPIO_Init>

	GPIO_PinAFConfig(SPI_MASTER_GPIO, GPIO_PinSource13, GPIO_AF_SPI2);
 80003a0:	2205      	movs	r2, #5
 80003a2:	210d      	movs	r1, #13
 80003a4:	4820      	ldr	r0, [pc, #128]	; (8000428 <SPI2_MasterConfig+0xb4>)
 80003a6:	f000 fb93 	bl	8000ad0 <GPIO_PinAFConfig>
	GPIO_PinAFConfig(SPI_MASTER_GPIO, GPIO_PinSource14, GPIO_AF_SPI2);
 80003aa:	2205      	movs	r2, #5
 80003ac:	210e      	movs	r1, #14
 80003ae:	481e      	ldr	r0, [pc, #120]	; (8000428 <SPI2_MasterConfig+0xb4>)
 80003b0:	f000 fb8e 	bl	8000ad0 <GPIO_PinAFConfig>
	GPIO_PinAFConfig(SPI_MASTER_GPIO, GPIO_PinSource15, GPIO_AF_SPI2);
 80003b4:	2205      	movs	r2, #5
 80003b6:	210f      	movs	r1, #15
 80003b8:	481b      	ldr	r0, [pc, #108]	; (8000428 <SPI2_MasterConfig+0xb4>)
 80003ba:	f000 fb89 	bl	8000ad0 <GPIO_PinAFConfig>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80003be:	2301      	movs	r3, #1
 80003c0:	773b      	strb	r3, [r7, #28]
	GPIO_InitStructure.GPIO_Speed =  GPIO_Speed_50MHz;
 80003c2:	2302      	movs	r3, #2
 80003c4:	777b      	strb	r3, [r7, #29]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80003c6:	2300      	movs	r3, #0
 80003c8:	77bb      	strb	r3, [r7, #30]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 80003ca:	2301      	movs	r3, #1
 80003cc:	77fb      	strb	r3, [r7, #31]

	GPIO_InitStructure.GPIO_Pin = NSS_MASTER;
 80003ce:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80003d2:	61bb      	str	r3, [r7, #24]
	GPIO_Init(SPI_MASTER_GPIO, &GPIO_InitStructure);
 80003d4:	f107 0318 	add.w	r3, r7, #24
 80003d8:	4619      	mov	r1, r3
 80003da:	4813      	ldr	r0, [pc, #76]	; (8000428 <SPI2_MasterConfig+0xb4>)
 80003dc:	f000 faea 	bl	80009b4 <GPIO_Init>

	// enable peripheral clock SPI1
	RCC_APB1PeriphClockCmd(SPI_MASTER_CLOCK, ENABLE);
 80003e0:	2101      	movs	r1, #1
 80003e2:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80003e6:	f000 fbdd 	bl	8000ba4 <RCC_APB1PeriphClockCmd>

	// set to full deplex mode, seperate MOSI and MISO Lines
	SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 80003ea:	2300      	movs	r3, #0
 80003ec:	80bb      	strh	r3, [r7, #4]

	// Use SPI1 as slave mode
	SPI_InitStructure.SPI_Mode = SPI_Mode_Master;
 80003ee:	f44f 7382 	mov.w	r3, #260	; 0x104
 80003f2:	80fb      	strh	r3, [r7, #6]

	// One packet of data is 8 bits wide
	SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;
 80003f4:	2300      	movs	r3, #0
 80003f6:	813b      	strh	r3, [r7, #8]

	// Clock is low when idle
	SPI_InitStructure.SPI_CPOL = SPI_CPOL_Low;
 80003f8:	2300      	movs	r3, #0
 80003fa:	817b      	strh	r3, [r7, #10]

	// Data sampled at first edge
	SPI_InitStructure.SPI_CPHA = SPI_CPHA_1Edge;
 80003fc:	2300      	movs	r3, #0
 80003fe:	81bb      	strh	r3, [r7, #12]

	//SPI frequency is APB2 frequency
	SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_4;
 8000400:	2308      	movs	r3, #8
 8000402:	823b      	strh	r3, [r7, #16]

	// Set NSS us software
	SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;
 8000404:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000408:	81fb      	strh	r3, [r7, #14]

	// data is trasmitted LSB first
	SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_LSB;
 800040a:	2380      	movs	r3, #128	; 0x80
 800040c:	827b      	strh	r3, [r7, #18]

	SPI_Init(SPI_MASTER, &SPI_InitStructure);
 800040e:	1d3b      	adds	r3, r7, #4
 8000410:	4619      	mov	r1, r3
 8000412:	4806      	ldr	r0, [pc, #24]	; (800042c <SPI2_MasterConfig+0xb8>)
 8000414:	f000 fc06 	bl	8000c24 <SPI_Init>

	// Enable SPI2
	SPI_Cmd(SPI_MASTER, ENABLE);
 8000418:	2101      	movs	r1, #1
 800041a:	4804      	ldr	r0, [pc, #16]	; (800042c <SPI2_MasterConfig+0xb8>)
 800041c:	f000 fc46 	bl	8000cac <SPI_Cmd>

}
 8000420:	bf00      	nop
 8000422:	3720      	adds	r7, #32
 8000424:	46bd      	mov	sp, r7
 8000426:	bd80      	pop	{r7, pc}
 8000428:	40020400 	.word	0x40020400
 800042c:	40003800 	.word	0x40003800

08000430 <GPIO_PinControl>:

void GPIO_PinControl(GPIO_TypeDef *pGPIO, uint8_t GPIO_Pin, uint8_t newstate)
{
 8000430:	b480      	push	{r7}
 8000432:	b083      	sub	sp, #12
 8000434:	af00      	add	r7, sp, #0
 8000436:	6078      	str	r0, [r7, #4]
 8000438:	460b      	mov	r3, r1
 800043a:	70fb      	strb	r3, [r7, #3]
 800043c:	4613      	mov	r3, r2
 800043e:	70bb      	strb	r3, [r7, #2]
	if(newstate == GPIO_PIN_SET){
 8000440:	78bb      	ldrb	r3, [r7, #2]
 8000442:	2b01      	cmp	r3, #1
 8000444:	d10e      	bne.n	8000464 <GPIO_PinControl+0x34>
		pGPIO->BSRRL |= 1 << GPIO_Pin;
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	8b1b      	ldrh	r3, [r3, #24]
 800044a:	b29b      	uxth	r3, r3
 800044c:	b21a      	sxth	r2, r3
 800044e:	78fb      	ldrb	r3, [r7, #3]
 8000450:	2101      	movs	r1, #1
 8000452:	fa01 f303 	lsl.w	r3, r1, r3
 8000456:	b21b      	sxth	r3, r3
 8000458:	4313      	orrs	r3, r2
 800045a:	b21b      	sxth	r3, r3
 800045c:	b29a      	uxth	r2, r3
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	831a      	strh	r2, [r3, #24]
	}else{
		pGPIO->BSRRH |= 1 << GPIO_Pin;
	}
}
 8000462:	e00d      	b.n	8000480 <GPIO_PinControl+0x50>
		pGPIO->BSRRH |= 1 << GPIO_Pin;
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	8b5b      	ldrh	r3, [r3, #26]
 8000468:	b29b      	uxth	r3, r3
 800046a:	b21a      	sxth	r2, r3
 800046c:	78fb      	ldrb	r3, [r7, #3]
 800046e:	2101      	movs	r1, #1
 8000470:	fa01 f303 	lsl.w	r3, r1, r3
 8000474:	b21b      	sxth	r3, r3
 8000476:	4313      	orrs	r3, r2
 8000478:	b21b      	sxth	r3, r3
 800047a:	b29a      	uxth	r2, r3
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	835a      	strh	r2, [r3, #26]
}
 8000480:	bf00      	nop
 8000482:	370c      	adds	r7, #12
 8000484:	46bd      	mov	sp, r7
 8000486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800048a:	4770      	bx	lr

0800048c <Send_Data>:

void Send_Data(SPI_TypeDef *SPIx, uint8_t data){
 800048c:	b580      	push	{r7, lr}
 800048e:	b082      	sub	sp, #8
 8000490:	af00      	add	r7, sp, #0
 8000492:	6078      	str	r0, [r7, #4]
 8000494:	460b      	mov	r3, r1
 8000496:	70fb      	strb	r3, [r7, #3]
	// Allow Send data to slave
	GPIO_PinControl(SPI_MASTER_GPIO, PIN_NSS, GPIO_PIN_SET);
 8000498:	2201      	movs	r2, #1
 800049a:	210c      	movs	r1, #12
 800049c:	480c      	ldr	r0, [pc, #48]	; (80004d0 <Send_Data+0x44>)
 800049e:	f7ff ffc7 	bl	8000430 <GPIO_PinControl>
	while(SPI_I2S_GetFlagStatus(SPIx, SPI_I2S_FLAG_BSY) == SET){;}
 80004a2:	bf00      	nop
 80004a4:	2180      	movs	r1, #128	; 0x80
 80004a6:	6878      	ldr	r0, [r7, #4]
 80004a8:	f000 fc6d 	bl	8000d86 <SPI_I2S_GetFlagStatus>
 80004ac:	4603      	mov	r3, r0
 80004ae:	2b01      	cmp	r3, #1
 80004b0:	d0f8      	beq.n	80004a4 <Send_Data+0x18>
	SPI_I2S_SendData(SPIx, data);
 80004b2:	78fb      	ldrb	r3, [r7, #3]
 80004b4:	b29b      	uxth	r3, r3
 80004b6:	4619      	mov	r1, r3
 80004b8:	6878      	ldr	r0, [r7, #4]
 80004ba:	f000 fc24 	bl	8000d06 <SPI_I2S_SendData>

	// Allow Send Data to Slave
	GPIO_PinControl(SPI_MASTER_GPIO, PIN_NSS, GPIO_PIN_RESET);
 80004be:	2200      	movs	r2, #0
 80004c0:	210c      	movs	r1, #12
 80004c2:	4803      	ldr	r0, [pc, #12]	; (80004d0 <Send_Data+0x44>)
 80004c4:	f7ff ffb4 	bl	8000430 <GPIO_PinControl>
}
 80004c8:	bf00      	nop
 80004ca:	3708      	adds	r7, #8
 80004cc:	46bd      	mov	sp, r7
 80004ce:	bd80      	pop	{r7, pc}
 80004d0:	40020400 	.word	0x40020400

080004d4 <Receiver_Data_Slave>:

uint16_t Receiver_Data_Slave(SPI_TypeDef *SPIx){
 80004d4:	b580      	push	{r7, lr}
 80004d6:	b084      	sub	sp, #16
 80004d8:	af00      	add	r7, sp, #0
 80004da:	6078      	str	r0, [r7, #4]
	uint16_t Data_Revice = 0;
 80004dc:	2300      	movs	r3, #0
 80004de:	81fb      	strh	r3, [r7, #14]
	Data_Revice = SPI_I2S_ReceiveData(SPIx);
 80004e0:	6878      	ldr	r0, [r7, #4]
 80004e2:	f000 fc03 	bl	8000cec <SPI_I2S_ReceiveData>
 80004e6:	4603      	mov	r3, r0
 80004e8:	81fb      	strh	r3, [r7, #14]
	return Data_Revice;
 80004ea:	89fb      	ldrh	r3, [r7, #14]
}
 80004ec:	4618      	mov	r0, r3
 80004ee:	3710      	adds	r7, #16
 80004f0:	46bd      	mov	sp, r7
 80004f2:	bd80      	pop	{r7, pc}

080004f4 <Led_Init>:
	Delay(10);
	*My_Data = SPI_I2S_ReceiveData(SPIx);
	while(SPI_I2S_GetFlagStatus(SPIx, SPI_I2S_FLAG_BSY) == SET);
}
void Led_Init()
{
 80004f4:	b580      	push	{r7, lr}
 80004f6:	b082      	sub	sp, #8
 80004f8:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 80004fa:	2101      	movs	r1, #1
 80004fc:	2001      	movs	r0, #1
 80004fe:	f000 fb31 	bl	8000b64 <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Pin = LED;
 8000502:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000506:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000508:	2301      	movs	r3, #1
 800050a:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 800050c:	2300      	movs	r3, #0
 800050e:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_Speed =  GPIO_Speed_100MHz;
 8000510:	2303      	movs	r3, #3
 8000512:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 8000514:	2300      	movs	r3, #0
 8000516:	71fb      	strb	r3, [r7, #7]

	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000518:	463b      	mov	r3, r7
 800051a:	4619      	mov	r1, r3
 800051c:	4803      	ldr	r0, [pc, #12]	; (800052c <Led_Init+0x38>)
 800051e:	f000 fa49 	bl	80009b4 <GPIO_Init>
}
 8000522:	bf00      	nop
 8000524:	3708      	adds	r7, #8
 8000526:	46bd      	mov	sp, r7
 8000528:	bd80      	pop	{r7, pc}
 800052a:	bf00      	nop
 800052c:	40020000 	.word	0x40020000

08000530 <Button_Init>:
void Button_Init(void){
 8000530:	b580      	push	{r7, lr}
 8000532:	b082      	sub	sp, #8
 8000534:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);
 8000536:	2101      	movs	r1, #1
 8000538:	2004      	movs	r0, #4
 800053a:	f000 fb13 	bl	8000b64 <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Pin = BUTTON;
 800053e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000542:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 8000544:	2300      	movs	r3, #0
 8000546:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 8000548:	2303      	movs	r3, #3
 800054a:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 800054c:	2301      	movs	r3, #1
 800054e:	71fb      	strb	r3, [r7, #7]

	GPIO_Init(GPIOC, &GPIO_InitStructure);
 8000550:	463b      	mov	r3, r7
 8000552:	4619      	mov	r1, r3
 8000554:	4803      	ldr	r0, [pc, #12]	; (8000564 <Button_Init+0x34>)
 8000556:	f000 fa2d 	bl	80009b4 <GPIO_Init>
}
 800055a:	bf00      	nop
 800055c:	3708      	adds	r7, #8
 800055e:	46bd      	mov	sp, r7
 8000560:	bd80      	pop	{r7, pc}
 8000562:	bf00      	nop
 8000564:	40020800 	.word	0x40020800

08000568 <GPIO_Read_Pin>:
uint8_t GPIO_Read_Pin(GPIO_TypeDef *pGPIO, uint32_t GPIO_PIN){
 8000568:	b480      	push	{r7}
 800056a:	b085      	sub	sp, #20
 800056c:	af00      	add	r7, sp, #0
 800056e:	6078      	str	r0, [r7, #4]
 8000570:	6039      	str	r1, [r7, #0]
	uint32_t Read_Pin;

	// Read but un IDR Registers
	Read_Pin = (pGPIO->IDR) >> GPIO_PIN;
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	691a      	ldr	r2, [r3, #16]
 8000576:	683b      	ldr	r3, [r7, #0]
 8000578:	fa22 f303 	lsr.w	r3, r2, r3
 800057c:	60fb      	str	r3, [r7, #12]
	Read_Pin = Read_Pin & 0x01;
 800057e:	68fb      	ldr	r3, [r7, #12]
 8000580:	f003 0301 	and.w	r3, r3, #1
 8000584:	60fb      	str	r3, [r7, #12]
	return Read_Pin;
 8000586:	68fb      	ldr	r3, [r7, #12]
 8000588:	b2db      	uxtb	r3, r3
}
 800058a:	4618      	mov	r0, r3
 800058c:	3714      	adds	r7, #20
 800058e:	46bd      	mov	sp, r7
 8000590:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000594:	4770      	bx	lr
	...

08000598 <main>:

int main(){
 8000598:	b580      	push	{r7, lr}
 800059a:	b082      	sub	sp, #8
 800059c:	af00      	add	r7, sp, #0
	SystemCoreClockUpdate();
 800059e:	f000 f8db 	bl	8000758 <SystemCoreClockUpdate>
	Button_Init();
 80005a2:	f7ff ffc5 	bl	8000530 <Button_Init>
	Led_Init();
 80005a6:	f7ff ffa5 	bl	80004f4 <Led_Init>
	SPI2_MasterConfig();
 80005aa:	f7ff fee3 	bl	8000374 <SPI2_MasterConfig>
	SPI1_SlaveConfig();
 80005ae:	f7ff fe75 	bl	800029c <SPI1_SlaveConfig>
	uint32_t returncode = SysTick_Config(SystemCoreClock/1000);
 80005b2:	4b1f      	ldr	r3, [pc, #124]	; (8000630 <main+0x98>)
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	4a1f      	ldr	r2, [pc, #124]	; (8000634 <main+0x9c>)
 80005b8:	fba2 2303 	umull	r2, r3, r2, r3
 80005bc:	099b      	lsrs	r3, r3, #6
 80005be:	4618      	mov	r0, r3
 80005c0:	f7ff fe32 	bl	8000228 <SysTick_Config>
 80005c4:	6038      	str	r0, [r7, #0]
	if(returncode != 0)
 80005c6:	683b      	ldr	r3, [r7, #0]
 80005c8:	2b00      	cmp	r3, #0
 80005ca:	d000      	beq.n	80005ce <main+0x36>
	{
		DEBUG_BREAK;
 80005cc:	be00      	bkpt	0x0000
	}
	while(1){
		if(GPIO_Read_Pin(GPIOC, PIN_BUTTON) == GPIO_PIN_LOW){
 80005ce:	210d      	movs	r1, #13
 80005d0:	4819      	ldr	r0, [pc, #100]	; (8000638 <main+0xa0>)
 80005d2:	f7ff ffc9 	bl	8000568 <GPIO_Read_Pin>
 80005d6:	4603      	mov	r3, r0
 80005d8:	2b00      	cmp	r3, #0
 80005da:	d103      	bne.n	80005e4 <main+0x4c>
			Send_Data(SPI2, 0xB1);
 80005dc:	21b1      	movs	r1, #177	; 0xb1
 80005de:	4817      	ldr	r0, [pc, #92]	; (800063c <main+0xa4>)
 80005e0:	f7ff ff54 	bl	800048c <Send_Data>
		}
	//Receive_Data = Receiver_Data_Slave(SPI1);
		if(Receive_Data == Check_DataSlave){
 80005e4:	4b16      	ldr	r3, [pc, #88]	; (8000640 <main+0xa8>)
 80005e6:	881b      	ldrh	r3, [r3, #0]
 80005e8:	2bb1      	cmp	r3, #177	; 0xb1
 80005ea:	d11b      	bne.n	8000624 <main+0x8c>
			for(int i = 0; i < 5; i++){
 80005ec:	2300      	movs	r3, #0
 80005ee:	607b      	str	r3, [r7, #4]
 80005f0:	e012      	b.n	8000618 <main+0x80>
				GPIO_PinControl(GPIOA, PIN_LED, GPIO_PIN_SET);
 80005f2:	2201      	movs	r2, #1
 80005f4:	210b      	movs	r1, #11
 80005f6:	4813      	ldr	r0, [pc, #76]	; (8000644 <main+0xac>)
 80005f8:	f7ff ff1a 	bl	8000430 <GPIO_PinControl>
				Delay(200);
 80005fc:	20c8      	movs	r0, #200	; 0xc8
 80005fe:	f7ff fe35 	bl	800026c <Delay>
				GPIO_PinControl(GPIOA, PIN_LED, GPIO_PIN_RESET);
 8000602:	2200      	movs	r2, #0
 8000604:	210b      	movs	r1, #11
 8000606:	480f      	ldr	r0, [pc, #60]	; (8000644 <main+0xac>)
 8000608:	f7ff ff12 	bl	8000430 <GPIO_PinControl>
				Delay(200);
 800060c:	20c8      	movs	r0, #200	; 0xc8
 800060e:	f7ff fe2d 	bl	800026c <Delay>
			for(int i = 0; i < 5; i++){
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	3301      	adds	r3, #1
 8000616:	607b      	str	r3, [r7, #4]
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	2b04      	cmp	r3, #4
 800061c:	dde9      	ble.n	80005f2 <main+0x5a>
			}
			Receive_Data = 0;
 800061e:	4b08      	ldr	r3, [pc, #32]	; (8000640 <main+0xa8>)
 8000620:	2200      	movs	r2, #0
 8000622:	801a      	strh	r2, [r3, #0]
		}
		GPIO_PinControl(GPIOA, PIN_LED, GPIO_PIN_RESET);
 8000624:	2200      	movs	r2, #0
 8000626:	210b      	movs	r1, #11
 8000628:	4806      	ldr	r0, [pc, #24]	; (8000644 <main+0xac>)
 800062a:	f7ff ff01 	bl	8000430 <GPIO_PinControl>
		if(GPIO_Read_Pin(GPIOC, PIN_BUTTON) == GPIO_PIN_LOW){
 800062e:	e7ce      	b.n	80005ce <main+0x36>
 8000630:	20000000 	.word	0x20000000
 8000634:	10624dd3 	.word	0x10624dd3
 8000638:	40020800 	.word	0x40020800
 800063c:	40003800 	.word	0x40003800
 8000640:	20000030 	.word	0x20000030
 8000644:	40020000 	.word	0x40020000

08000648 <SysTick_Handler>:
//		}
//	}
	return 0;
}
void SysTick_Handler(void)
{
 8000648:	b480      	push	{r7}
 800064a:	af00      	add	r7, sp, #0
	/* Increment counter necessary in Delay()*/
	msTicks++;
 800064c:	4b04      	ldr	r3, [pc, #16]	; (8000660 <SysTick_Handler+0x18>)
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	3301      	adds	r3, #1
 8000652:	4a03      	ldr	r2, [pc, #12]	; (8000660 <SysTick_Handler+0x18>)
 8000654:	6013      	str	r3, [r2, #0]
}
 8000656:	bf00      	nop
 8000658:	46bd      	mov	sp, r7
 800065a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800065e:	4770      	bx	lr
 8000660:	20000034 	.word	0x20000034

08000664 <SPI1_IRQHandler>:
void SPI1_IRQHandler(void){
 8000664:	b580      	push	{r7, lr}
 8000666:	af00      	add	r7, sp, #0
	if(SPI_I2S_GetITStatus(SPI1, SPI_I2S_IT_RXNE)== SET)
 8000668:	2160      	movs	r1, #96	; 0x60
 800066a:	4809      	ldr	r0, [pc, #36]	; (8000690 <SPI1_IRQHandler+0x2c>)
 800066c:	f000 fba7 	bl	8000dbe <SPI_I2S_GetITStatus>
 8000670:	4603      	mov	r3, r0
 8000672:	2b01      	cmp	r3, #1
 8000674:	d10a      	bne.n	800068c <SPI1_IRQHandler+0x28>
	{
		Receive_Data = Receiver_Data_Slave(SPI1);
 8000676:	4806      	ldr	r0, [pc, #24]	; (8000690 <SPI1_IRQHandler+0x2c>)
 8000678:	f7ff ff2c 	bl	80004d4 <Receiver_Data_Slave>
 800067c:	4603      	mov	r3, r0
 800067e:	461a      	mov	r2, r3
 8000680:	4b04      	ldr	r3, [pc, #16]	; (8000694 <SPI1_IRQHandler+0x30>)
 8000682:	801a      	strh	r2, [r3, #0]
		SPI_I2S_ClearITPendingBit(SPI1, SPI_I2S_IT_RXNE);
 8000684:	2160      	movs	r1, #96	; 0x60
 8000686:	4802      	ldr	r0, [pc, #8]	; (8000690 <SPI1_IRQHandler+0x2c>)
 8000688:	f000 fbd4 	bl	8000e34 <SPI_I2S_ClearITPendingBit>
	}
}
 800068c:	bf00      	nop
 800068e:	bd80      	pop	{r7, pc}
 8000690:	40013000 	.word	0x40013000
 8000694:	20000030 	.word	0x20000030

08000698 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000698:	480d      	ldr	r0, [pc, #52]	; (80006d0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800069a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800069c:	f000 f826 	bl	80006ec <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006a0:	480c      	ldr	r0, [pc, #48]	; (80006d4 <LoopForever+0x6>)
  ldr r1, =_edata
 80006a2:	490d      	ldr	r1, [pc, #52]	; (80006d8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80006a4:	4a0d      	ldr	r2, [pc, #52]	; (80006dc <LoopForever+0xe>)
  movs r3, #0
 80006a6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006a8:	e002      	b.n	80006b0 <LoopCopyDataInit>

080006aa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006aa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006ac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006ae:	3304      	adds	r3, #4

080006b0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006b0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006b2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006b4:	d3f9      	bcc.n	80006aa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006b6:	4a0a      	ldr	r2, [pc, #40]	; (80006e0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006b8:	4c0a      	ldr	r4, [pc, #40]	; (80006e4 <LoopForever+0x16>)
  movs r3, #0
 80006ba:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006bc:	e001      	b.n	80006c2 <LoopFillZerobss>

080006be <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006be:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006c0:	3204      	adds	r2, #4

080006c2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006c2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006c4:	d3fb      	bcc.n	80006be <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006c6:	f000 fbcf 	bl	8000e68 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006ca:	f7ff ff65 	bl	8000598 <main>

080006ce <LoopForever>:

LoopForever:
    b LoopForever
 80006ce:	e7fe      	b.n	80006ce <LoopForever>
  ldr   r0, =_estack
 80006d0:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80006d4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006d8:	20000014 	.word	0x20000014
  ldr r2, =_sidata
 80006dc:	08000ed0 	.word	0x08000ed0
  ldr r2, =_sbss
 80006e0:	20000014 	.word	0x20000014
  ldr r4, =_ebss
 80006e4:	20000038 	.word	0x20000038

080006e8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006e8:	e7fe      	b.n	80006e8 <ADC_IRQHandler>
	...

080006ec <SystemInit>:
 80006ec:	b580      	push	{r7, lr}
 80006ee:	af00      	add	r7, sp, #0
 80006f0:	4b16      	ldr	r3, [pc, #88]	; (800074c <SystemInit+0x60>)
 80006f2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80006f6:	4a15      	ldr	r2, [pc, #84]	; (800074c <SystemInit+0x60>)
 80006f8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80006fc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8000700:	4b13      	ldr	r3, [pc, #76]	; (8000750 <SystemInit+0x64>)
 8000702:	681b      	ldr	r3, [r3, #0]
 8000704:	4a12      	ldr	r2, [pc, #72]	; (8000750 <SystemInit+0x64>)
 8000706:	f043 0301 	orr.w	r3, r3, #1
 800070a:	6013      	str	r3, [r2, #0]
 800070c:	4b10      	ldr	r3, [pc, #64]	; (8000750 <SystemInit+0x64>)
 800070e:	2200      	movs	r2, #0
 8000710:	609a      	str	r2, [r3, #8]
 8000712:	4b0f      	ldr	r3, [pc, #60]	; (8000750 <SystemInit+0x64>)
 8000714:	681b      	ldr	r3, [r3, #0]
 8000716:	4a0e      	ldr	r2, [pc, #56]	; (8000750 <SystemInit+0x64>)
 8000718:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 800071c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000720:	6013      	str	r3, [r2, #0]
 8000722:	4b0b      	ldr	r3, [pc, #44]	; (8000750 <SystemInit+0x64>)
 8000724:	4a0b      	ldr	r2, [pc, #44]	; (8000754 <SystemInit+0x68>)
 8000726:	605a      	str	r2, [r3, #4]
 8000728:	4b09      	ldr	r3, [pc, #36]	; (8000750 <SystemInit+0x64>)
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	4a08      	ldr	r2, [pc, #32]	; (8000750 <SystemInit+0x64>)
 800072e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000732:	6013      	str	r3, [r2, #0]
 8000734:	4b06      	ldr	r3, [pc, #24]	; (8000750 <SystemInit+0x64>)
 8000736:	2200      	movs	r2, #0
 8000738:	60da      	str	r2, [r3, #12]
 800073a:	f000 f889 	bl	8000850 <SetSysClock>
 800073e:	4b03      	ldr	r3, [pc, #12]	; (800074c <SystemInit+0x60>)
 8000740:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000744:	609a      	str	r2, [r3, #8]
 8000746:	bf00      	nop
 8000748:	bd80      	pop	{r7, pc}
 800074a:	bf00      	nop
 800074c:	e000ed00 	.word	0xe000ed00
 8000750:	40023800 	.word	0x40023800
 8000754:	24003010 	.word	0x24003010

08000758 <SystemCoreClockUpdate>:
 8000758:	b480      	push	{r7}
 800075a:	b087      	sub	sp, #28
 800075c:	af00      	add	r7, sp, #0
 800075e:	2300      	movs	r3, #0
 8000760:	613b      	str	r3, [r7, #16]
 8000762:	2300      	movs	r3, #0
 8000764:	617b      	str	r3, [r7, #20]
 8000766:	2302      	movs	r3, #2
 8000768:	60fb      	str	r3, [r7, #12]
 800076a:	2300      	movs	r3, #0
 800076c:	60bb      	str	r3, [r7, #8]
 800076e:	2302      	movs	r3, #2
 8000770:	607b      	str	r3, [r7, #4]
 8000772:	4b32      	ldr	r3, [pc, #200]	; (800083c <SystemCoreClockUpdate+0xe4>)
 8000774:	689b      	ldr	r3, [r3, #8]
 8000776:	f003 030c 	and.w	r3, r3, #12
 800077a:	613b      	str	r3, [r7, #16]
 800077c:	693b      	ldr	r3, [r7, #16]
 800077e:	2b04      	cmp	r3, #4
 8000780:	d007      	beq.n	8000792 <SystemCoreClockUpdate+0x3a>
 8000782:	2b08      	cmp	r3, #8
 8000784:	d009      	beq.n	800079a <SystemCoreClockUpdate+0x42>
 8000786:	2b00      	cmp	r3, #0
 8000788:	d13d      	bne.n	8000806 <SystemCoreClockUpdate+0xae>
 800078a:	4b2d      	ldr	r3, [pc, #180]	; (8000840 <SystemCoreClockUpdate+0xe8>)
 800078c:	4a2d      	ldr	r2, [pc, #180]	; (8000844 <SystemCoreClockUpdate+0xec>)
 800078e:	601a      	str	r2, [r3, #0]
 8000790:	e03d      	b.n	800080e <SystemCoreClockUpdate+0xb6>
 8000792:	4b2b      	ldr	r3, [pc, #172]	; (8000840 <SystemCoreClockUpdate+0xe8>)
 8000794:	4a2c      	ldr	r2, [pc, #176]	; (8000848 <SystemCoreClockUpdate+0xf0>)
 8000796:	601a      	str	r2, [r3, #0]
 8000798:	e039      	b.n	800080e <SystemCoreClockUpdate+0xb6>
 800079a:	4b28      	ldr	r3, [pc, #160]	; (800083c <SystemCoreClockUpdate+0xe4>)
 800079c:	685b      	ldr	r3, [r3, #4]
 800079e:	0d9b      	lsrs	r3, r3, #22
 80007a0:	f003 0301 	and.w	r3, r3, #1
 80007a4:	60bb      	str	r3, [r7, #8]
 80007a6:	4b25      	ldr	r3, [pc, #148]	; (800083c <SystemCoreClockUpdate+0xe4>)
 80007a8:	685b      	ldr	r3, [r3, #4]
 80007aa:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80007ae:	607b      	str	r3, [r7, #4]
 80007b0:	68bb      	ldr	r3, [r7, #8]
 80007b2:	2b00      	cmp	r3, #0
 80007b4:	d00c      	beq.n	80007d0 <SystemCoreClockUpdate+0x78>
 80007b6:	4a24      	ldr	r2, [pc, #144]	; (8000848 <SystemCoreClockUpdate+0xf0>)
 80007b8:	687b      	ldr	r3, [r7, #4]
 80007ba:	fbb2 f3f3 	udiv	r3, r2, r3
 80007be:	4a1f      	ldr	r2, [pc, #124]	; (800083c <SystemCoreClockUpdate+0xe4>)
 80007c0:	6852      	ldr	r2, [r2, #4]
 80007c2:	0992      	lsrs	r2, r2, #6
 80007c4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80007c8:	fb02 f303 	mul.w	r3, r2, r3
 80007cc:	617b      	str	r3, [r7, #20]
 80007ce:	e00b      	b.n	80007e8 <SystemCoreClockUpdate+0x90>
 80007d0:	4a1c      	ldr	r2, [pc, #112]	; (8000844 <SystemCoreClockUpdate+0xec>)
 80007d2:	687b      	ldr	r3, [r7, #4]
 80007d4:	fbb2 f3f3 	udiv	r3, r2, r3
 80007d8:	4a18      	ldr	r2, [pc, #96]	; (800083c <SystemCoreClockUpdate+0xe4>)
 80007da:	6852      	ldr	r2, [r2, #4]
 80007dc:	0992      	lsrs	r2, r2, #6
 80007de:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80007e2:	fb02 f303 	mul.w	r3, r2, r3
 80007e6:	617b      	str	r3, [r7, #20]
 80007e8:	4b14      	ldr	r3, [pc, #80]	; (800083c <SystemCoreClockUpdate+0xe4>)
 80007ea:	685b      	ldr	r3, [r3, #4]
 80007ec:	0c1b      	lsrs	r3, r3, #16
 80007ee:	f003 0303 	and.w	r3, r3, #3
 80007f2:	3301      	adds	r3, #1
 80007f4:	005b      	lsls	r3, r3, #1
 80007f6:	60fb      	str	r3, [r7, #12]
 80007f8:	697a      	ldr	r2, [r7, #20]
 80007fa:	68fb      	ldr	r3, [r7, #12]
 80007fc:	fbb2 f3f3 	udiv	r3, r2, r3
 8000800:	4a0f      	ldr	r2, [pc, #60]	; (8000840 <SystemCoreClockUpdate+0xe8>)
 8000802:	6013      	str	r3, [r2, #0]
 8000804:	e003      	b.n	800080e <SystemCoreClockUpdate+0xb6>
 8000806:	4b0e      	ldr	r3, [pc, #56]	; (8000840 <SystemCoreClockUpdate+0xe8>)
 8000808:	4a0e      	ldr	r2, [pc, #56]	; (8000844 <SystemCoreClockUpdate+0xec>)
 800080a:	601a      	str	r2, [r3, #0]
 800080c:	bf00      	nop
 800080e:	4b0b      	ldr	r3, [pc, #44]	; (800083c <SystemCoreClockUpdate+0xe4>)
 8000810:	689b      	ldr	r3, [r3, #8]
 8000812:	091b      	lsrs	r3, r3, #4
 8000814:	f003 030f 	and.w	r3, r3, #15
 8000818:	4a0c      	ldr	r2, [pc, #48]	; (800084c <SystemCoreClockUpdate+0xf4>)
 800081a:	5cd3      	ldrb	r3, [r2, r3]
 800081c:	b2db      	uxtb	r3, r3
 800081e:	613b      	str	r3, [r7, #16]
 8000820:	4b07      	ldr	r3, [pc, #28]	; (8000840 <SystemCoreClockUpdate+0xe8>)
 8000822:	681a      	ldr	r2, [r3, #0]
 8000824:	693b      	ldr	r3, [r7, #16]
 8000826:	fa22 f303 	lsr.w	r3, r2, r3
 800082a:	4a05      	ldr	r2, [pc, #20]	; (8000840 <SystemCoreClockUpdate+0xe8>)
 800082c:	6013      	str	r3, [r2, #0]
 800082e:	bf00      	nop
 8000830:	371c      	adds	r7, #28
 8000832:	46bd      	mov	sp, r7
 8000834:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000838:	4770      	bx	lr
 800083a:	bf00      	nop
 800083c:	40023800 	.word	0x40023800
 8000840:	20000000 	.word	0x20000000
 8000844:	00f42400 	.word	0x00f42400
 8000848:	017d7840 	.word	0x017d7840
 800084c:	20000004 	.word	0x20000004

08000850 <SetSysClock>:
 8000850:	b480      	push	{r7}
 8000852:	af00      	add	r7, sp, #0
 8000854:	4b22      	ldr	r3, [pc, #136]	; (80008e0 <SetSysClock+0x90>)
 8000856:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000858:	4a21      	ldr	r2, [pc, #132]	; (80008e0 <SetSysClock+0x90>)
 800085a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800085e:	6413      	str	r3, [r2, #64]	; 0x40
 8000860:	4b20      	ldr	r3, [pc, #128]	; (80008e4 <SetSysClock+0x94>)
 8000862:	681b      	ldr	r3, [r3, #0]
 8000864:	4a1f      	ldr	r2, [pc, #124]	; (80008e4 <SetSysClock+0x94>)
 8000866:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800086a:	6013      	str	r3, [r2, #0]
 800086c:	4b1c      	ldr	r3, [pc, #112]	; (80008e0 <SetSysClock+0x90>)
 800086e:	4a1c      	ldr	r2, [pc, #112]	; (80008e0 <SetSysClock+0x90>)
 8000870:	689b      	ldr	r3, [r3, #8]
 8000872:	6093      	str	r3, [r2, #8]
 8000874:	4b1a      	ldr	r3, [pc, #104]	; (80008e0 <SetSysClock+0x90>)
 8000876:	4a1a      	ldr	r2, [pc, #104]	; (80008e0 <SetSysClock+0x90>)
 8000878:	689b      	ldr	r3, [r3, #8]
 800087a:	6093      	str	r3, [r2, #8]
 800087c:	4b18      	ldr	r3, [pc, #96]	; (80008e0 <SetSysClock+0x90>)
 800087e:	689b      	ldr	r3, [r3, #8]
 8000880:	4a17      	ldr	r2, [pc, #92]	; (80008e0 <SetSysClock+0x90>)
 8000882:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000886:	6093      	str	r3, [r2, #8]
 8000888:	4b15      	ldr	r3, [pc, #84]	; (80008e0 <SetSysClock+0x90>)
 800088a:	4a17      	ldr	r2, [pc, #92]	; (80008e8 <SetSysClock+0x98>)
 800088c:	605a      	str	r2, [r3, #4]
 800088e:	4b14      	ldr	r3, [pc, #80]	; (80008e0 <SetSysClock+0x90>)
 8000890:	681b      	ldr	r3, [r3, #0]
 8000892:	4a13      	ldr	r2, [pc, #76]	; (80008e0 <SetSysClock+0x90>)
 8000894:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000898:	6013      	str	r3, [r2, #0]
 800089a:	bf00      	nop
 800089c:	4b10      	ldr	r3, [pc, #64]	; (80008e0 <SetSysClock+0x90>)
 800089e:	681b      	ldr	r3, [r3, #0]
 80008a0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80008a4:	2b00      	cmp	r3, #0
 80008a6:	d0f9      	beq.n	800089c <SetSysClock+0x4c>
 80008a8:	4b10      	ldr	r3, [pc, #64]	; (80008ec <SetSysClock+0x9c>)
 80008aa:	f240 6202 	movw	r2, #1538	; 0x602
 80008ae:	601a      	str	r2, [r3, #0]
 80008b0:	4b0b      	ldr	r3, [pc, #44]	; (80008e0 <SetSysClock+0x90>)
 80008b2:	689b      	ldr	r3, [r3, #8]
 80008b4:	4a0a      	ldr	r2, [pc, #40]	; (80008e0 <SetSysClock+0x90>)
 80008b6:	f023 0303 	bic.w	r3, r3, #3
 80008ba:	6093      	str	r3, [r2, #8]
 80008bc:	4b08      	ldr	r3, [pc, #32]	; (80008e0 <SetSysClock+0x90>)
 80008be:	689b      	ldr	r3, [r3, #8]
 80008c0:	4a07      	ldr	r2, [pc, #28]	; (80008e0 <SetSysClock+0x90>)
 80008c2:	f043 0302 	orr.w	r3, r3, #2
 80008c6:	6093      	str	r3, [r2, #8]
 80008c8:	bf00      	nop
 80008ca:	4b05      	ldr	r3, [pc, #20]	; (80008e0 <SetSysClock+0x90>)
 80008cc:	689b      	ldr	r3, [r3, #8]
 80008ce:	f003 030c 	and.w	r3, r3, #12
 80008d2:	2b08      	cmp	r3, #8
 80008d4:	d1f9      	bne.n	80008ca <SetSysClock+0x7a>
 80008d6:	bf00      	nop
 80008d8:	46bd      	mov	sp, r7
 80008da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008de:	4770      	bx	lr
 80008e0:	40023800 	.word	0x40023800
 80008e4:	40007000 	.word	0x40007000
 80008e8:	08015410 	.word	0x08015410
 80008ec:	40023c00 	.word	0x40023c00

080008f0 <NVIC_Init>:
 80008f0:	b480      	push	{r7}
 80008f2:	b085      	sub	sp, #20
 80008f4:	af00      	add	r7, sp, #0
 80008f6:	6078      	str	r0, [r7, #4]
 80008f8:	2300      	movs	r3, #0
 80008fa:	73fb      	strb	r3, [r7, #15]
 80008fc:	2300      	movs	r3, #0
 80008fe:	73bb      	strb	r3, [r7, #14]
 8000900:	230f      	movs	r3, #15
 8000902:	737b      	strb	r3, [r7, #13]
 8000904:	687b      	ldr	r3, [r7, #4]
 8000906:	78db      	ldrb	r3, [r3, #3]
 8000908:	2b00      	cmp	r3, #0
 800090a:	d039      	beq.n	8000980 <NVIC_Init+0x90>
 800090c:	4b27      	ldr	r3, [pc, #156]	; (80009ac <NVIC_Init+0xbc>)
 800090e:	68db      	ldr	r3, [r3, #12]
 8000910:	43db      	mvns	r3, r3
 8000912:	0a1b      	lsrs	r3, r3, #8
 8000914:	b2db      	uxtb	r3, r3
 8000916:	f003 0307 	and.w	r3, r3, #7
 800091a:	73fb      	strb	r3, [r7, #15]
 800091c:	7bfb      	ldrb	r3, [r7, #15]
 800091e:	f1c3 0304 	rsb	r3, r3, #4
 8000922:	73bb      	strb	r3, [r7, #14]
 8000924:	7b7a      	ldrb	r2, [r7, #13]
 8000926:	7bfb      	ldrb	r3, [r7, #15]
 8000928:	fa42 f303 	asr.w	r3, r2, r3
 800092c:	737b      	strb	r3, [r7, #13]
 800092e:	687b      	ldr	r3, [r7, #4]
 8000930:	785b      	ldrb	r3, [r3, #1]
 8000932:	461a      	mov	r2, r3
 8000934:	7bbb      	ldrb	r3, [r7, #14]
 8000936:	fa02 f303 	lsl.w	r3, r2, r3
 800093a:	73fb      	strb	r3, [r7, #15]
 800093c:	687b      	ldr	r3, [r7, #4]
 800093e:	789a      	ldrb	r2, [r3, #2]
 8000940:	7b7b      	ldrb	r3, [r7, #13]
 8000942:	4013      	ands	r3, r2
 8000944:	b2da      	uxtb	r2, r3
 8000946:	7bfb      	ldrb	r3, [r7, #15]
 8000948:	4313      	orrs	r3, r2
 800094a:	73fb      	strb	r3, [r7, #15]
 800094c:	7bfb      	ldrb	r3, [r7, #15]
 800094e:	011b      	lsls	r3, r3, #4
 8000950:	73fb      	strb	r3, [r7, #15]
 8000952:	4a17      	ldr	r2, [pc, #92]	; (80009b0 <NVIC_Init+0xc0>)
 8000954:	687b      	ldr	r3, [r7, #4]
 8000956:	781b      	ldrb	r3, [r3, #0]
 8000958:	4413      	add	r3, r2
 800095a:	7bfa      	ldrb	r2, [r7, #15]
 800095c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000960:	687b      	ldr	r3, [r7, #4]
 8000962:	781b      	ldrb	r3, [r3, #0]
 8000964:	f003 031f 	and.w	r3, r3, #31
 8000968:	4911      	ldr	r1, [pc, #68]	; (80009b0 <NVIC_Init+0xc0>)
 800096a:	687a      	ldr	r2, [r7, #4]
 800096c:	7812      	ldrb	r2, [r2, #0]
 800096e:	0952      	lsrs	r2, r2, #5
 8000970:	b2d2      	uxtb	r2, r2
 8000972:	4610      	mov	r0, r2
 8000974:	2201      	movs	r2, #1
 8000976:	fa02 f303 	lsl.w	r3, r2, r3
 800097a:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
 800097e:	e00f      	b.n	80009a0 <NVIC_Init+0xb0>
 8000980:	687b      	ldr	r3, [r7, #4]
 8000982:	781b      	ldrb	r3, [r3, #0]
 8000984:	f003 031f 	and.w	r3, r3, #31
 8000988:	4909      	ldr	r1, [pc, #36]	; (80009b0 <NVIC_Init+0xc0>)
 800098a:	687a      	ldr	r2, [r7, #4]
 800098c:	7812      	ldrb	r2, [r2, #0]
 800098e:	0952      	lsrs	r2, r2, #5
 8000990:	b2d2      	uxtb	r2, r2
 8000992:	4610      	mov	r0, r2
 8000994:	2201      	movs	r2, #1
 8000996:	409a      	lsls	r2, r3
 8000998:	f100 0320 	add.w	r3, r0, #32
 800099c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80009a0:	bf00      	nop
 80009a2:	3714      	adds	r7, #20
 80009a4:	46bd      	mov	sp, r7
 80009a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009aa:	4770      	bx	lr
 80009ac:	e000ed00 	.word	0xe000ed00
 80009b0:	e000e100 	.word	0xe000e100

080009b4 <GPIO_Init>:
 80009b4:	b480      	push	{r7}
 80009b6:	b087      	sub	sp, #28
 80009b8:	af00      	add	r7, sp, #0
 80009ba:	6078      	str	r0, [r7, #4]
 80009bc:	6039      	str	r1, [r7, #0]
 80009be:	2300      	movs	r3, #0
 80009c0:	617b      	str	r3, [r7, #20]
 80009c2:	2300      	movs	r3, #0
 80009c4:	613b      	str	r3, [r7, #16]
 80009c6:	2300      	movs	r3, #0
 80009c8:	60fb      	str	r3, [r7, #12]
 80009ca:	2300      	movs	r3, #0
 80009cc:	617b      	str	r3, [r7, #20]
 80009ce:	e076      	b.n	8000abe <GPIO_Init+0x10a>
 80009d0:	2201      	movs	r2, #1
 80009d2:	697b      	ldr	r3, [r7, #20]
 80009d4:	fa02 f303 	lsl.w	r3, r2, r3
 80009d8:	613b      	str	r3, [r7, #16]
 80009da:	683b      	ldr	r3, [r7, #0]
 80009dc:	681b      	ldr	r3, [r3, #0]
 80009de:	693a      	ldr	r2, [r7, #16]
 80009e0:	4013      	ands	r3, r2
 80009e2:	60fb      	str	r3, [r7, #12]
 80009e4:	68fa      	ldr	r2, [r7, #12]
 80009e6:	693b      	ldr	r3, [r7, #16]
 80009e8:	429a      	cmp	r2, r3
 80009ea:	d165      	bne.n	8000ab8 <GPIO_Init+0x104>
 80009ec:	687b      	ldr	r3, [r7, #4]
 80009ee:	681a      	ldr	r2, [r3, #0]
 80009f0:	697b      	ldr	r3, [r7, #20]
 80009f2:	005b      	lsls	r3, r3, #1
 80009f4:	2103      	movs	r1, #3
 80009f6:	fa01 f303 	lsl.w	r3, r1, r3
 80009fa:	43db      	mvns	r3, r3
 80009fc:	401a      	ands	r2, r3
 80009fe:	687b      	ldr	r3, [r7, #4]
 8000a00:	601a      	str	r2, [r3, #0]
 8000a02:	687b      	ldr	r3, [r7, #4]
 8000a04:	681a      	ldr	r2, [r3, #0]
 8000a06:	683b      	ldr	r3, [r7, #0]
 8000a08:	791b      	ldrb	r3, [r3, #4]
 8000a0a:	4619      	mov	r1, r3
 8000a0c:	697b      	ldr	r3, [r7, #20]
 8000a0e:	005b      	lsls	r3, r3, #1
 8000a10:	fa01 f303 	lsl.w	r3, r1, r3
 8000a14:	431a      	orrs	r2, r3
 8000a16:	687b      	ldr	r3, [r7, #4]
 8000a18:	601a      	str	r2, [r3, #0]
 8000a1a:	683b      	ldr	r3, [r7, #0]
 8000a1c:	791b      	ldrb	r3, [r3, #4]
 8000a1e:	2b01      	cmp	r3, #1
 8000a20:	d003      	beq.n	8000a2a <GPIO_Init+0x76>
 8000a22:	683b      	ldr	r3, [r7, #0]
 8000a24:	791b      	ldrb	r3, [r3, #4]
 8000a26:	2b02      	cmp	r3, #2
 8000a28:	d12e      	bne.n	8000a88 <GPIO_Init+0xd4>
 8000a2a:	687b      	ldr	r3, [r7, #4]
 8000a2c:	689a      	ldr	r2, [r3, #8]
 8000a2e:	697b      	ldr	r3, [r7, #20]
 8000a30:	005b      	lsls	r3, r3, #1
 8000a32:	2103      	movs	r1, #3
 8000a34:	fa01 f303 	lsl.w	r3, r1, r3
 8000a38:	43db      	mvns	r3, r3
 8000a3a:	401a      	ands	r2, r3
 8000a3c:	687b      	ldr	r3, [r7, #4]
 8000a3e:	609a      	str	r2, [r3, #8]
 8000a40:	687b      	ldr	r3, [r7, #4]
 8000a42:	689a      	ldr	r2, [r3, #8]
 8000a44:	683b      	ldr	r3, [r7, #0]
 8000a46:	795b      	ldrb	r3, [r3, #5]
 8000a48:	4619      	mov	r1, r3
 8000a4a:	697b      	ldr	r3, [r7, #20]
 8000a4c:	005b      	lsls	r3, r3, #1
 8000a4e:	fa01 f303 	lsl.w	r3, r1, r3
 8000a52:	431a      	orrs	r2, r3
 8000a54:	687b      	ldr	r3, [r7, #4]
 8000a56:	609a      	str	r2, [r3, #8]
 8000a58:	687b      	ldr	r3, [r7, #4]
 8000a5a:	685a      	ldr	r2, [r3, #4]
 8000a5c:	697b      	ldr	r3, [r7, #20]
 8000a5e:	b29b      	uxth	r3, r3
 8000a60:	4619      	mov	r1, r3
 8000a62:	2301      	movs	r3, #1
 8000a64:	408b      	lsls	r3, r1
 8000a66:	43db      	mvns	r3, r3
 8000a68:	401a      	ands	r2, r3
 8000a6a:	687b      	ldr	r3, [r7, #4]
 8000a6c:	605a      	str	r2, [r3, #4]
 8000a6e:	687b      	ldr	r3, [r7, #4]
 8000a70:	685b      	ldr	r3, [r3, #4]
 8000a72:	683a      	ldr	r2, [r7, #0]
 8000a74:	7992      	ldrb	r2, [r2, #6]
 8000a76:	4611      	mov	r1, r2
 8000a78:	697a      	ldr	r2, [r7, #20]
 8000a7a:	b292      	uxth	r2, r2
 8000a7c:	fa01 f202 	lsl.w	r2, r1, r2
 8000a80:	b292      	uxth	r2, r2
 8000a82:	431a      	orrs	r2, r3
 8000a84:	687b      	ldr	r3, [r7, #4]
 8000a86:	605a      	str	r2, [r3, #4]
 8000a88:	687b      	ldr	r3, [r7, #4]
 8000a8a:	68da      	ldr	r2, [r3, #12]
 8000a8c:	697b      	ldr	r3, [r7, #20]
 8000a8e:	b29b      	uxth	r3, r3
 8000a90:	005b      	lsls	r3, r3, #1
 8000a92:	2103      	movs	r1, #3
 8000a94:	fa01 f303 	lsl.w	r3, r1, r3
 8000a98:	43db      	mvns	r3, r3
 8000a9a:	401a      	ands	r2, r3
 8000a9c:	687b      	ldr	r3, [r7, #4]
 8000a9e:	60da      	str	r2, [r3, #12]
 8000aa0:	687b      	ldr	r3, [r7, #4]
 8000aa2:	68da      	ldr	r2, [r3, #12]
 8000aa4:	683b      	ldr	r3, [r7, #0]
 8000aa6:	79db      	ldrb	r3, [r3, #7]
 8000aa8:	4619      	mov	r1, r3
 8000aaa:	697b      	ldr	r3, [r7, #20]
 8000aac:	005b      	lsls	r3, r3, #1
 8000aae:	fa01 f303 	lsl.w	r3, r1, r3
 8000ab2:	431a      	orrs	r2, r3
 8000ab4:	687b      	ldr	r3, [r7, #4]
 8000ab6:	60da      	str	r2, [r3, #12]
 8000ab8:	697b      	ldr	r3, [r7, #20]
 8000aba:	3301      	adds	r3, #1
 8000abc:	617b      	str	r3, [r7, #20]
 8000abe:	697b      	ldr	r3, [r7, #20]
 8000ac0:	2b0f      	cmp	r3, #15
 8000ac2:	d985      	bls.n	80009d0 <GPIO_Init+0x1c>
 8000ac4:	bf00      	nop
 8000ac6:	371c      	adds	r7, #28
 8000ac8:	46bd      	mov	sp, r7
 8000aca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ace:	4770      	bx	lr

08000ad0 <GPIO_PinAFConfig>:
 8000ad0:	b480      	push	{r7}
 8000ad2:	b085      	sub	sp, #20
 8000ad4:	af00      	add	r7, sp, #0
 8000ad6:	6078      	str	r0, [r7, #4]
 8000ad8:	460b      	mov	r3, r1
 8000ada:	807b      	strh	r3, [r7, #2]
 8000adc:	4613      	mov	r3, r2
 8000ade:	707b      	strb	r3, [r7, #1]
 8000ae0:	2300      	movs	r3, #0
 8000ae2:	60fb      	str	r3, [r7, #12]
 8000ae4:	2300      	movs	r3, #0
 8000ae6:	60bb      	str	r3, [r7, #8]
 8000ae8:	787a      	ldrb	r2, [r7, #1]
 8000aea:	887b      	ldrh	r3, [r7, #2]
 8000aec:	f003 0307 	and.w	r3, r3, #7
 8000af0:	009b      	lsls	r3, r3, #2
 8000af2:	fa02 f303 	lsl.w	r3, r2, r3
 8000af6:	60fb      	str	r3, [r7, #12]
 8000af8:	887b      	ldrh	r3, [r7, #2]
 8000afa:	08db      	lsrs	r3, r3, #3
 8000afc:	b29b      	uxth	r3, r3
 8000afe:	461a      	mov	r2, r3
 8000b00:	687b      	ldr	r3, [r7, #4]
 8000b02:	3208      	adds	r2, #8
 8000b04:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000b08:	887b      	ldrh	r3, [r7, #2]
 8000b0a:	f003 0307 	and.w	r3, r3, #7
 8000b0e:	009b      	lsls	r3, r3, #2
 8000b10:	210f      	movs	r1, #15
 8000b12:	fa01 f303 	lsl.w	r3, r1, r3
 8000b16:	43db      	mvns	r3, r3
 8000b18:	8879      	ldrh	r1, [r7, #2]
 8000b1a:	08c9      	lsrs	r1, r1, #3
 8000b1c:	b289      	uxth	r1, r1
 8000b1e:	4608      	mov	r0, r1
 8000b20:	ea02 0103 	and.w	r1, r2, r3
 8000b24:	687b      	ldr	r3, [r7, #4]
 8000b26:	f100 0208 	add.w	r2, r0, #8
 8000b2a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000b2e:	887b      	ldrh	r3, [r7, #2]
 8000b30:	08db      	lsrs	r3, r3, #3
 8000b32:	b29b      	uxth	r3, r3
 8000b34:	461a      	mov	r2, r3
 8000b36:	687b      	ldr	r3, [r7, #4]
 8000b38:	3208      	adds	r2, #8
 8000b3a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000b3e:	68fa      	ldr	r2, [r7, #12]
 8000b40:	4313      	orrs	r3, r2
 8000b42:	60bb      	str	r3, [r7, #8]
 8000b44:	887b      	ldrh	r3, [r7, #2]
 8000b46:	08db      	lsrs	r3, r3, #3
 8000b48:	b29b      	uxth	r3, r3
 8000b4a:	461a      	mov	r2, r3
 8000b4c:	687b      	ldr	r3, [r7, #4]
 8000b4e:	3208      	adds	r2, #8
 8000b50:	68b9      	ldr	r1, [r7, #8]
 8000b52:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000b56:	bf00      	nop
 8000b58:	3714      	adds	r7, #20
 8000b5a:	46bd      	mov	sp, r7
 8000b5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b60:	4770      	bx	lr
	...

08000b64 <RCC_AHB1PeriphClockCmd>:
 8000b64:	b480      	push	{r7}
 8000b66:	b083      	sub	sp, #12
 8000b68:	af00      	add	r7, sp, #0
 8000b6a:	6078      	str	r0, [r7, #4]
 8000b6c:	460b      	mov	r3, r1
 8000b6e:	70fb      	strb	r3, [r7, #3]
 8000b70:	78fb      	ldrb	r3, [r7, #3]
 8000b72:	2b00      	cmp	r3, #0
 8000b74:	d006      	beq.n	8000b84 <RCC_AHB1PeriphClockCmd+0x20>
 8000b76:	4b0a      	ldr	r3, [pc, #40]	; (8000ba0 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000b78:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b7a:	4909      	ldr	r1, [pc, #36]	; (8000ba0 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000b7c:	687b      	ldr	r3, [r7, #4]
 8000b7e:	4313      	orrs	r3, r2
 8000b80:	630b      	str	r3, [r1, #48]	; 0x30
 8000b82:	e006      	b.n	8000b92 <RCC_AHB1PeriphClockCmd+0x2e>
 8000b84:	4b06      	ldr	r3, [pc, #24]	; (8000ba0 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000b86:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b88:	687b      	ldr	r3, [r7, #4]
 8000b8a:	43db      	mvns	r3, r3
 8000b8c:	4904      	ldr	r1, [pc, #16]	; (8000ba0 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000b8e:	4013      	ands	r3, r2
 8000b90:	630b      	str	r3, [r1, #48]	; 0x30
 8000b92:	bf00      	nop
 8000b94:	370c      	adds	r7, #12
 8000b96:	46bd      	mov	sp, r7
 8000b98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b9c:	4770      	bx	lr
 8000b9e:	bf00      	nop
 8000ba0:	40023800 	.word	0x40023800

08000ba4 <RCC_APB1PeriphClockCmd>:
 8000ba4:	b480      	push	{r7}
 8000ba6:	b083      	sub	sp, #12
 8000ba8:	af00      	add	r7, sp, #0
 8000baa:	6078      	str	r0, [r7, #4]
 8000bac:	460b      	mov	r3, r1
 8000bae:	70fb      	strb	r3, [r7, #3]
 8000bb0:	78fb      	ldrb	r3, [r7, #3]
 8000bb2:	2b00      	cmp	r3, #0
 8000bb4:	d006      	beq.n	8000bc4 <RCC_APB1PeriphClockCmd+0x20>
 8000bb6:	4b0a      	ldr	r3, [pc, #40]	; (8000be0 <RCC_APB1PeriphClockCmd+0x3c>)
 8000bb8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000bba:	4909      	ldr	r1, [pc, #36]	; (8000be0 <RCC_APB1PeriphClockCmd+0x3c>)
 8000bbc:	687b      	ldr	r3, [r7, #4]
 8000bbe:	4313      	orrs	r3, r2
 8000bc0:	640b      	str	r3, [r1, #64]	; 0x40
 8000bc2:	e006      	b.n	8000bd2 <RCC_APB1PeriphClockCmd+0x2e>
 8000bc4:	4b06      	ldr	r3, [pc, #24]	; (8000be0 <RCC_APB1PeriphClockCmd+0x3c>)
 8000bc6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000bc8:	687b      	ldr	r3, [r7, #4]
 8000bca:	43db      	mvns	r3, r3
 8000bcc:	4904      	ldr	r1, [pc, #16]	; (8000be0 <RCC_APB1PeriphClockCmd+0x3c>)
 8000bce:	4013      	ands	r3, r2
 8000bd0:	640b      	str	r3, [r1, #64]	; 0x40
 8000bd2:	bf00      	nop
 8000bd4:	370c      	adds	r7, #12
 8000bd6:	46bd      	mov	sp, r7
 8000bd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bdc:	4770      	bx	lr
 8000bde:	bf00      	nop
 8000be0:	40023800 	.word	0x40023800

08000be4 <RCC_APB2PeriphClockCmd>:
 8000be4:	b480      	push	{r7}
 8000be6:	b083      	sub	sp, #12
 8000be8:	af00      	add	r7, sp, #0
 8000bea:	6078      	str	r0, [r7, #4]
 8000bec:	460b      	mov	r3, r1
 8000bee:	70fb      	strb	r3, [r7, #3]
 8000bf0:	78fb      	ldrb	r3, [r7, #3]
 8000bf2:	2b00      	cmp	r3, #0
 8000bf4:	d006      	beq.n	8000c04 <RCC_APB2PeriphClockCmd+0x20>
 8000bf6:	4b0a      	ldr	r3, [pc, #40]	; (8000c20 <RCC_APB2PeriphClockCmd+0x3c>)
 8000bf8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000bfa:	4909      	ldr	r1, [pc, #36]	; (8000c20 <RCC_APB2PeriphClockCmd+0x3c>)
 8000bfc:	687b      	ldr	r3, [r7, #4]
 8000bfe:	4313      	orrs	r3, r2
 8000c00:	644b      	str	r3, [r1, #68]	; 0x44
 8000c02:	e006      	b.n	8000c12 <RCC_APB2PeriphClockCmd+0x2e>
 8000c04:	4b06      	ldr	r3, [pc, #24]	; (8000c20 <RCC_APB2PeriphClockCmd+0x3c>)
 8000c06:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000c08:	687b      	ldr	r3, [r7, #4]
 8000c0a:	43db      	mvns	r3, r3
 8000c0c:	4904      	ldr	r1, [pc, #16]	; (8000c20 <RCC_APB2PeriphClockCmd+0x3c>)
 8000c0e:	4013      	ands	r3, r2
 8000c10:	644b      	str	r3, [r1, #68]	; 0x44
 8000c12:	bf00      	nop
 8000c14:	370c      	adds	r7, #12
 8000c16:	46bd      	mov	sp, r7
 8000c18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c1c:	4770      	bx	lr
 8000c1e:	bf00      	nop
 8000c20:	40023800 	.word	0x40023800

08000c24 <SPI_Init>:
 8000c24:	b480      	push	{r7}
 8000c26:	b085      	sub	sp, #20
 8000c28:	af00      	add	r7, sp, #0
 8000c2a:	6078      	str	r0, [r7, #4]
 8000c2c:	6039      	str	r1, [r7, #0]
 8000c2e:	2300      	movs	r3, #0
 8000c30:	81fb      	strh	r3, [r7, #14]
 8000c32:	687b      	ldr	r3, [r7, #4]
 8000c34:	881b      	ldrh	r3, [r3, #0]
 8000c36:	81fb      	strh	r3, [r7, #14]
 8000c38:	89fb      	ldrh	r3, [r7, #14]
 8000c3a:	f403 5341 	and.w	r3, r3, #12352	; 0x3040
 8000c3e:	81fb      	strh	r3, [r7, #14]
 8000c40:	683b      	ldr	r3, [r7, #0]
 8000c42:	881a      	ldrh	r2, [r3, #0]
 8000c44:	683b      	ldr	r3, [r7, #0]
 8000c46:	885b      	ldrh	r3, [r3, #2]
 8000c48:	4313      	orrs	r3, r2
 8000c4a:	b29a      	uxth	r2, r3
 8000c4c:	683b      	ldr	r3, [r7, #0]
 8000c4e:	889b      	ldrh	r3, [r3, #4]
 8000c50:	4313      	orrs	r3, r2
 8000c52:	b29a      	uxth	r2, r3
 8000c54:	683b      	ldr	r3, [r7, #0]
 8000c56:	88db      	ldrh	r3, [r3, #6]
 8000c58:	4313      	orrs	r3, r2
 8000c5a:	b29a      	uxth	r2, r3
 8000c5c:	683b      	ldr	r3, [r7, #0]
 8000c5e:	891b      	ldrh	r3, [r3, #8]
 8000c60:	4313      	orrs	r3, r2
 8000c62:	b29a      	uxth	r2, r3
 8000c64:	683b      	ldr	r3, [r7, #0]
 8000c66:	895b      	ldrh	r3, [r3, #10]
 8000c68:	4313      	orrs	r3, r2
 8000c6a:	b29a      	uxth	r2, r3
 8000c6c:	683b      	ldr	r3, [r7, #0]
 8000c6e:	899b      	ldrh	r3, [r3, #12]
 8000c70:	4313      	orrs	r3, r2
 8000c72:	b29a      	uxth	r2, r3
 8000c74:	683b      	ldr	r3, [r7, #0]
 8000c76:	89db      	ldrh	r3, [r3, #14]
 8000c78:	4313      	orrs	r3, r2
 8000c7a:	b29a      	uxth	r2, r3
 8000c7c:	89fb      	ldrh	r3, [r7, #14]
 8000c7e:	4313      	orrs	r3, r2
 8000c80:	81fb      	strh	r3, [r7, #14]
 8000c82:	687b      	ldr	r3, [r7, #4]
 8000c84:	89fa      	ldrh	r2, [r7, #14]
 8000c86:	801a      	strh	r2, [r3, #0]
 8000c88:	687b      	ldr	r3, [r7, #4]
 8000c8a:	8b9b      	ldrh	r3, [r3, #28]
 8000c8c:	b29b      	uxth	r3, r3
 8000c8e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000c92:	b29a      	uxth	r2, r3
 8000c94:	687b      	ldr	r3, [r7, #4]
 8000c96:	839a      	strh	r2, [r3, #28]
 8000c98:	683b      	ldr	r3, [r7, #0]
 8000c9a:	8a1a      	ldrh	r2, [r3, #16]
 8000c9c:	687b      	ldr	r3, [r7, #4]
 8000c9e:	821a      	strh	r2, [r3, #16]
 8000ca0:	bf00      	nop
 8000ca2:	3714      	adds	r7, #20
 8000ca4:	46bd      	mov	sp, r7
 8000ca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000caa:	4770      	bx	lr

08000cac <SPI_Cmd>:
 8000cac:	b480      	push	{r7}
 8000cae:	b083      	sub	sp, #12
 8000cb0:	af00      	add	r7, sp, #0
 8000cb2:	6078      	str	r0, [r7, #4]
 8000cb4:	460b      	mov	r3, r1
 8000cb6:	70fb      	strb	r3, [r7, #3]
 8000cb8:	78fb      	ldrb	r3, [r7, #3]
 8000cba:	2b00      	cmp	r3, #0
 8000cbc:	d008      	beq.n	8000cd0 <SPI_Cmd+0x24>
 8000cbe:	687b      	ldr	r3, [r7, #4]
 8000cc0:	881b      	ldrh	r3, [r3, #0]
 8000cc2:	b29b      	uxth	r3, r3
 8000cc4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000cc8:	b29a      	uxth	r2, r3
 8000cca:	687b      	ldr	r3, [r7, #4]
 8000ccc:	801a      	strh	r2, [r3, #0]
 8000cce:	e007      	b.n	8000ce0 <SPI_Cmd+0x34>
 8000cd0:	687b      	ldr	r3, [r7, #4]
 8000cd2:	881b      	ldrh	r3, [r3, #0]
 8000cd4:	b29b      	uxth	r3, r3
 8000cd6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000cda:	b29a      	uxth	r2, r3
 8000cdc:	687b      	ldr	r3, [r7, #4]
 8000cde:	801a      	strh	r2, [r3, #0]
 8000ce0:	bf00      	nop
 8000ce2:	370c      	adds	r7, #12
 8000ce4:	46bd      	mov	sp, r7
 8000ce6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cea:	4770      	bx	lr

08000cec <SPI_I2S_ReceiveData>:
 8000cec:	b480      	push	{r7}
 8000cee:	b083      	sub	sp, #12
 8000cf0:	af00      	add	r7, sp, #0
 8000cf2:	6078      	str	r0, [r7, #4]
 8000cf4:	687b      	ldr	r3, [r7, #4]
 8000cf6:	899b      	ldrh	r3, [r3, #12]
 8000cf8:	b29b      	uxth	r3, r3
 8000cfa:	4618      	mov	r0, r3
 8000cfc:	370c      	adds	r7, #12
 8000cfe:	46bd      	mov	sp, r7
 8000d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d04:	4770      	bx	lr

08000d06 <SPI_I2S_SendData>:
 8000d06:	b480      	push	{r7}
 8000d08:	b083      	sub	sp, #12
 8000d0a:	af00      	add	r7, sp, #0
 8000d0c:	6078      	str	r0, [r7, #4]
 8000d0e:	460b      	mov	r3, r1
 8000d10:	807b      	strh	r3, [r7, #2]
 8000d12:	687b      	ldr	r3, [r7, #4]
 8000d14:	887a      	ldrh	r2, [r7, #2]
 8000d16:	819a      	strh	r2, [r3, #12]
 8000d18:	bf00      	nop
 8000d1a:	370c      	adds	r7, #12
 8000d1c:	46bd      	mov	sp, r7
 8000d1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d22:	4770      	bx	lr

08000d24 <SPI_I2S_ITConfig>:
 8000d24:	b480      	push	{r7}
 8000d26:	b085      	sub	sp, #20
 8000d28:	af00      	add	r7, sp, #0
 8000d2a:	6078      	str	r0, [r7, #4]
 8000d2c:	460b      	mov	r3, r1
 8000d2e:	70fb      	strb	r3, [r7, #3]
 8000d30:	4613      	mov	r3, r2
 8000d32:	70bb      	strb	r3, [r7, #2]
 8000d34:	2300      	movs	r3, #0
 8000d36:	81fb      	strh	r3, [r7, #14]
 8000d38:	2300      	movs	r3, #0
 8000d3a:	81bb      	strh	r3, [r7, #12]
 8000d3c:	78fb      	ldrb	r3, [r7, #3]
 8000d3e:	091b      	lsrs	r3, r3, #4
 8000d40:	b2db      	uxtb	r3, r3
 8000d42:	81fb      	strh	r3, [r7, #14]
 8000d44:	89fb      	ldrh	r3, [r7, #14]
 8000d46:	2201      	movs	r2, #1
 8000d48:	fa02 f303 	lsl.w	r3, r2, r3
 8000d4c:	81bb      	strh	r3, [r7, #12]
 8000d4e:	78bb      	ldrb	r3, [r7, #2]
 8000d50:	2b00      	cmp	r3, #0
 8000d52:	d008      	beq.n	8000d66 <SPI_I2S_ITConfig+0x42>
 8000d54:	687b      	ldr	r3, [r7, #4]
 8000d56:	889b      	ldrh	r3, [r3, #4]
 8000d58:	b29a      	uxth	r2, r3
 8000d5a:	89bb      	ldrh	r3, [r7, #12]
 8000d5c:	4313      	orrs	r3, r2
 8000d5e:	b29a      	uxth	r2, r3
 8000d60:	687b      	ldr	r3, [r7, #4]
 8000d62:	809a      	strh	r2, [r3, #4]
 8000d64:	e009      	b.n	8000d7a <SPI_I2S_ITConfig+0x56>
 8000d66:	687b      	ldr	r3, [r7, #4]
 8000d68:	889b      	ldrh	r3, [r3, #4]
 8000d6a:	b29a      	uxth	r2, r3
 8000d6c:	89bb      	ldrh	r3, [r7, #12]
 8000d6e:	43db      	mvns	r3, r3
 8000d70:	b29b      	uxth	r3, r3
 8000d72:	4013      	ands	r3, r2
 8000d74:	b29a      	uxth	r2, r3
 8000d76:	687b      	ldr	r3, [r7, #4]
 8000d78:	809a      	strh	r2, [r3, #4]
 8000d7a:	bf00      	nop
 8000d7c:	3714      	adds	r7, #20
 8000d7e:	46bd      	mov	sp, r7
 8000d80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d84:	4770      	bx	lr

08000d86 <SPI_I2S_GetFlagStatus>:
 8000d86:	b480      	push	{r7}
 8000d88:	b085      	sub	sp, #20
 8000d8a:	af00      	add	r7, sp, #0
 8000d8c:	6078      	str	r0, [r7, #4]
 8000d8e:	460b      	mov	r3, r1
 8000d90:	807b      	strh	r3, [r7, #2]
 8000d92:	2300      	movs	r3, #0
 8000d94:	73fb      	strb	r3, [r7, #15]
 8000d96:	687b      	ldr	r3, [r7, #4]
 8000d98:	891b      	ldrh	r3, [r3, #8]
 8000d9a:	b29a      	uxth	r2, r3
 8000d9c:	887b      	ldrh	r3, [r7, #2]
 8000d9e:	4013      	ands	r3, r2
 8000da0:	b29b      	uxth	r3, r3
 8000da2:	2b00      	cmp	r3, #0
 8000da4:	d002      	beq.n	8000dac <SPI_I2S_GetFlagStatus+0x26>
 8000da6:	2301      	movs	r3, #1
 8000da8:	73fb      	strb	r3, [r7, #15]
 8000daa:	e001      	b.n	8000db0 <SPI_I2S_GetFlagStatus+0x2a>
 8000dac:	2300      	movs	r3, #0
 8000dae:	73fb      	strb	r3, [r7, #15]
 8000db0:	7bfb      	ldrb	r3, [r7, #15]
 8000db2:	4618      	mov	r0, r3
 8000db4:	3714      	adds	r7, #20
 8000db6:	46bd      	mov	sp, r7
 8000db8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dbc:	4770      	bx	lr

08000dbe <SPI_I2S_GetITStatus>:
 8000dbe:	b480      	push	{r7}
 8000dc0:	b085      	sub	sp, #20
 8000dc2:	af00      	add	r7, sp, #0
 8000dc4:	6078      	str	r0, [r7, #4]
 8000dc6:	460b      	mov	r3, r1
 8000dc8:	70fb      	strb	r3, [r7, #3]
 8000dca:	2300      	movs	r3, #0
 8000dcc:	73fb      	strb	r3, [r7, #15]
 8000dce:	2300      	movs	r3, #0
 8000dd0:	81bb      	strh	r3, [r7, #12]
 8000dd2:	2300      	movs	r3, #0
 8000dd4:	817b      	strh	r3, [r7, #10]
 8000dd6:	2300      	movs	r3, #0
 8000dd8:	813b      	strh	r3, [r7, #8]
 8000dda:	78fb      	ldrb	r3, [r7, #3]
 8000ddc:	f003 030f 	and.w	r3, r3, #15
 8000de0:	2201      	movs	r2, #1
 8000de2:	fa02 f303 	lsl.w	r3, r2, r3
 8000de6:	81bb      	strh	r3, [r7, #12]
 8000de8:	78fb      	ldrb	r3, [r7, #3]
 8000dea:	091b      	lsrs	r3, r3, #4
 8000dec:	b2db      	uxtb	r3, r3
 8000dee:	817b      	strh	r3, [r7, #10]
 8000df0:	897b      	ldrh	r3, [r7, #10]
 8000df2:	2201      	movs	r2, #1
 8000df4:	fa02 f303 	lsl.w	r3, r2, r3
 8000df8:	817b      	strh	r3, [r7, #10]
 8000dfa:	687b      	ldr	r3, [r7, #4]
 8000dfc:	889b      	ldrh	r3, [r3, #4]
 8000dfe:	b29a      	uxth	r2, r3
 8000e00:	897b      	ldrh	r3, [r7, #10]
 8000e02:	4013      	ands	r3, r2
 8000e04:	813b      	strh	r3, [r7, #8]
 8000e06:	687b      	ldr	r3, [r7, #4]
 8000e08:	891b      	ldrh	r3, [r3, #8]
 8000e0a:	b29a      	uxth	r2, r3
 8000e0c:	89bb      	ldrh	r3, [r7, #12]
 8000e0e:	4013      	ands	r3, r2
 8000e10:	b29b      	uxth	r3, r3
 8000e12:	2b00      	cmp	r3, #0
 8000e14:	d005      	beq.n	8000e22 <SPI_I2S_GetITStatus+0x64>
 8000e16:	893b      	ldrh	r3, [r7, #8]
 8000e18:	2b00      	cmp	r3, #0
 8000e1a:	d002      	beq.n	8000e22 <SPI_I2S_GetITStatus+0x64>
 8000e1c:	2301      	movs	r3, #1
 8000e1e:	73fb      	strb	r3, [r7, #15]
 8000e20:	e001      	b.n	8000e26 <SPI_I2S_GetITStatus+0x68>
 8000e22:	2300      	movs	r3, #0
 8000e24:	73fb      	strb	r3, [r7, #15]
 8000e26:	7bfb      	ldrb	r3, [r7, #15]
 8000e28:	4618      	mov	r0, r3
 8000e2a:	3714      	adds	r7, #20
 8000e2c:	46bd      	mov	sp, r7
 8000e2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e32:	4770      	bx	lr

08000e34 <SPI_I2S_ClearITPendingBit>:
 8000e34:	b480      	push	{r7}
 8000e36:	b085      	sub	sp, #20
 8000e38:	af00      	add	r7, sp, #0
 8000e3a:	6078      	str	r0, [r7, #4]
 8000e3c:	460b      	mov	r3, r1
 8000e3e:	70fb      	strb	r3, [r7, #3]
 8000e40:	2300      	movs	r3, #0
 8000e42:	81fb      	strh	r3, [r7, #14]
 8000e44:	78fb      	ldrb	r3, [r7, #3]
 8000e46:	f003 030f 	and.w	r3, r3, #15
 8000e4a:	2201      	movs	r2, #1
 8000e4c:	fa02 f303 	lsl.w	r3, r2, r3
 8000e50:	81fb      	strh	r3, [r7, #14]
 8000e52:	89fb      	ldrh	r3, [r7, #14]
 8000e54:	43db      	mvns	r3, r3
 8000e56:	b29a      	uxth	r2, r3
 8000e58:	687b      	ldr	r3, [r7, #4]
 8000e5a:	811a      	strh	r2, [r3, #8]
 8000e5c:	bf00      	nop
 8000e5e:	3714      	adds	r7, #20
 8000e60:	46bd      	mov	sp, r7
 8000e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e66:	4770      	bx	lr

08000e68 <__libc_init_array>:
 8000e68:	b570      	push	{r4, r5, r6, lr}
 8000e6a:	4d0d      	ldr	r5, [pc, #52]	; (8000ea0 <__libc_init_array+0x38>)
 8000e6c:	4c0d      	ldr	r4, [pc, #52]	; (8000ea4 <__libc_init_array+0x3c>)
 8000e6e:	1b64      	subs	r4, r4, r5
 8000e70:	10a4      	asrs	r4, r4, #2
 8000e72:	2600      	movs	r6, #0
 8000e74:	42a6      	cmp	r6, r4
 8000e76:	d109      	bne.n	8000e8c <__libc_init_array+0x24>
 8000e78:	4d0b      	ldr	r5, [pc, #44]	; (8000ea8 <__libc_init_array+0x40>)
 8000e7a:	4c0c      	ldr	r4, [pc, #48]	; (8000eac <__libc_init_array+0x44>)
 8000e7c:	f000 f818 	bl	8000eb0 <_init>
 8000e80:	1b64      	subs	r4, r4, r5
 8000e82:	10a4      	asrs	r4, r4, #2
 8000e84:	2600      	movs	r6, #0
 8000e86:	42a6      	cmp	r6, r4
 8000e88:	d105      	bne.n	8000e96 <__libc_init_array+0x2e>
 8000e8a:	bd70      	pop	{r4, r5, r6, pc}
 8000e8c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000e90:	4798      	blx	r3
 8000e92:	3601      	adds	r6, #1
 8000e94:	e7ee      	b.n	8000e74 <__libc_init_array+0xc>
 8000e96:	f855 3b04 	ldr.w	r3, [r5], #4
 8000e9a:	4798      	blx	r3
 8000e9c:	3601      	adds	r6, #1
 8000e9e:	e7f2      	b.n	8000e86 <__libc_init_array+0x1e>
 8000ea0:	08000ec8 	.word	0x08000ec8
 8000ea4:	08000ec8 	.word	0x08000ec8
 8000ea8:	08000ec8 	.word	0x08000ec8
 8000eac:	08000ecc 	.word	0x08000ecc

08000eb0 <_init>:
 8000eb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000eb2:	bf00      	nop
 8000eb4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000eb6:	bc08      	pop	{r3}
 8000eb8:	469e      	mov	lr, r3
 8000eba:	4770      	bx	lr

08000ebc <_fini>:
 8000ebc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ebe:	bf00      	nop
 8000ec0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000ec2:	bc08      	pop	{r3}
 8000ec4:	469e      	mov	lr, r3
 8000ec6:	4770      	bx	lr
