
Lab6.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000dfc  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000fa4  08000fa4  00020024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000fa4  08000fa4  00020024  2**0
                  CONTENTS
  4 .ARM          00000000  08000fa4  08000fa4  00020024  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000fa4  08000fa4  00020024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000fa4  08000fa4  00010fa4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000fa8  08000fa8  00010fa8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000024  20000000  08000fac  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000024  08000fd0  00020024  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000044  08000fd0  00020044  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020024  2**0
                  CONTENTS, READONLY
 12 .debug_info   000030a4  00000000  00000000  00020054  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000a3a  00000000  00000000  000230f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000418  00000000  00000000  00023b38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000003b0  00000000  00000000  00023f50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000c76f  00000000  00000000  00024300  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000027a8  00000000  00000000  00030a6f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003db7e  00000000  00000000  00033217  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000ce  00000000  00000000  00070d95  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000110c  00000000  00000000  00070e64  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000024 	.word	0x20000024
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000f8c 	.word	0x08000f8c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000028 	.word	0x20000028
 80001e4:	08000f8c 	.word	0x08000f8c

080001e8 <Led_Init>:
#define Check_Data			0x10

uint16_t Data_Receive = 0;

void Led_Init()
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b082      	sub	sp, #8
 80001ec:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 80001ee:	2101      	movs	r1, #1
 80001f0:	2001      	movs	r0, #1
 80001f2:	f000 fcab 	bl	8000b4c <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Pin = LED;
 80001f6:	2320      	movs	r3, #32
 80001f8:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80001fa:	2301      	movs	r3, #1
 80001fc:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80001fe:	2300      	movs	r3, #0
 8000200:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_Speed =  GPIO_Speed_100MHz;
 8000202:	2303      	movs	r3, #3
 8000204:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 8000206:	2302      	movs	r3, #2
 8000208:	71fb      	strb	r3, [r7, #7]

	GPIO_Init(GPIOA, &GPIO_InitStructure);
 800020a:	463b      	mov	r3, r7
 800020c:	4619      	mov	r1, r3
 800020e:	4803      	ldr	r0, [pc, #12]	; (800021c <Led_Init+0x34>)
 8000210:	f000 fb1c 	bl	800084c <GPIO_Init>
}
 8000214:	bf00      	nop
 8000216:	3708      	adds	r7, #8
 8000218:	46bd      	mov	sp, r7
 800021a:	bd80      	pop	{r7, pc}
 800021c:	40020000 	.word	0x40020000

08000220 <Button_Init>:
void Button_Init(void){
 8000220:	b580      	push	{r7, lr}
 8000222:	b082      	sub	sp, #8
 8000224:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);
 8000226:	2101      	movs	r1, #1
 8000228:	2004      	movs	r0, #4
 800022a:	f000 fc8f 	bl	8000b4c <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Pin = BUTTON;
 800022e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000232:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 8000234:	2300      	movs	r3, #0
 8000236:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 8000238:	2303      	movs	r3, #3
 800023a:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 800023c:	2301      	movs	r3, #1
 800023e:	71fb      	strb	r3, [r7, #7]

	GPIO_Init(GPIOC, &GPIO_InitStructure);
 8000240:	463b      	mov	r3, r7
 8000242:	4619      	mov	r1, r3
 8000244:	4803      	ldr	r0, [pc, #12]	; (8000254 <Button_Init+0x34>)
 8000246:	f000 fb01 	bl	800084c <GPIO_Init>
}
 800024a:	bf00      	nop
 800024c:	3708      	adds	r7, #8
 800024e:	46bd      	mov	sp, r7
 8000250:	bd80      	pop	{r7, pc}
 8000252:	bf00      	nop
 8000254:	40020800 	.word	0x40020800

08000258 <Delay_ms>:
void Delay_ms(uint32_t milliseconds){
 8000258:	b480      	push	{r7}
 800025a:	b085      	sub	sp, #20
 800025c:	af00      	add	r7, sp, #0
 800025e:	6078      	str	r0, [r7, #4]
	for(int i = 0; i < milliseconds; i++){
 8000260:	2300      	movs	r3, #0
 8000262:	60fb      	str	r3, [r7, #12]
 8000264:	e00d      	b.n	8000282 <Delay_ms+0x2a>
		for(int j = 0; j < 5000; j++);
 8000266:	2300      	movs	r3, #0
 8000268:	60bb      	str	r3, [r7, #8]
 800026a:	e002      	b.n	8000272 <Delay_ms+0x1a>
 800026c:	68bb      	ldr	r3, [r7, #8]
 800026e:	3301      	adds	r3, #1
 8000270:	60bb      	str	r3, [r7, #8]
 8000272:	68bb      	ldr	r3, [r7, #8]
 8000274:	f241 3287 	movw	r2, #4999	; 0x1387
 8000278:	4293      	cmp	r3, r2
 800027a:	ddf7      	ble.n	800026c <Delay_ms+0x14>
	for(int i = 0; i < milliseconds; i++){
 800027c:	68fb      	ldr	r3, [r7, #12]
 800027e:	3301      	adds	r3, #1
 8000280:	60fb      	str	r3, [r7, #12]
 8000282:	68fb      	ldr	r3, [r7, #12]
 8000284:	687a      	ldr	r2, [r7, #4]
 8000286:	429a      	cmp	r2, r3
 8000288:	d8ed      	bhi.n	8000266 <Delay_ms+0xe>
	}
}
 800028a:	bf00      	nop
 800028c:	bf00      	nop
 800028e:	3714      	adds	r7, #20
 8000290:	46bd      	mov	sp, r7
 8000292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000296:	4770      	bx	lr

08000298 <Led_Control>:
static
void Led_Control(GPIO_TypeDef *pGPIOx, uint8_t GPIO_PIN, uint8_t Status){
 8000298:	b480      	push	{r7}
 800029a:	b083      	sub	sp, #12
 800029c:	af00      	add	r7, sp, #0
 800029e:	6078      	str	r0, [r7, #4]
 80002a0:	460b      	mov	r3, r1
 80002a2:	70fb      	strb	r3, [r7, #3]
 80002a4:	4613      	mov	r3, r2
 80002a6:	70bb      	strb	r3, [r7, #2]
	if(Status == GPIO_PIN_SET){
 80002a8:	78bb      	ldrb	r3, [r7, #2]
 80002aa:	2b01      	cmp	r3, #1
 80002ac:	d10e      	bne.n	80002cc <Led_Control+0x34>
		pGPIOx->BSRRL |= 1 << GPIO_PIN;
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	8b1b      	ldrh	r3, [r3, #24]
 80002b2:	b29b      	uxth	r3, r3
 80002b4:	b21a      	sxth	r2, r3
 80002b6:	78fb      	ldrb	r3, [r7, #3]
 80002b8:	2101      	movs	r1, #1
 80002ba:	fa01 f303 	lsl.w	r3, r1, r3
 80002be:	b21b      	sxth	r3, r3
 80002c0:	4313      	orrs	r3, r2
 80002c2:	b21b      	sxth	r3, r3
 80002c4:	b29a      	uxth	r2, r3
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	831a      	strh	r2, [r3, #24]
	}else{
		pGPIOx->BSRRH |= 1 << GPIO_PIN;
	}
}
 80002ca:	e00d      	b.n	80002e8 <Led_Control+0x50>
		pGPIOx->BSRRH |= 1 << GPIO_PIN;
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	8b5b      	ldrh	r3, [r3, #26]
 80002d0:	b29b      	uxth	r3, r3
 80002d2:	b21a      	sxth	r2, r3
 80002d4:	78fb      	ldrb	r3, [r7, #3]
 80002d6:	2101      	movs	r1, #1
 80002d8:	fa01 f303 	lsl.w	r3, r1, r3
 80002dc:	b21b      	sxth	r3, r3
 80002de:	4313      	orrs	r3, r2
 80002e0:	b21b      	sxth	r3, r3
 80002e2:	b29a      	uxth	r2, r3
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	835a      	strh	r2, [r3, #26]
}
 80002e8:	bf00      	nop
 80002ea:	370c      	adds	r7, #12
 80002ec:	46bd      	mov	sp, r7
 80002ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f2:	4770      	bx	lr

080002f4 <GPIO_READ_PIN>:
static
uint8_t GPIO_READ_PIN(GPIO_TypeDef *pGOIOx, uint8_t GPIO_PIN){
 80002f4:	b480      	push	{r7}
 80002f6:	b085      	sub	sp, #20
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	6078      	str	r0, [r7, #4]
 80002fc:	460b      	mov	r3, r1
 80002fe:	70fb      	strb	r3, [r7, #3]
	uint8_t Read_Pin;

	Read_Pin = ((pGOIOx->IDR) >>  GPIO_PIN) & 0x01;
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	691a      	ldr	r2, [r3, #16]
 8000304:	78fb      	ldrb	r3, [r7, #3]
 8000306:	fa22 f303 	lsr.w	r3, r2, r3
 800030a:	b2db      	uxtb	r3, r3
 800030c:	f003 0301 	and.w	r3, r3, #1
 8000310:	73fb      	strb	r3, [r7, #15]
	return Read_Pin;
 8000312:	7bfb      	ldrb	r3, [r7, #15]
}
 8000314:	4618      	mov	r0, r3
 8000316:	3714      	adds	r7, #20
 8000318:	46bd      	mov	sp, r7
 800031a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800031e:	4770      	bx	lr

08000320 <USART6_Init>:
 * @param  None
 * @retval None
 */
static
void USART6_Init(void)
{
 8000320:	b580      	push	{r7, lr}
 8000322:	b086      	sub	sp, #24
 8000324:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef     GPIO_InitStructure;
	USART_InitTypeDef    USART_InitStructure;

	//Enable Clock USART1 And GPIOC------------------------------------------
	RCC_AHB1PeriphClockCmd(USART6_GPIO_CLOCK, ENABLE);
 8000326:	2101      	movs	r1, #1
 8000328:	2004      	movs	r0, #4
 800032a:	f000 fc0f 	bl	8000b4c <RCC_AHB1PeriphClockCmd>

	//Initializes GPIO Use USART6 Periperal----------------------------------
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 800032e:	2302      	movs	r3, #2
 8000330:	753b      	strb	r3, [r7, #20]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000332:	2302      	movs	r3, #2
 8000334:	757b      	strb	r3, [r7, #21]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000336:	2300      	movs	r3, #0
 8000338:	75bb      	strb	r3, [r7, #22]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 800033a:	2301      	movs	r3, #1
 800033c:	75fb      	strb	r3, [r7, #23]

	GPIO_InitStructure.GPIO_Pin = USART6_TX;
 800033e:	2340      	movs	r3, #64	; 0x40
 8000340:	613b      	str	r3, [r7, #16]
	GPIO_Init(USART6_GPIO, &GPIO_InitStructure);
 8000342:	f107 0310 	add.w	r3, r7, #16
 8000346:	4619      	mov	r1, r3
 8000348:	4812      	ldr	r0, [pc, #72]	; (8000394 <USART6_Init+0x74>)
 800034a:	f000 fa7f 	bl	800084c <GPIO_Init>

	//Initializes GPIO As Alternate function mode----------------------------
	GPIO_PinAFConfig(USART6_GPIO, GPIO_PinSource6, GPIO_AF_USART6);
 800034e:	2208      	movs	r2, #8
 8000350:	2106      	movs	r1, #6
 8000352:	4810      	ldr	r0, [pc, #64]	; (8000394 <USART6_Init+0x74>)
 8000354:	f000 fb08 	bl	8000968 <GPIO_PinAFConfig>

	//Initializes USART6 Periperal-------------------------------------------
	RCC_APB2PeriphClockCmd(USART6_CLOCK,ENABLE);
 8000358:	2101      	movs	r1, #1
 800035a:	2020      	movs	r0, #32
 800035c:	f000 fc16 	bl	8000b8c <RCC_APB2PeriphClockCmd>

	USART_InitStructure.USART_BaudRate = USARTx_Baud;
 8000360:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8000364:	603b      	str	r3, [r7, #0]
	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 8000366:	2300      	movs	r3, #0
 8000368:	80bb      	strh	r3, [r7, #4]
	USART_InitStructure.USART_StopBits = USART_StopBits_1;
 800036a:	2300      	movs	r3, #0
 800036c:	80fb      	strh	r3, [r7, #6]
	USART_InitStructure.USART_Parity = USART_Parity_No;
 800036e:	2300      	movs	r3, #0
 8000370:	813b      	strh	r3, [r7, #8]
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 8000372:	2300      	movs	r3, #0
 8000374:	81bb      	strh	r3, [r7, #12]
	USART_InitStructure.USART_Mode = USART_Mode_Tx;
 8000376:	2308      	movs	r3, #8
 8000378:	817b      	strh	r3, [r7, #10]

	USART_Init(USART6, &USART_InitStructure);
 800037a:	463b      	mov	r3, r7
 800037c:	4619      	mov	r1, r3
 800037e:	4806      	ldr	r0, [pc, #24]	; (8000398 <USART6_Init+0x78>)
 8000380:	f000 fc24 	bl	8000bcc <USART_Init>

	USART_Cmd(USART6, ENABLE);
 8000384:	2101      	movs	r1, #1
 8000386:	4804      	ldr	r0, [pc, #16]	; (8000398 <USART6_Init+0x78>)
 8000388:	f000 fcda 	bl	8000d40 <USART_Cmd>

}
 800038c:	bf00      	nop
 800038e:	3718      	adds	r7, #24
 8000390:	46bd      	mov	sp, r7
 8000392:	bd80      	pop	{r7, pc}
 8000394:	40020800 	.word	0x40020800
 8000398:	40011400 	.word	0x40011400

0800039c <USART1_Init>:
 * @param  None
 * @retval None
 */
static
void USART1_Init(void)
{
 800039c:	b580      	push	{r7, lr}
 800039e:	b088      	sub	sp, #32
 80003a0:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef     GPIO_InitStructure;
    USART_InitTypeDef    USART_InitStructure;
    NVIC_InitTypeDef     NVIC_InitStructure;

    //Enable clock GPIO And USART1------------------------------------------
    RCC_AHB1PeriphClockCmd(USART1_GPIO_CLOCK, ENABLE);
 80003a2:	2101      	movs	r1, #1
 80003a4:	2002      	movs	r0, #2
 80003a6:	f000 fbd1 	bl	8000b4c <RCC_AHB1PeriphClockCmd>

    //Initializes GPIO Use USART1 Periperal---------------------------------
    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;
 80003aa:	2302      	movs	r3, #2
 80003ac:	773b      	strb	r3, [r7, #28]
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80003ae:	2302      	movs	r3, #2
 80003b0:	777b      	strb	r3, [r7, #29]
    GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80003b2:	2300      	movs	r3, #0
 80003b4:	77bb      	strb	r3, [r7, #30]
    GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
 80003b6:	2301      	movs	r3, #1
 80003b8:	77fb      	strb	r3, [r7, #31]

    GPIO_InitStructure.GPIO_Pin = USART1_RX ;
 80003ba:	2380      	movs	r3, #128	; 0x80
 80003bc:	61bb      	str	r3, [r7, #24]
    GPIO_Init(USART1_GPIO, &GPIO_InitStructure);
 80003be:	f107 0318 	add.w	r3, r7, #24
 80003c2:	4619      	mov	r1, r3
 80003c4:	481e      	ldr	r0, [pc, #120]	; (8000440 <USART1_Init+0xa4>)
 80003c6:	f000 fa41 	bl	800084c <GPIO_Init>


    //Initializes GPIO As Alternate function mode---------------------------
	GPIO_PinAFConfig(USART1_GPIO, GPIO_PinSource7, GPIO_AF_USART1);
 80003ca:	2207      	movs	r2, #7
 80003cc:	2107      	movs	r1, #7
 80003ce:	481c      	ldr	r0, [pc, #112]	; (8000440 <USART1_Init+0xa4>)
 80003d0:	f000 faca 	bl	8000968 <GPIO_PinAFConfig>

	//Initializes USART1 Periperal------------------------------------------
	RCC_APB2PeriphClockCmd(USART1_CLOCK, ENABLE);
 80003d4:	2101      	movs	r1, #1
 80003d6:	2010      	movs	r0, #16
 80003d8:	f000 fbd8 	bl	8000b8c <RCC_APB2PeriphClockCmd>

    USART_InitStructure.USART_BaudRate = USARTx_Baud;
 80003dc:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80003e0:	60bb      	str	r3, [r7, #8]
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 80003e2:	2300      	movs	r3, #0
 80003e4:	81bb      	strh	r3, [r7, #12]
    USART_InitStructure.USART_StopBits = USART_StopBits_1;
 80003e6:	2300      	movs	r3, #0
 80003e8:	81fb      	strh	r3, [r7, #14]
    USART_InitStructure.USART_Parity = USART_Parity_No;
 80003ea:	2300      	movs	r3, #0
 80003ec:	823b      	strh	r3, [r7, #16]
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 80003ee:	2300      	movs	r3, #0
 80003f0:	82bb      	strh	r3, [r7, #20]
    USART_InitStructure.USART_Mode = USART_Mode_Rx;
 80003f2:	2304      	movs	r3, #4
 80003f4:	827b      	strh	r3, [r7, #18]

    USART_Init(USART1, &USART_InitStructure);
 80003f6:	f107 0308 	add.w	r3, r7, #8
 80003fa:	4619      	mov	r1, r3
 80003fc:	4811      	ldr	r0, [pc, #68]	; (8000444 <USART1_Init+0xa8>)
 80003fe:	f000 fbe5 	bl	8000bcc <USART_Init>

	//Enable USART----------------------------------------------------------
    USART_Cmd(USART1, ENABLE);
 8000402:	2101      	movs	r1, #1
 8000404:	480f      	ldr	r0, [pc, #60]	; (8000444 <USART1_Init+0xa8>)
 8000406:	f000 fc9b 	bl	8000d40 <USART_Cmd>

    //Enable USARTx Receive interrupts--------------------------------------
    USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
 800040a:	2201      	movs	r2, #1
 800040c:	f240 5125 	movw	r1, #1317	; 0x525
 8000410:	480c      	ldr	r0, [pc, #48]	; (8000444 <USART1_Init+0xa8>)
 8000412:	f000 fcd7 	bl	8000dc4 <USART_ITConfig>

	//NVIC configuration----------------------------------------------------
	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
 8000416:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800041a:	f000 f9a1 	bl	8000760 <NVIC_PriorityGroupConfig>

	//Enable the USARTx Interrupt-------------------------------------------
	NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
 800041e:	2325      	movs	r3, #37	; 0x25
 8000420:	713b      	strb	r3, [r7, #4]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 8000422:	2300      	movs	r3, #0
 8000424:	717b      	strb	r3, [r7, #5]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 8000426:	2300      	movs	r3, #0
 8000428:	71bb      	strb	r3, [r7, #6]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 800042a:	2301      	movs	r3, #1
 800042c:	71fb      	strb	r3, [r7, #7]
	NVIC_Init(&NVIC_InitStructure);
 800042e:	1d3b      	adds	r3, r7, #4
 8000430:	4618      	mov	r0, r3
 8000432:	f000 f9a9 	bl	8000788 <NVIC_Init>
}
 8000436:	bf00      	nop
 8000438:	3720      	adds	r7, #32
 800043a:	46bd      	mov	sp, r7
 800043c:	bd80      	pop	{r7, pc}
 800043e:	bf00      	nop
 8000440:	40020400 	.word	0x40020400
 8000444:	40011000 	.word	0x40011000

08000448 <USART1_IRQHandler>:

void USART1_IRQHandler(void){
 8000448:	b580      	push	{r7, lr}
 800044a:	af00      	add	r7, sp, #0
	if(USART_GetITStatus(USART1, USART_IT_RXNE) == SET){
 800044c:	f240 5125 	movw	r1, #1317	; 0x525
 8000450:	4809      	ldr	r0, [pc, #36]	; (8000478 <USART1_IRQHandler+0x30>)
 8000452:	f000 fcff 	bl	8000e54 <USART_GetITStatus>
 8000456:	4603      	mov	r3, r0
 8000458:	2b01      	cmp	r3, #1
 800045a:	d106      	bne.n	800046a <USART1_IRQHandler+0x22>
		Data_Receive = USART_ReceiveData(USART1);
 800045c:	4806      	ldr	r0, [pc, #24]	; (8000478 <USART1_IRQHandler+0x30>)
 800045e:	f000 fca1 	bl	8000da4 <USART_ReceiveData>
 8000462:	4603      	mov	r3, r0
 8000464:	461a      	mov	r2, r3
 8000466:	4b05      	ldr	r3, [pc, #20]	; (800047c <USART1_IRQHandler+0x34>)
 8000468:	801a      	strh	r2, [r3, #0]
	}
	USART_ClearITPendingBit(USART1, USART_IT_RXNE);
 800046a:	f240 5125 	movw	r1, #1317	; 0x525
 800046e:	4802      	ldr	r0, [pc, #8]	; (8000478 <USART1_IRQHandler+0x30>)
 8000470:	f000 fd4b 	bl	8000f0a <USART_ClearITPendingBit>
}
 8000474:	bf00      	nop
 8000476:	bd80      	pop	{r7, pc}
 8000478:	40011000 	.word	0x40011000
 800047c:	20000040 	.word	0x20000040

08000480 <main>:

int main(){
 8000480:	b580      	push	{r7, lr}
 8000482:	b082      	sub	sp, #8
 8000484:	af00      	add	r7, sp, #0
	SystemCoreClockUpdate();
 8000486:	f000 f89f 	bl	80005c8 <SystemCoreClockUpdate>
	Button_Init();
 800048a:	f7ff fec9 	bl	8000220 <Button_Init>
	Led_Init();
 800048e:	f7ff feab 	bl	80001e8 <Led_Init>
	USART1_Init();
 8000492:	f7ff ff83 	bl	800039c <USART1_Init>
	USART6_Init();
 8000496:	f7ff ff43 	bl	8000320 <USART6_Init>
	while(1){
	//	Delay_ms(1000);
		if(GPIO_READ_PIN(GPIOC, PIN_BUTTON) == 0){
 800049a:	210d      	movs	r1, #13
 800049c:	4816      	ldr	r0, [pc, #88]	; (80004f8 <main+0x78>)
 800049e:	f7ff ff29 	bl	80002f4 <GPIO_READ_PIN>
 80004a2:	4603      	mov	r3, r0
 80004a4:	2b00      	cmp	r3, #0
 80004a6:	d103      	bne.n	80004b0 <main+0x30>
				USART_SendData(USART6, 0x10);
 80004a8:	2110      	movs	r1, #16
 80004aa:	4814      	ldr	r0, [pc, #80]	; (80004fc <main+0x7c>)
 80004ac:	f000 fc68 	bl	8000d80 <USART_SendData>
//		Delay_ms(100);
//		if(USART_GetITStatus(USART1, USART_IT_RXNE) == SET){
//			Data_Receive = USART_ReceiveData(USART1);
//		}
		//Data_Receive = USART_ReceiveData(USART1);
			if(Data_Receive == Check_Data){
 80004b0:	4b13      	ldr	r3, [pc, #76]	; (8000500 <main+0x80>)
 80004b2:	881b      	ldrh	r3, [r3, #0]
 80004b4:	2b10      	cmp	r3, #16
 80004b6:	d1f0      	bne.n	800049a <main+0x1a>
				for(int i = 0; i < 5; i++){
 80004b8:	2300      	movs	r3, #0
 80004ba:	607b      	str	r3, [r7, #4]
 80004bc:	e014      	b.n	80004e8 <main+0x68>
					Led_Control(GPIOA, PIN_LED, GPIO_PIN_SET);
 80004be:	2201      	movs	r2, #1
 80004c0:	2105      	movs	r1, #5
 80004c2:	4810      	ldr	r0, [pc, #64]	; (8000504 <main+0x84>)
 80004c4:	f7ff fee8 	bl	8000298 <Led_Control>
					Delay_ms(1000);
 80004c8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80004cc:	f7ff fec4 	bl	8000258 <Delay_ms>
					Led_Control(GPIOA, PIN_LED, GPIO_PIN_RESET);
 80004d0:	2200      	movs	r2, #0
 80004d2:	2105      	movs	r1, #5
 80004d4:	480b      	ldr	r0, [pc, #44]	; (8000504 <main+0x84>)
 80004d6:	f7ff fedf 	bl	8000298 <Led_Control>
					Delay_ms(1000);
 80004da:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80004de:	f7ff febb 	bl	8000258 <Delay_ms>
				for(int i = 0; i < 5; i++){
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	3301      	adds	r3, #1
 80004e6:	607b      	str	r3, [r7, #4]
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	2b04      	cmp	r3, #4
 80004ec:	dde7      	ble.n	80004be <main+0x3e>
				}
				Data_Receive = 0;
 80004ee:	4b04      	ldr	r3, [pc, #16]	; (8000500 <main+0x80>)
 80004f0:	2200      	movs	r2, #0
 80004f2:	801a      	strh	r2, [r3, #0]
		if(GPIO_READ_PIN(GPIOC, PIN_BUTTON) == 0){
 80004f4:	e7d1      	b.n	800049a <main+0x1a>
 80004f6:	bf00      	nop
 80004f8:	40020800 	.word	0x40020800
 80004fc:	40011400 	.word	0x40011400
 8000500:	20000040 	.word	0x20000040
 8000504:	40020000 	.word	0x40020000

08000508 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000508:	480d      	ldr	r0, [pc, #52]	; (8000540 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800050a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800050c:	480d      	ldr	r0, [pc, #52]	; (8000544 <LoopForever+0x6>)
  ldr r1, =_edata
 800050e:	490e      	ldr	r1, [pc, #56]	; (8000548 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000510:	4a0e      	ldr	r2, [pc, #56]	; (800054c <LoopForever+0xe>)
  movs r3, #0
 8000512:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000514:	e002      	b.n	800051c <LoopCopyDataInit>

08000516 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000516:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000518:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800051a:	3304      	adds	r3, #4

0800051c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800051c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800051e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000520:	d3f9      	bcc.n	8000516 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000522:	4a0b      	ldr	r2, [pc, #44]	; (8000550 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000524:	4c0b      	ldr	r4, [pc, #44]	; (8000554 <LoopForever+0x16>)
  movs r3, #0
 8000526:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000528:	e001      	b.n	800052e <LoopFillZerobss>

0800052a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800052a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800052c:	3204      	adds	r2, #4

0800052e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800052e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000530:	d3fb      	bcc.n	800052a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000532:	f000 f813 	bl	800055c <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 8000536:	f000 fd05 	bl	8000f44 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800053a:	f7ff ffa1 	bl	8000480 <main>

0800053e <LoopForever>:

LoopForever:
    b LoopForever
 800053e:	e7fe      	b.n	800053e <LoopForever>
  ldr   r0, =_estack
 8000540:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000544:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000548:	20000024 	.word	0x20000024
  ldr r2, =_sidata
 800054c:	08000fac 	.word	0x08000fac
  ldr r2, =_sbss
 8000550:	20000024 	.word	0x20000024
  ldr r4, =_ebss
 8000554:	20000044 	.word	0x20000044

08000558 <ADC_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000558:	e7fe      	b.n	8000558 <ADC_IRQHandler>
	...

0800055c <SystemInit>:
 800055c:	b580      	push	{r7, lr}
 800055e:	af00      	add	r7, sp, #0
 8000560:	4b16      	ldr	r3, [pc, #88]	; (80005bc <SystemInit+0x60>)
 8000562:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000566:	4a15      	ldr	r2, [pc, #84]	; (80005bc <SystemInit+0x60>)
 8000568:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800056c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8000570:	4b13      	ldr	r3, [pc, #76]	; (80005c0 <SystemInit+0x64>)
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	4a12      	ldr	r2, [pc, #72]	; (80005c0 <SystemInit+0x64>)
 8000576:	f043 0301 	orr.w	r3, r3, #1
 800057a:	6013      	str	r3, [r2, #0]
 800057c:	4b10      	ldr	r3, [pc, #64]	; (80005c0 <SystemInit+0x64>)
 800057e:	2200      	movs	r2, #0
 8000580:	609a      	str	r2, [r3, #8]
 8000582:	4b0f      	ldr	r3, [pc, #60]	; (80005c0 <SystemInit+0x64>)
 8000584:	681b      	ldr	r3, [r3, #0]
 8000586:	4a0e      	ldr	r2, [pc, #56]	; (80005c0 <SystemInit+0x64>)
 8000588:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 800058c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000590:	6013      	str	r3, [r2, #0]
 8000592:	4b0b      	ldr	r3, [pc, #44]	; (80005c0 <SystemInit+0x64>)
 8000594:	4a0b      	ldr	r2, [pc, #44]	; (80005c4 <SystemInit+0x68>)
 8000596:	605a      	str	r2, [r3, #4]
 8000598:	4b09      	ldr	r3, [pc, #36]	; (80005c0 <SystemInit+0x64>)
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	4a08      	ldr	r2, [pc, #32]	; (80005c0 <SystemInit+0x64>)
 800059e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80005a2:	6013      	str	r3, [r2, #0]
 80005a4:	4b06      	ldr	r3, [pc, #24]	; (80005c0 <SystemInit+0x64>)
 80005a6:	2200      	movs	r2, #0
 80005a8:	60da      	str	r2, [r3, #12]
 80005aa:	f000 f889 	bl	80006c0 <SetSysClock>
 80005ae:	4b03      	ldr	r3, [pc, #12]	; (80005bc <SystemInit+0x60>)
 80005b0:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80005b4:	609a      	str	r2, [r3, #8]
 80005b6:	bf00      	nop
 80005b8:	bd80      	pop	{r7, pc}
 80005ba:	bf00      	nop
 80005bc:	e000ed00 	.word	0xe000ed00
 80005c0:	40023800 	.word	0x40023800
 80005c4:	24003010 	.word	0x24003010

080005c8 <SystemCoreClockUpdate>:
 80005c8:	b480      	push	{r7}
 80005ca:	b087      	sub	sp, #28
 80005cc:	af00      	add	r7, sp, #0
 80005ce:	2300      	movs	r3, #0
 80005d0:	613b      	str	r3, [r7, #16]
 80005d2:	2300      	movs	r3, #0
 80005d4:	617b      	str	r3, [r7, #20]
 80005d6:	2302      	movs	r3, #2
 80005d8:	60fb      	str	r3, [r7, #12]
 80005da:	2300      	movs	r3, #0
 80005dc:	60bb      	str	r3, [r7, #8]
 80005de:	2302      	movs	r3, #2
 80005e0:	607b      	str	r3, [r7, #4]
 80005e2:	4b32      	ldr	r3, [pc, #200]	; (80006ac <SystemCoreClockUpdate+0xe4>)
 80005e4:	689b      	ldr	r3, [r3, #8]
 80005e6:	f003 030c 	and.w	r3, r3, #12
 80005ea:	613b      	str	r3, [r7, #16]
 80005ec:	693b      	ldr	r3, [r7, #16]
 80005ee:	2b04      	cmp	r3, #4
 80005f0:	d007      	beq.n	8000602 <SystemCoreClockUpdate+0x3a>
 80005f2:	2b08      	cmp	r3, #8
 80005f4:	d009      	beq.n	800060a <SystemCoreClockUpdate+0x42>
 80005f6:	2b00      	cmp	r3, #0
 80005f8:	d13d      	bne.n	8000676 <SystemCoreClockUpdate+0xae>
 80005fa:	4b2d      	ldr	r3, [pc, #180]	; (80006b0 <SystemCoreClockUpdate+0xe8>)
 80005fc:	4a2d      	ldr	r2, [pc, #180]	; (80006b4 <SystemCoreClockUpdate+0xec>)
 80005fe:	601a      	str	r2, [r3, #0]
 8000600:	e03d      	b.n	800067e <SystemCoreClockUpdate+0xb6>
 8000602:	4b2b      	ldr	r3, [pc, #172]	; (80006b0 <SystemCoreClockUpdate+0xe8>)
 8000604:	4a2c      	ldr	r2, [pc, #176]	; (80006b8 <SystemCoreClockUpdate+0xf0>)
 8000606:	601a      	str	r2, [r3, #0]
 8000608:	e039      	b.n	800067e <SystemCoreClockUpdate+0xb6>
 800060a:	4b28      	ldr	r3, [pc, #160]	; (80006ac <SystemCoreClockUpdate+0xe4>)
 800060c:	685b      	ldr	r3, [r3, #4]
 800060e:	0d9b      	lsrs	r3, r3, #22
 8000610:	f003 0301 	and.w	r3, r3, #1
 8000614:	60bb      	str	r3, [r7, #8]
 8000616:	4b25      	ldr	r3, [pc, #148]	; (80006ac <SystemCoreClockUpdate+0xe4>)
 8000618:	685b      	ldr	r3, [r3, #4]
 800061a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800061e:	607b      	str	r3, [r7, #4]
 8000620:	68bb      	ldr	r3, [r7, #8]
 8000622:	2b00      	cmp	r3, #0
 8000624:	d00c      	beq.n	8000640 <SystemCoreClockUpdate+0x78>
 8000626:	4a24      	ldr	r2, [pc, #144]	; (80006b8 <SystemCoreClockUpdate+0xf0>)
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	fbb2 f3f3 	udiv	r3, r2, r3
 800062e:	4a1f      	ldr	r2, [pc, #124]	; (80006ac <SystemCoreClockUpdate+0xe4>)
 8000630:	6852      	ldr	r2, [r2, #4]
 8000632:	0992      	lsrs	r2, r2, #6
 8000634:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000638:	fb02 f303 	mul.w	r3, r2, r3
 800063c:	617b      	str	r3, [r7, #20]
 800063e:	e00b      	b.n	8000658 <SystemCoreClockUpdate+0x90>
 8000640:	4a1c      	ldr	r2, [pc, #112]	; (80006b4 <SystemCoreClockUpdate+0xec>)
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	fbb2 f3f3 	udiv	r3, r2, r3
 8000648:	4a18      	ldr	r2, [pc, #96]	; (80006ac <SystemCoreClockUpdate+0xe4>)
 800064a:	6852      	ldr	r2, [r2, #4]
 800064c:	0992      	lsrs	r2, r2, #6
 800064e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000652:	fb02 f303 	mul.w	r3, r2, r3
 8000656:	617b      	str	r3, [r7, #20]
 8000658:	4b14      	ldr	r3, [pc, #80]	; (80006ac <SystemCoreClockUpdate+0xe4>)
 800065a:	685b      	ldr	r3, [r3, #4]
 800065c:	0c1b      	lsrs	r3, r3, #16
 800065e:	f003 0303 	and.w	r3, r3, #3
 8000662:	3301      	adds	r3, #1
 8000664:	005b      	lsls	r3, r3, #1
 8000666:	60fb      	str	r3, [r7, #12]
 8000668:	697a      	ldr	r2, [r7, #20]
 800066a:	68fb      	ldr	r3, [r7, #12]
 800066c:	fbb2 f3f3 	udiv	r3, r2, r3
 8000670:	4a0f      	ldr	r2, [pc, #60]	; (80006b0 <SystemCoreClockUpdate+0xe8>)
 8000672:	6013      	str	r3, [r2, #0]
 8000674:	e003      	b.n	800067e <SystemCoreClockUpdate+0xb6>
 8000676:	4b0e      	ldr	r3, [pc, #56]	; (80006b0 <SystemCoreClockUpdate+0xe8>)
 8000678:	4a0e      	ldr	r2, [pc, #56]	; (80006b4 <SystemCoreClockUpdate+0xec>)
 800067a:	601a      	str	r2, [r3, #0]
 800067c:	bf00      	nop
 800067e:	4b0b      	ldr	r3, [pc, #44]	; (80006ac <SystemCoreClockUpdate+0xe4>)
 8000680:	689b      	ldr	r3, [r3, #8]
 8000682:	091b      	lsrs	r3, r3, #4
 8000684:	f003 030f 	and.w	r3, r3, #15
 8000688:	4a0c      	ldr	r2, [pc, #48]	; (80006bc <SystemCoreClockUpdate+0xf4>)
 800068a:	5cd3      	ldrb	r3, [r2, r3]
 800068c:	b2db      	uxtb	r3, r3
 800068e:	613b      	str	r3, [r7, #16]
 8000690:	4b07      	ldr	r3, [pc, #28]	; (80006b0 <SystemCoreClockUpdate+0xe8>)
 8000692:	681a      	ldr	r2, [r3, #0]
 8000694:	693b      	ldr	r3, [r7, #16]
 8000696:	fa22 f303 	lsr.w	r3, r2, r3
 800069a:	4a05      	ldr	r2, [pc, #20]	; (80006b0 <SystemCoreClockUpdate+0xe8>)
 800069c:	6013      	str	r3, [r2, #0]
 800069e:	bf00      	nop
 80006a0:	371c      	adds	r7, #28
 80006a2:	46bd      	mov	sp, r7
 80006a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006a8:	4770      	bx	lr
 80006aa:	bf00      	nop
 80006ac:	40023800 	.word	0x40023800
 80006b0:	20000000 	.word	0x20000000
 80006b4:	00f42400 	.word	0x00f42400
 80006b8:	017d7840 	.word	0x017d7840
 80006bc:	20000004 	.word	0x20000004

080006c0 <SetSysClock>:
 80006c0:	b480      	push	{r7}
 80006c2:	af00      	add	r7, sp, #0
 80006c4:	4b22      	ldr	r3, [pc, #136]	; (8000750 <SetSysClock+0x90>)
 80006c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80006c8:	4a21      	ldr	r2, [pc, #132]	; (8000750 <SetSysClock+0x90>)
 80006ca:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80006ce:	6413      	str	r3, [r2, #64]	; 0x40
 80006d0:	4b20      	ldr	r3, [pc, #128]	; (8000754 <SetSysClock+0x94>)
 80006d2:	681b      	ldr	r3, [r3, #0]
 80006d4:	4a1f      	ldr	r2, [pc, #124]	; (8000754 <SetSysClock+0x94>)
 80006d6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80006da:	6013      	str	r3, [r2, #0]
 80006dc:	4b1c      	ldr	r3, [pc, #112]	; (8000750 <SetSysClock+0x90>)
 80006de:	4a1c      	ldr	r2, [pc, #112]	; (8000750 <SetSysClock+0x90>)
 80006e0:	689b      	ldr	r3, [r3, #8]
 80006e2:	6093      	str	r3, [r2, #8]
 80006e4:	4b1a      	ldr	r3, [pc, #104]	; (8000750 <SetSysClock+0x90>)
 80006e6:	4a1a      	ldr	r2, [pc, #104]	; (8000750 <SetSysClock+0x90>)
 80006e8:	689b      	ldr	r3, [r3, #8]
 80006ea:	6093      	str	r3, [r2, #8]
 80006ec:	4b18      	ldr	r3, [pc, #96]	; (8000750 <SetSysClock+0x90>)
 80006ee:	689b      	ldr	r3, [r3, #8]
 80006f0:	4a17      	ldr	r2, [pc, #92]	; (8000750 <SetSysClock+0x90>)
 80006f2:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80006f6:	6093      	str	r3, [r2, #8]
 80006f8:	4b15      	ldr	r3, [pc, #84]	; (8000750 <SetSysClock+0x90>)
 80006fa:	4a17      	ldr	r2, [pc, #92]	; (8000758 <SetSysClock+0x98>)
 80006fc:	605a      	str	r2, [r3, #4]
 80006fe:	4b14      	ldr	r3, [pc, #80]	; (8000750 <SetSysClock+0x90>)
 8000700:	681b      	ldr	r3, [r3, #0]
 8000702:	4a13      	ldr	r2, [pc, #76]	; (8000750 <SetSysClock+0x90>)
 8000704:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000708:	6013      	str	r3, [r2, #0]
 800070a:	bf00      	nop
 800070c:	4b10      	ldr	r3, [pc, #64]	; (8000750 <SetSysClock+0x90>)
 800070e:	681b      	ldr	r3, [r3, #0]
 8000710:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000714:	2b00      	cmp	r3, #0
 8000716:	d0f9      	beq.n	800070c <SetSysClock+0x4c>
 8000718:	4b10      	ldr	r3, [pc, #64]	; (800075c <SetSysClock+0x9c>)
 800071a:	f240 6202 	movw	r2, #1538	; 0x602
 800071e:	601a      	str	r2, [r3, #0]
 8000720:	4b0b      	ldr	r3, [pc, #44]	; (8000750 <SetSysClock+0x90>)
 8000722:	689b      	ldr	r3, [r3, #8]
 8000724:	4a0a      	ldr	r2, [pc, #40]	; (8000750 <SetSysClock+0x90>)
 8000726:	f023 0303 	bic.w	r3, r3, #3
 800072a:	6093      	str	r3, [r2, #8]
 800072c:	4b08      	ldr	r3, [pc, #32]	; (8000750 <SetSysClock+0x90>)
 800072e:	689b      	ldr	r3, [r3, #8]
 8000730:	4a07      	ldr	r2, [pc, #28]	; (8000750 <SetSysClock+0x90>)
 8000732:	f043 0302 	orr.w	r3, r3, #2
 8000736:	6093      	str	r3, [r2, #8]
 8000738:	bf00      	nop
 800073a:	4b05      	ldr	r3, [pc, #20]	; (8000750 <SetSysClock+0x90>)
 800073c:	689b      	ldr	r3, [r3, #8]
 800073e:	f003 030c 	and.w	r3, r3, #12
 8000742:	2b08      	cmp	r3, #8
 8000744:	d1f9      	bne.n	800073a <SetSysClock+0x7a>
 8000746:	bf00      	nop
 8000748:	46bd      	mov	sp, r7
 800074a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800074e:	4770      	bx	lr
 8000750:	40023800 	.word	0x40023800
 8000754:	40007000 	.word	0x40007000
 8000758:	08015410 	.word	0x08015410
 800075c:	40023c00 	.word	0x40023c00

08000760 <NVIC_PriorityGroupConfig>:
 8000760:	b480      	push	{r7}
 8000762:	b083      	sub	sp, #12
 8000764:	af00      	add	r7, sp, #0
 8000766:	6078      	str	r0, [r7, #4]
 8000768:	4a06      	ldr	r2, [pc, #24]	; (8000784 <NVIC_PriorityGroupConfig+0x24>)
 800076a:	687b      	ldr	r3, [r7, #4]
 800076c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000770:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000774:	60d3      	str	r3, [r2, #12]
 8000776:	bf00      	nop
 8000778:	370c      	adds	r7, #12
 800077a:	46bd      	mov	sp, r7
 800077c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000780:	4770      	bx	lr
 8000782:	bf00      	nop
 8000784:	e000ed00 	.word	0xe000ed00

08000788 <NVIC_Init>:
 8000788:	b480      	push	{r7}
 800078a:	b085      	sub	sp, #20
 800078c:	af00      	add	r7, sp, #0
 800078e:	6078      	str	r0, [r7, #4]
 8000790:	2300      	movs	r3, #0
 8000792:	73fb      	strb	r3, [r7, #15]
 8000794:	2300      	movs	r3, #0
 8000796:	73bb      	strb	r3, [r7, #14]
 8000798:	230f      	movs	r3, #15
 800079a:	737b      	strb	r3, [r7, #13]
 800079c:	687b      	ldr	r3, [r7, #4]
 800079e:	78db      	ldrb	r3, [r3, #3]
 80007a0:	2b00      	cmp	r3, #0
 80007a2:	d039      	beq.n	8000818 <NVIC_Init+0x90>
 80007a4:	4b27      	ldr	r3, [pc, #156]	; (8000844 <NVIC_Init+0xbc>)
 80007a6:	68db      	ldr	r3, [r3, #12]
 80007a8:	43db      	mvns	r3, r3
 80007aa:	0a1b      	lsrs	r3, r3, #8
 80007ac:	b2db      	uxtb	r3, r3
 80007ae:	f003 0307 	and.w	r3, r3, #7
 80007b2:	73fb      	strb	r3, [r7, #15]
 80007b4:	7bfb      	ldrb	r3, [r7, #15]
 80007b6:	f1c3 0304 	rsb	r3, r3, #4
 80007ba:	73bb      	strb	r3, [r7, #14]
 80007bc:	7b7a      	ldrb	r2, [r7, #13]
 80007be:	7bfb      	ldrb	r3, [r7, #15]
 80007c0:	fa42 f303 	asr.w	r3, r2, r3
 80007c4:	737b      	strb	r3, [r7, #13]
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	785b      	ldrb	r3, [r3, #1]
 80007ca:	461a      	mov	r2, r3
 80007cc:	7bbb      	ldrb	r3, [r7, #14]
 80007ce:	fa02 f303 	lsl.w	r3, r2, r3
 80007d2:	73fb      	strb	r3, [r7, #15]
 80007d4:	687b      	ldr	r3, [r7, #4]
 80007d6:	789a      	ldrb	r2, [r3, #2]
 80007d8:	7b7b      	ldrb	r3, [r7, #13]
 80007da:	4013      	ands	r3, r2
 80007dc:	b2da      	uxtb	r2, r3
 80007de:	7bfb      	ldrb	r3, [r7, #15]
 80007e0:	4313      	orrs	r3, r2
 80007e2:	73fb      	strb	r3, [r7, #15]
 80007e4:	7bfb      	ldrb	r3, [r7, #15]
 80007e6:	011b      	lsls	r3, r3, #4
 80007e8:	73fb      	strb	r3, [r7, #15]
 80007ea:	4a17      	ldr	r2, [pc, #92]	; (8000848 <NVIC_Init+0xc0>)
 80007ec:	687b      	ldr	r3, [r7, #4]
 80007ee:	781b      	ldrb	r3, [r3, #0]
 80007f0:	4413      	add	r3, r2
 80007f2:	7bfa      	ldrb	r2, [r7, #15]
 80007f4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80007f8:	687b      	ldr	r3, [r7, #4]
 80007fa:	781b      	ldrb	r3, [r3, #0]
 80007fc:	f003 031f 	and.w	r3, r3, #31
 8000800:	4911      	ldr	r1, [pc, #68]	; (8000848 <NVIC_Init+0xc0>)
 8000802:	687a      	ldr	r2, [r7, #4]
 8000804:	7812      	ldrb	r2, [r2, #0]
 8000806:	0952      	lsrs	r2, r2, #5
 8000808:	b2d2      	uxtb	r2, r2
 800080a:	4610      	mov	r0, r2
 800080c:	2201      	movs	r2, #1
 800080e:	fa02 f303 	lsl.w	r3, r2, r3
 8000812:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
 8000816:	e00f      	b.n	8000838 <NVIC_Init+0xb0>
 8000818:	687b      	ldr	r3, [r7, #4]
 800081a:	781b      	ldrb	r3, [r3, #0]
 800081c:	f003 031f 	and.w	r3, r3, #31
 8000820:	4909      	ldr	r1, [pc, #36]	; (8000848 <NVIC_Init+0xc0>)
 8000822:	687a      	ldr	r2, [r7, #4]
 8000824:	7812      	ldrb	r2, [r2, #0]
 8000826:	0952      	lsrs	r2, r2, #5
 8000828:	b2d2      	uxtb	r2, r2
 800082a:	4610      	mov	r0, r2
 800082c:	2201      	movs	r2, #1
 800082e:	409a      	lsls	r2, r3
 8000830:	f100 0320 	add.w	r3, r0, #32
 8000834:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000838:	bf00      	nop
 800083a:	3714      	adds	r7, #20
 800083c:	46bd      	mov	sp, r7
 800083e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000842:	4770      	bx	lr
 8000844:	e000ed00 	.word	0xe000ed00
 8000848:	e000e100 	.word	0xe000e100

0800084c <GPIO_Init>:
 800084c:	b480      	push	{r7}
 800084e:	b087      	sub	sp, #28
 8000850:	af00      	add	r7, sp, #0
 8000852:	6078      	str	r0, [r7, #4]
 8000854:	6039      	str	r1, [r7, #0]
 8000856:	2300      	movs	r3, #0
 8000858:	617b      	str	r3, [r7, #20]
 800085a:	2300      	movs	r3, #0
 800085c:	613b      	str	r3, [r7, #16]
 800085e:	2300      	movs	r3, #0
 8000860:	60fb      	str	r3, [r7, #12]
 8000862:	2300      	movs	r3, #0
 8000864:	617b      	str	r3, [r7, #20]
 8000866:	e076      	b.n	8000956 <GPIO_Init+0x10a>
 8000868:	2201      	movs	r2, #1
 800086a:	697b      	ldr	r3, [r7, #20]
 800086c:	fa02 f303 	lsl.w	r3, r2, r3
 8000870:	613b      	str	r3, [r7, #16]
 8000872:	683b      	ldr	r3, [r7, #0]
 8000874:	681b      	ldr	r3, [r3, #0]
 8000876:	693a      	ldr	r2, [r7, #16]
 8000878:	4013      	ands	r3, r2
 800087a:	60fb      	str	r3, [r7, #12]
 800087c:	68fa      	ldr	r2, [r7, #12]
 800087e:	693b      	ldr	r3, [r7, #16]
 8000880:	429a      	cmp	r2, r3
 8000882:	d165      	bne.n	8000950 <GPIO_Init+0x104>
 8000884:	687b      	ldr	r3, [r7, #4]
 8000886:	681a      	ldr	r2, [r3, #0]
 8000888:	697b      	ldr	r3, [r7, #20]
 800088a:	005b      	lsls	r3, r3, #1
 800088c:	2103      	movs	r1, #3
 800088e:	fa01 f303 	lsl.w	r3, r1, r3
 8000892:	43db      	mvns	r3, r3
 8000894:	401a      	ands	r2, r3
 8000896:	687b      	ldr	r3, [r7, #4]
 8000898:	601a      	str	r2, [r3, #0]
 800089a:	687b      	ldr	r3, [r7, #4]
 800089c:	681a      	ldr	r2, [r3, #0]
 800089e:	683b      	ldr	r3, [r7, #0]
 80008a0:	791b      	ldrb	r3, [r3, #4]
 80008a2:	4619      	mov	r1, r3
 80008a4:	697b      	ldr	r3, [r7, #20]
 80008a6:	005b      	lsls	r3, r3, #1
 80008a8:	fa01 f303 	lsl.w	r3, r1, r3
 80008ac:	431a      	orrs	r2, r3
 80008ae:	687b      	ldr	r3, [r7, #4]
 80008b0:	601a      	str	r2, [r3, #0]
 80008b2:	683b      	ldr	r3, [r7, #0]
 80008b4:	791b      	ldrb	r3, [r3, #4]
 80008b6:	2b01      	cmp	r3, #1
 80008b8:	d003      	beq.n	80008c2 <GPIO_Init+0x76>
 80008ba:	683b      	ldr	r3, [r7, #0]
 80008bc:	791b      	ldrb	r3, [r3, #4]
 80008be:	2b02      	cmp	r3, #2
 80008c0:	d12e      	bne.n	8000920 <GPIO_Init+0xd4>
 80008c2:	687b      	ldr	r3, [r7, #4]
 80008c4:	689a      	ldr	r2, [r3, #8]
 80008c6:	697b      	ldr	r3, [r7, #20]
 80008c8:	005b      	lsls	r3, r3, #1
 80008ca:	2103      	movs	r1, #3
 80008cc:	fa01 f303 	lsl.w	r3, r1, r3
 80008d0:	43db      	mvns	r3, r3
 80008d2:	401a      	ands	r2, r3
 80008d4:	687b      	ldr	r3, [r7, #4]
 80008d6:	609a      	str	r2, [r3, #8]
 80008d8:	687b      	ldr	r3, [r7, #4]
 80008da:	689a      	ldr	r2, [r3, #8]
 80008dc:	683b      	ldr	r3, [r7, #0]
 80008de:	795b      	ldrb	r3, [r3, #5]
 80008e0:	4619      	mov	r1, r3
 80008e2:	697b      	ldr	r3, [r7, #20]
 80008e4:	005b      	lsls	r3, r3, #1
 80008e6:	fa01 f303 	lsl.w	r3, r1, r3
 80008ea:	431a      	orrs	r2, r3
 80008ec:	687b      	ldr	r3, [r7, #4]
 80008ee:	609a      	str	r2, [r3, #8]
 80008f0:	687b      	ldr	r3, [r7, #4]
 80008f2:	685a      	ldr	r2, [r3, #4]
 80008f4:	697b      	ldr	r3, [r7, #20]
 80008f6:	b29b      	uxth	r3, r3
 80008f8:	4619      	mov	r1, r3
 80008fa:	2301      	movs	r3, #1
 80008fc:	408b      	lsls	r3, r1
 80008fe:	43db      	mvns	r3, r3
 8000900:	401a      	ands	r2, r3
 8000902:	687b      	ldr	r3, [r7, #4]
 8000904:	605a      	str	r2, [r3, #4]
 8000906:	687b      	ldr	r3, [r7, #4]
 8000908:	685b      	ldr	r3, [r3, #4]
 800090a:	683a      	ldr	r2, [r7, #0]
 800090c:	7992      	ldrb	r2, [r2, #6]
 800090e:	4611      	mov	r1, r2
 8000910:	697a      	ldr	r2, [r7, #20]
 8000912:	b292      	uxth	r2, r2
 8000914:	fa01 f202 	lsl.w	r2, r1, r2
 8000918:	b292      	uxth	r2, r2
 800091a:	431a      	orrs	r2, r3
 800091c:	687b      	ldr	r3, [r7, #4]
 800091e:	605a      	str	r2, [r3, #4]
 8000920:	687b      	ldr	r3, [r7, #4]
 8000922:	68da      	ldr	r2, [r3, #12]
 8000924:	697b      	ldr	r3, [r7, #20]
 8000926:	b29b      	uxth	r3, r3
 8000928:	005b      	lsls	r3, r3, #1
 800092a:	2103      	movs	r1, #3
 800092c:	fa01 f303 	lsl.w	r3, r1, r3
 8000930:	43db      	mvns	r3, r3
 8000932:	401a      	ands	r2, r3
 8000934:	687b      	ldr	r3, [r7, #4]
 8000936:	60da      	str	r2, [r3, #12]
 8000938:	687b      	ldr	r3, [r7, #4]
 800093a:	68da      	ldr	r2, [r3, #12]
 800093c:	683b      	ldr	r3, [r7, #0]
 800093e:	79db      	ldrb	r3, [r3, #7]
 8000940:	4619      	mov	r1, r3
 8000942:	697b      	ldr	r3, [r7, #20]
 8000944:	005b      	lsls	r3, r3, #1
 8000946:	fa01 f303 	lsl.w	r3, r1, r3
 800094a:	431a      	orrs	r2, r3
 800094c:	687b      	ldr	r3, [r7, #4]
 800094e:	60da      	str	r2, [r3, #12]
 8000950:	697b      	ldr	r3, [r7, #20]
 8000952:	3301      	adds	r3, #1
 8000954:	617b      	str	r3, [r7, #20]
 8000956:	697b      	ldr	r3, [r7, #20]
 8000958:	2b0f      	cmp	r3, #15
 800095a:	d985      	bls.n	8000868 <GPIO_Init+0x1c>
 800095c:	bf00      	nop
 800095e:	371c      	adds	r7, #28
 8000960:	46bd      	mov	sp, r7
 8000962:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000966:	4770      	bx	lr

08000968 <GPIO_PinAFConfig>:
 8000968:	b480      	push	{r7}
 800096a:	b085      	sub	sp, #20
 800096c:	af00      	add	r7, sp, #0
 800096e:	6078      	str	r0, [r7, #4]
 8000970:	460b      	mov	r3, r1
 8000972:	807b      	strh	r3, [r7, #2]
 8000974:	4613      	mov	r3, r2
 8000976:	707b      	strb	r3, [r7, #1]
 8000978:	2300      	movs	r3, #0
 800097a:	60fb      	str	r3, [r7, #12]
 800097c:	2300      	movs	r3, #0
 800097e:	60bb      	str	r3, [r7, #8]
 8000980:	787a      	ldrb	r2, [r7, #1]
 8000982:	887b      	ldrh	r3, [r7, #2]
 8000984:	f003 0307 	and.w	r3, r3, #7
 8000988:	009b      	lsls	r3, r3, #2
 800098a:	fa02 f303 	lsl.w	r3, r2, r3
 800098e:	60fb      	str	r3, [r7, #12]
 8000990:	887b      	ldrh	r3, [r7, #2]
 8000992:	08db      	lsrs	r3, r3, #3
 8000994:	b29b      	uxth	r3, r3
 8000996:	461a      	mov	r2, r3
 8000998:	687b      	ldr	r3, [r7, #4]
 800099a:	3208      	adds	r2, #8
 800099c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80009a0:	887b      	ldrh	r3, [r7, #2]
 80009a2:	f003 0307 	and.w	r3, r3, #7
 80009a6:	009b      	lsls	r3, r3, #2
 80009a8:	210f      	movs	r1, #15
 80009aa:	fa01 f303 	lsl.w	r3, r1, r3
 80009ae:	43db      	mvns	r3, r3
 80009b0:	8879      	ldrh	r1, [r7, #2]
 80009b2:	08c9      	lsrs	r1, r1, #3
 80009b4:	b289      	uxth	r1, r1
 80009b6:	4608      	mov	r0, r1
 80009b8:	ea02 0103 	and.w	r1, r2, r3
 80009bc:	687b      	ldr	r3, [r7, #4]
 80009be:	f100 0208 	add.w	r2, r0, #8
 80009c2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80009c6:	887b      	ldrh	r3, [r7, #2]
 80009c8:	08db      	lsrs	r3, r3, #3
 80009ca:	b29b      	uxth	r3, r3
 80009cc:	461a      	mov	r2, r3
 80009ce:	687b      	ldr	r3, [r7, #4]
 80009d0:	3208      	adds	r2, #8
 80009d2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80009d6:	68fa      	ldr	r2, [r7, #12]
 80009d8:	4313      	orrs	r3, r2
 80009da:	60bb      	str	r3, [r7, #8]
 80009dc:	887b      	ldrh	r3, [r7, #2]
 80009de:	08db      	lsrs	r3, r3, #3
 80009e0:	b29b      	uxth	r3, r3
 80009e2:	461a      	mov	r2, r3
 80009e4:	687b      	ldr	r3, [r7, #4]
 80009e6:	3208      	adds	r2, #8
 80009e8:	68b9      	ldr	r1, [r7, #8]
 80009ea:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80009ee:	bf00      	nop
 80009f0:	3714      	adds	r7, #20
 80009f2:	46bd      	mov	sp, r7
 80009f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009f8:	4770      	bx	lr
	...

080009fc <RCC_GetClocksFreq>:
 80009fc:	b480      	push	{r7}
 80009fe:	b089      	sub	sp, #36	; 0x24
 8000a00:	af00      	add	r7, sp, #0
 8000a02:	6078      	str	r0, [r7, #4]
 8000a04:	2300      	movs	r3, #0
 8000a06:	61bb      	str	r3, [r7, #24]
 8000a08:	2300      	movs	r3, #0
 8000a0a:	617b      	str	r3, [r7, #20]
 8000a0c:	2300      	movs	r3, #0
 8000a0e:	61fb      	str	r3, [r7, #28]
 8000a10:	2302      	movs	r3, #2
 8000a12:	613b      	str	r3, [r7, #16]
 8000a14:	2300      	movs	r3, #0
 8000a16:	60fb      	str	r3, [r7, #12]
 8000a18:	2302      	movs	r3, #2
 8000a1a:	60bb      	str	r3, [r7, #8]
 8000a1c:	4b47      	ldr	r3, [pc, #284]	; (8000b3c <RCC_GetClocksFreq+0x140>)
 8000a1e:	689b      	ldr	r3, [r3, #8]
 8000a20:	f003 030c 	and.w	r3, r3, #12
 8000a24:	61bb      	str	r3, [r7, #24]
 8000a26:	69bb      	ldr	r3, [r7, #24]
 8000a28:	2b04      	cmp	r3, #4
 8000a2a:	d007      	beq.n	8000a3c <RCC_GetClocksFreq+0x40>
 8000a2c:	2b08      	cmp	r3, #8
 8000a2e:	d009      	beq.n	8000a44 <RCC_GetClocksFreq+0x48>
 8000a30:	2b00      	cmp	r3, #0
 8000a32:	d13d      	bne.n	8000ab0 <RCC_GetClocksFreq+0xb4>
 8000a34:	687b      	ldr	r3, [r7, #4]
 8000a36:	4a42      	ldr	r2, [pc, #264]	; (8000b40 <RCC_GetClocksFreq+0x144>)
 8000a38:	601a      	str	r2, [r3, #0]
 8000a3a:	e03d      	b.n	8000ab8 <RCC_GetClocksFreq+0xbc>
 8000a3c:	687b      	ldr	r3, [r7, #4]
 8000a3e:	4a41      	ldr	r2, [pc, #260]	; (8000b44 <RCC_GetClocksFreq+0x148>)
 8000a40:	601a      	str	r2, [r3, #0]
 8000a42:	e039      	b.n	8000ab8 <RCC_GetClocksFreq+0xbc>
 8000a44:	4b3d      	ldr	r3, [pc, #244]	; (8000b3c <RCC_GetClocksFreq+0x140>)
 8000a46:	685b      	ldr	r3, [r3, #4]
 8000a48:	0d9b      	lsrs	r3, r3, #22
 8000a4a:	f003 0301 	and.w	r3, r3, #1
 8000a4e:	60fb      	str	r3, [r7, #12]
 8000a50:	4b3a      	ldr	r3, [pc, #232]	; (8000b3c <RCC_GetClocksFreq+0x140>)
 8000a52:	685b      	ldr	r3, [r3, #4]
 8000a54:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8000a58:	60bb      	str	r3, [r7, #8]
 8000a5a:	68fb      	ldr	r3, [r7, #12]
 8000a5c:	2b00      	cmp	r3, #0
 8000a5e:	d00c      	beq.n	8000a7a <RCC_GetClocksFreq+0x7e>
 8000a60:	4a38      	ldr	r2, [pc, #224]	; (8000b44 <RCC_GetClocksFreq+0x148>)
 8000a62:	68bb      	ldr	r3, [r7, #8]
 8000a64:	fbb2 f3f3 	udiv	r3, r2, r3
 8000a68:	4a34      	ldr	r2, [pc, #208]	; (8000b3c <RCC_GetClocksFreq+0x140>)
 8000a6a:	6852      	ldr	r2, [r2, #4]
 8000a6c:	0992      	lsrs	r2, r2, #6
 8000a6e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000a72:	fb02 f303 	mul.w	r3, r2, r3
 8000a76:	61fb      	str	r3, [r7, #28]
 8000a78:	e00b      	b.n	8000a92 <RCC_GetClocksFreq+0x96>
 8000a7a:	4a31      	ldr	r2, [pc, #196]	; (8000b40 <RCC_GetClocksFreq+0x144>)
 8000a7c:	68bb      	ldr	r3, [r7, #8]
 8000a7e:	fbb2 f3f3 	udiv	r3, r2, r3
 8000a82:	4a2e      	ldr	r2, [pc, #184]	; (8000b3c <RCC_GetClocksFreq+0x140>)
 8000a84:	6852      	ldr	r2, [r2, #4]
 8000a86:	0992      	lsrs	r2, r2, #6
 8000a88:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000a8c:	fb02 f303 	mul.w	r3, r2, r3
 8000a90:	61fb      	str	r3, [r7, #28]
 8000a92:	4b2a      	ldr	r3, [pc, #168]	; (8000b3c <RCC_GetClocksFreq+0x140>)
 8000a94:	685b      	ldr	r3, [r3, #4]
 8000a96:	0c1b      	lsrs	r3, r3, #16
 8000a98:	f003 0303 	and.w	r3, r3, #3
 8000a9c:	3301      	adds	r3, #1
 8000a9e:	005b      	lsls	r3, r3, #1
 8000aa0:	613b      	str	r3, [r7, #16]
 8000aa2:	69fa      	ldr	r2, [r7, #28]
 8000aa4:	693b      	ldr	r3, [r7, #16]
 8000aa6:	fbb2 f2f3 	udiv	r2, r2, r3
 8000aaa:	687b      	ldr	r3, [r7, #4]
 8000aac:	601a      	str	r2, [r3, #0]
 8000aae:	e003      	b.n	8000ab8 <RCC_GetClocksFreq+0xbc>
 8000ab0:	687b      	ldr	r3, [r7, #4]
 8000ab2:	4a23      	ldr	r2, [pc, #140]	; (8000b40 <RCC_GetClocksFreq+0x144>)
 8000ab4:	601a      	str	r2, [r3, #0]
 8000ab6:	bf00      	nop
 8000ab8:	4b20      	ldr	r3, [pc, #128]	; (8000b3c <RCC_GetClocksFreq+0x140>)
 8000aba:	689b      	ldr	r3, [r3, #8]
 8000abc:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8000ac0:	61bb      	str	r3, [r7, #24]
 8000ac2:	69bb      	ldr	r3, [r7, #24]
 8000ac4:	091b      	lsrs	r3, r3, #4
 8000ac6:	61bb      	str	r3, [r7, #24]
 8000ac8:	4a1f      	ldr	r2, [pc, #124]	; (8000b48 <RCC_GetClocksFreq+0x14c>)
 8000aca:	69bb      	ldr	r3, [r7, #24]
 8000acc:	4413      	add	r3, r2
 8000ace:	781b      	ldrb	r3, [r3, #0]
 8000ad0:	b2db      	uxtb	r3, r3
 8000ad2:	617b      	str	r3, [r7, #20]
 8000ad4:	687b      	ldr	r3, [r7, #4]
 8000ad6:	681a      	ldr	r2, [r3, #0]
 8000ad8:	697b      	ldr	r3, [r7, #20]
 8000ada:	40da      	lsrs	r2, r3
 8000adc:	687b      	ldr	r3, [r7, #4]
 8000ade:	605a      	str	r2, [r3, #4]
 8000ae0:	4b16      	ldr	r3, [pc, #88]	; (8000b3c <RCC_GetClocksFreq+0x140>)
 8000ae2:	689b      	ldr	r3, [r3, #8]
 8000ae4:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8000ae8:	61bb      	str	r3, [r7, #24]
 8000aea:	69bb      	ldr	r3, [r7, #24]
 8000aec:	0a9b      	lsrs	r3, r3, #10
 8000aee:	61bb      	str	r3, [r7, #24]
 8000af0:	4a15      	ldr	r2, [pc, #84]	; (8000b48 <RCC_GetClocksFreq+0x14c>)
 8000af2:	69bb      	ldr	r3, [r7, #24]
 8000af4:	4413      	add	r3, r2
 8000af6:	781b      	ldrb	r3, [r3, #0]
 8000af8:	b2db      	uxtb	r3, r3
 8000afa:	617b      	str	r3, [r7, #20]
 8000afc:	687b      	ldr	r3, [r7, #4]
 8000afe:	685a      	ldr	r2, [r3, #4]
 8000b00:	697b      	ldr	r3, [r7, #20]
 8000b02:	40da      	lsrs	r2, r3
 8000b04:	687b      	ldr	r3, [r7, #4]
 8000b06:	609a      	str	r2, [r3, #8]
 8000b08:	4b0c      	ldr	r3, [pc, #48]	; (8000b3c <RCC_GetClocksFreq+0x140>)
 8000b0a:	689b      	ldr	r3, [r3, #8]
 8000b0c:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8000b10:	61bb      	str	r3, [r7, #24]
 8000b12:	69bb      	ldr	r3, [r7, #24]
 8000b14:	0b5b      	lsrs	r3, r3, #13
 8000b16:	61bb      	str	r3, [r7, #24]
 8000b18:	4a0b      	ldr	r2, [pc, #44]	; (8000b48 <RCC_GetClocksFreq+0x14c>)
 8000b1a:	69bb      	ldr	r3, [r7, #24]
 8000b1c:	4413      	add	r3, r2
 8000b1e:	781b      	ldrb	r3, [r3, #0]
 8000b20:	b2db      	uxtb	r3, r3
 8000b22:	617b      	str	r3, [r7, #20]
 8000b24:	687b      	ldr	r3, [r7, #4]
 8000b26:	685a      	ldr	r2, [r3, #4]
 8000b28:	697b      	ldr	r3, [r7, #20]
 8000b2a:	40da      	lsrs	r2, r3
 8000b2c:	687b      	ldr	r3, [r7, #4]
 8000b2e:	60da      	str	r2, [r3, #12]
 8000b30:	bf00      	nop
 8000b32:	3724      	adds	r7, #36	; 0x24
 8000b34:	46bd      	mov	sp, r7
 8000b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b3a:	4770      	bx	lr
 8000b3c:	40023800 	.word	0x40023800
 8000b40:	00f42400 	.word	0x00f42400
 8000b44:	017d7840 	.word	0x017d7840
 8000b48:	20000014 	.word	0x20000014

08000b4c <RCC_AHB1PeriphClockCmd>:
 8000b4c:	b480      	push	{r7}
 8000b4e:	b083      	sub	sp, #12
 8000b50:	af00      	add	r7, sp, #0
 8000b52:	6078      	str	r0, [r7, #4]
 8000b54:	460b      	mov	r3, r1
 8000b56:	70fb      	strb	r3, [r7, #3]
 8000b58:	78fb      	ldrb	r3, [r7, #3]
 8000b5a:	2b00      	cmp	r3, #0
 8000b5c:	d006      	beq.n	8000b6c <RCC_AHB1PeriphClockCmd+0x20>
 8000b5e:	4b0a      	ldr	r3, [pc, #40]	; (8000b88 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000b60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b62:	4909      	ldr	r1, [pc, #36]	; (8000b88 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000b64:	687b      	ldr	r3, [r7, #4]
 8000b66:	4313      	orrs	r3, r2
 8000b68:	630b      	str	r3, [r1, #48]	; 0x30
 8000b6a:	e006      	b.n	8000b7a <RCC_AHB1PeriphClockCmd+0x2e>
 8000b6c:	4b06      	ldr	r3, [pc, #24]	; (8000b88 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000b6e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b70:	687b      	ldr	r3, [r7, #4]
 8000b72:	43db      	mvns	r3, r3
 8000b74:	4904      	ldr	r1, [pc, #16]	; (8000b88 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000b76:	4013      	ands	r3, r2
 8000b78:	630b      	str	r3, [r1, #48]	; 0x30
 8000b7a:	bf00      	nop
 8000b7c:	370c      	adds	r7, #12
 8000b7e:	46bd      	mov	sp, r7
 8000b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b84:	4770      	bx	lr
 8000b86:	bf00      	nop
 8000b88:	40023800 	.word	0x40023800

08000b8c <RCC_APB2PeriphClockCmd>:
 8000b8c:	b480      	push	{r7}
 8000b8e:	b083      	sub	sp, #12
 8000b90:	af00      	add	r7, sp, #0
 8000b92:	6078      	str	r0, [r7, #4]
 8000b94:	460b      	mov	r3, r1
 8000b96:	70fb      	strb	r3, [r7, #3]
 8000b98:	78fb      	ldrb	r3, [r7, #3]
 8000b9a:	2b00      	cmp	r3, #0
 8000b9c:	d006      	beq.n	8000bac <RCC_APB2PeriphClockCmd+0x20>
 8000b9e:	4b0a      	ldr	r3, [pc, #40]	; (8000bc8 <RCC_APB2PeriphClockCmd+0x3c>)
 8000ba0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000ba2:	4909      	ldr	r1, [pc, #36]	; (8000bc8 <RCC_APB2PeriphClockCmd+0x3c>)
 8000ba4:	687b      	ldr	r3, [r7, #4]
 8000ba6:	4313      	orrs	r3, r2
 8000ba8:	644b      	str	r3, [r1, #68]	; 0x44
 8000baa:	e006      	b.n	8000bba <RCC_APB2PeriphClockCmd+0x2e>
 8000bac:	4b06      	ldr	r3, [pc, #24]	; (8000bc8 <RCC_APB2PeriphClockCmd+0x3c>)
 8000bae:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000bb0:	687b      	ldr	r3, [r7, #4]
 8000bb2:	43db      	mvns	r3, r3
 8000bb4:	4904      	ldr	r1, [pc, #16]	; (8000bc8 <RCC_APB2PeriphClockCmd+0x3c>)
 8000bb6:	4013      	ands	r3, r2
 8000bb8:	644b      	str	r3, [r1, #68]	; 0x44
 8000bba:	bf00      	nop
 8000bbc:	370c      	adds	r7, #12
 8000bbe:	46bd      	mov	sp, r7
 8000bc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop
 8000bc8:	40023800 	.word	0x40023800

08000bcc <USART_Init>:
 8000bcc:	b580      	push	{r7, lr}
 8000bce:	b08a      	sub	sp, #40	; 0x28
 8000bd0:	af00      	add	r7, sp, #0
 8000bd2:	6078      	str	r0, [r7, #4]
 8000bd4:	6039      	str	r1, [r7, #0]
 8000bd6:	2300      	movs	r3, #0
 8000bd8:	627b      	str	r3, [r7, #36]	; 0x24
 8000bda:	2300      	movs	r3, #0
 8000bdc:	623b      	str	r3, [r7, #32]
 8000bde:	2300      	movs	r3, #0
 8000be0:	61fb      	str	r3, [r7, #28]
 8000be2:	2300      	movs	r3, #0
 8000be4:	61bb      	str	r3, [r7, #24]
 8000be6:	687b      	ldr	r3, [r7, #4]
 8000be8:	8a1b      	ldrh	r3, [r3, #16]
 8000bea:	b29b      	uxth	r3, r3
 8000bec:	627b      	str	r3, [r7, #36]	; 0x24
 8000bee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000bf0:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000bf4:	627b      	str	r3, [r7, #36]	; 0x24
 8000bf6:	683b      	ldr	r3, [r7, #0]
 8000bf8:	88db      	ldrh	r3, [r3, #6]
 8000bfa:	461a      	mov	r2, r3
 8000bfc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000bfe:	4313      	orrs	r3, r2
 8000c00:	627b      	str	r3, [r7, #36]	; 0x24
 8000c02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000c04:	b29a      	uxth	r2, r3
 8000c06:	687b      	ldr	r3, [r7, #4]
 8000c08:	821a      	strh	r2, [r3, #16]
 8000c0a:	687b      	ldr	r3, [r7, #4]
 8000c0c:	899b      	ldrh	r3, [r3, #12]
 8000c0e:	b29b      	uxth	r3, r3
 8000c10:	627b      	str	r3, [r7, #36]	; 0x24
 8000c12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000c14:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8000c18:	f023 030c 	bic.w	r3, r3, #12
 8000c1c:	627b      	str	r3, [r7, #36]	; 0x24
 8000c1e:	683b      	ldr	r3, [r7, #0]
 8000c20:	889a      	ldrh	r2, [r3, #4]
 8000c22:	683b      	ldr	r3, [r7, #0]
 8000c24:	891b      	ldrh	r3, [r3, #8]
 8000c26:	4313      	orrs	r3, r2
 8000c28:	b29a      	uxth	r2, r3
 8000c2a:	683b      	ldr	r3, [r7, #0]
 8000c2c:	895b      	ldrh	r3, [r3, #10]
 8000c2e:	4313      	orrs	r3, r2
 8000c30:	b29b      	uxth	r3, r3
 8000c32:	461a      	mov	r2, r3
 8000c34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000c36:	4313      	orrs	r3, r2
 8000c38:	627b      	str	r3, [r7, #36]	; 0x24
 8000c3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000c3c:	b29a      	uxth	r2, r3
 8000c3e:	687b      	ldr	r3, [r7, #4]
 8000c40:	819a      	strh	r2, [r3, #12]
 8000c42:	687b      	ldr	r3, [r7, #4]
 8000c44:	8a9b      	ldrh	r3, [r3, #20]
 8000c46:	b29b      	uxth	r3, r3
 8000c48:	627b      	str	r3, [r7, #36]	; 0x24
 8000c4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000c4c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000c50:	627b      	str	r3, [r7, #36]	; 0x24
 8000c52:	683b      	ldr	r3, [r7, #0]
 8000c54:	899b      	ldrh	r3, [r3, #12]
 8000c56:	461a      	mov	r2, r3
 8000c58:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000c5a:	4313      	orrs	r3, r2
 8000c5c:	627b      	str	r3, [r7, #36]	; 0x24
 8000c5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000c60:	b29a      	uxth	r2, r3
 8000c62:	687b      	ldr	r3, [r7, #4]
 8000c64:	829a      	strh	r2, [r3, #20]
 8000c66:	f107 0308 	add.w	r3, r7, #8
 8000c6a:	4618      	mov	r0, r3
 8000c6c:	f7ff fec6 	bl	80009fc <RCC_GetClocksFreq>
 8000c70:	687b      	ldr	r3, [r7, #4]
 8000c72:	4a30      	ldr	r2, [pc, #192]	; (8000d34 <USART_Init+0x168>)
 8000c74:	4293      	cmp	r3, r2
 8000c76:	d003      	beq.n	8000c80 <USART_Init+0xb4>
 8000c78:	687b      	ldr	r3, [r7, #4]
 8000c7a:	4a2f      	ldr	r2, [pc, #188]	; (8000d38 <USART_Init+0x16c>)
 8000c7c:	4293      	cmp	r3, r2
 8000c7e:	d102      	bne.n	8000c86 <USART_Init+0xba>
 8000c80:	697b      	ldr	r3, [r7, #20]
 8000c82:	623b      	str	r3, [r7, #32]
 8000c84:	e001      	b.n	8000c8a <USART_Init+0xbe>
 8000c86:	693b      	ldr	r3, [r7, #16]
 8000c88:	623b      	str	r3, [r7, #32]
 8000c8a:	687b      	ldr	r3, [r7, #4]
 8000c8c:	899b      	ldrh	r3, [r3, #12]
 8000c8e:	b29b      	uxth	r3, r3
 8000c90:	b21b      	sxth	r3, r3
 8000c92:	2b00      	cmp	r3, #0
 8000c94:	da0c      	bge.n	8000cb0 <USART_Init+0xe4>
 8000c96:	6a3a      	ldr	r2, [r7, #32]
 8000c98:	4613      	mov	r3, r2
 8000c9a:	009b      	lsls	r3, r3, #2
 8000c9c:	4413      	add	r3, r2
 8000c9e:	009a      	lsls	r2, r3, #2
 8000ca0:	441a      	add	r2, r3
 8000ca2:	683b      	ldr	r3, [r7, #0]
 8000ca4:	681b      	ldr	r3, [r3, #0]
 8000ca6:	005b      	lsls	r3, r3, #1
 8000ca8:	fbb2 f3f3 	udiv	r3, r2, r3
 8000cac:	61fb      	str	r3, [r7, #28]
 8000cae:	e00b      	b.n	8000cc8 <USART_Init+0xfc>
 8000cb0:	6a3a      	ldr	r2, [r7, #32]
 8000cb2:	4613      	mov	r3, r2
 8000cb4:	009b      	lsls	r3, r3, #2
 8000cb6:	4413      	add	r3, r2
 8000cb8:	009a      	lsls	r2, r3, #2
 8000cba:	441a      	add	r2, r3
 8000cbc:	683b      	ldr	r3, [r7, #0]
 8000cbe:	681b      	ldr	r3, [r3, #0]
 8000cc0:	009b      	lsls	r3, r3, #2
 8000cc2:	fbb2 f3f3 	udiv	r3, r2, r3
 8000cc6:	61fb      	str	r3, [r7, #28]
 8000cc8:	69fb      	ldr	r3, [r7, #28]
 8000cca:	4a1c      	ldr	r2, [pc, #112]	; (8000d3c <USART_Init+0x170>)
 8000ccc:	fba2 2303 	umull	r2, r3, r2, r3
 8000cd0:	095b      	lsrs	r3, r3, #5
 8000cd2:	011b      	lsls	r3, r3, #4
 8000cd4:	627b      	str	r3, [r7, #36]	; 0x24
 8000cd6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000cd8:	091b      	lsrs	r3, r3, #4
 8000cda:	2264      	movs	r2, #100	; 0x64
 8000cdc:	fb02 f303 	mul.w	r3, r2, r3
 8000ce0:	69fa      	ldr	r2, [r7, #28]
 8000ce2:	1ad3      	subs	r3, r2, r3
 8000ce4:	61bb      	str	r3, [r7, #24]
 8000ce6:	687b      	ldr	r3, [r7, #4]
 8000ce8:	899b      	ldrh	r3, [r3, #12]
 8000cea:	b29b      	uxth	r3, r3
 8000cec:	b21b      	sxth	r3, r3
 8000cee:	2b00      	cmp	r3, #0
 8000cf0:	da0c      	bge.n	8000d0c <USART_Init+0x140>
 8000cf2:	69bb      	ldr	r3, [r7, #24]
 8000cf4:	00db      	lsls	r3, r3, #3
 8000cf6:	3332      	adds	r3, #50	; 0x32
 8000cf8:	4a10      	ldr	r2, [pc, #64]	; (8000d3c <USART_Init+0x170>)
 8000cfa:	fba2 2303 	umull	r2, r3, r2, r3
 8000cfe:	095b      	lsrs	r3, r3, #5
 8000d00:	f003 0307 	and.w	r3, r3, #7
 8000d04:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8000d06:	4313      	orrs	r3, r2
 8000d08:	627b      	str	r3, [r7, #36]	; 0x24
 8000d0a:	e00b      	b.n	8000d24 <USART_Init+0x158>
 8000d0c:	69bb      	ldr	r3, [r7, #24]
 8000d0e:	011b      	lsls	r3, r3, #4
 8000d10:	3332      	adds	r3, #50	; 0x32
 8000d12:	4a0a      	ldr	r2, [pc, #40]	; (8000d3c <USART_Init+0x170>)
 8000d14:	fba2 2303 	umull	r2, r3, r2, r3
 8000d18:	095b      	lsrs	r3, r3, #5
 8000d1a:	f003 030f 	and.w	r3, r3, #15
 8000d1e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8000d20:	4313      	orrs	r3, r2
 8000d22:	627b      	str	r3, [r7, #36]	; 0x24
 8000d24:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000d26:	b29a      	uxth	r2, r3
 8000d28:	687b      	ldr	r3, [r7, #4]
 8000d2a:	811a      	strh	r2, [r3, #8]
 8000d2c:	bf00      	nop
 8000d2e:	3728      	adds	r7, #40	; 0x28
 8000d30:	46bd      	mov	sp, r7
 8000d32:	bd80      	pop	{r7, pc}
 8000d34:	40011000 	.word	0x40011000
 8000d38:	40011400 	.word	0x40011400
 8000d3c:	51eb851f 	.word	0x51eb851f

08000d40 <USART_Cmd>:
 8000d40:	b480      	push	{r7}
 8000d42:	b083      	sub	sp, #12
 8000d44:	af00      	add	r7, sp, #0
 8000d46:	6078      	str	r0, [r7, #4]
 8000d48:	460b      	mov	r3, r1
 8000d4a:	70fb      	strb	r3, [r7, #3]
 8000d4c:	78fb      	ldrb	r3, [r7, #3]
 8000d4e:	2b00      	cmp	r3, #0
 8000d50:	d008      	beq.n	8000d64 <USART_Cmd+0x24>
 8000d52:	687b      	ldr	r3, [r7, #4]
 8000d54:	899b      	ldrh	r3, [r3, #12]
 8000d56:	b29b      	uxth	r3, r3
 8000d58:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000d5c:	b29a      	uxth	r2, r3
 8000d5e:	687b      	ldr	r3, [r7, #4]
 8000d60:	819a      	strh	r2, [r3, #12]
 8000d62:	e007      	b.n	8000d74 <USART_Cmd+0x34>
 8000d64:	687b      	ldr	r3, [r7, #4]
 8000d66:	899b      	ldrh	r3, [r3, #12]
 8000d68:	b29b      	uxth	r3, r3
 8000d6a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000d6e:	b29a      	uxth	r2, r3
 8000d70:	687b      	ldr	r3, [r7, #4]
 8000d72:	819a      	strh	r2, [r3, #12]
 8000d74:	bf00      	nop
 8000d76:	370c      	adds	r7, #12
 8000d78:	46bd      	mov	sp, r7
 8000d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d7e:	4770      	bx	lr

08000d80 <USART_SendData>:
 8000d80:	b480      	push	{r7}
 8000d82:	b083      	sub	sp, #12
 8000d84:	af00      	add	r7, sp, #0
 8000d86:	6078      	str	r0, [r7, #4]
 8000d88:	460b      	mov	r3, r1
 8000d8a:	807b      	strh	r3, [r7, #2]
 8000d8c:	887b      	ldrh	r3, [r7, #2]
 8000d8e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000d92:	b29a      	uxth	r2, r3
 8000d94:	687b      	ldr	r3, [r7, #4]
 8000d96:	809a      	strh	r2, [r3, #4]
 8000d98:	bf00      	nop
 8000d9a:	370c      	adds	r7, #12
 8000d9c:	46bd      	mov	sp, r7
 8000d9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000da2:	4770      	bx	lr

08000da4 <USART_ReceiveData>:
 8000da4:	b480      	push	{r7}
 8000da6:	b083      	sub	sp, #12
 8000da8:	af00      	add	r7, sp, #0
 8000daa:	6078      	str	r0, [r7, #4]
 8000dac:	687b      	ldr	r3, [r7, #4]
 8000dae:	889b      	ldrh	r3, [r3, #4]
 8000db0:	b29b      	uxth	r3, r3
 8000db2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000db6:	b29b      	uxth	r3, r3
 8000db8:	4618      	mov	r0, r3
 8000dba:	370c      	adds	r7, #12
 8000dbc:	46bd      	mov	sp, r7
 8000dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dc2:	4770      	bx	lr

08000dc4 <USART_ITConfig>:
 8000dc4:	b480      	push	{r7}
 8000dc6:	b087      	sub	sp, #28
 8000dc8:	af00      	add	r7, sp, #0
 8000dca:	6078      	str	r0, [r7, #4]
 8000dcc:	460b      	mov	r3, r1
 8000dce:	807b      	strh	r3, [r7, #2]
 8000dd0:	4613      	mov	r3, r2
 8000dd2:	707b      	strb	r3, [r7, #1]
 8000dd4:	2300      	movs	r3, #0
 8000dd6:	613b      	str	r3, [r7, #16]
 8000dd8:	2300      	movs	r3, #0
 8000dda:	60fb      	str	r3, [r7, #12]
 8000ddc:	2300      	movs	r3, #0
 8000dde:	60bb      	str	r3, [r7, #8]
 8000de0:	2300      	movs	r3, #0
 8000de2:	617b      	str	r3, [r7, #20]
 8000de4:	687b      	ldr	r3, [r7, #4]
 8000de6:	617b      	str	r3, [r7, #20]
 8000de8:	887b      	ldrh	r3, [r7, #2]
 8000dea:	b2db      	uxtb	r3, r3
 8000dec:	095b      	lsrs	r3, r3, #5
 8000dee:	b2db      	uxtb	r3, r3
 8000df0:	613b      	str	r3, [r7, #16]
 8000df2:	887b      	ldrh	r3, [r7, #2]
 8000df4:	f003 031f 	and.w	r3, r3, #31
 8000df8:	60fb      	str	r3, [r7, #12]
 8000dfa:	2201      	movs	r2, #1
 8000dfc:	68fb      	ldr	r3, [r7, #12]
 8000dfe:	fa02 f303 	lsl.w	r3, r2, r3
 8000e02:	60bb      	str	r3, [r7, #8]
 8000e04:	693b      	ldr	r3, [r7, #16]
 8000e06:	2b01      	cmp	r3, #1
 8000e08:	d103      	bne.n	8000e12 <USART_ITConfig+0x4e>
 8000e0a:	697b      	ldr	r3, [r7, #20]
 8000e0c:	330c      	adds	r3, #12
 8000e0e:	617b      	str	r3, [r7, #20]
 8000e10:	e009      	b.n	8000e26 <USART_ITConfig+0x62>
 8000e12:	693b      	ldr	r3, [r7, #16]
 8000e14:	2b02      	cmp	r3, #2
 8000e16:	d103      	bne.n	8000e20 <USART_ITConfig+0x5c>
 8000e18:	697b      	ldr	r3, [r7, #20]
 8000e1a:	3310      	adds	r3, #16
 8000e1c:	617b      	str	r3, [r7, #20]
 8000e1e:	e002      	b.n	8000e26 <USART_ITConfig+0x62>
 8000e20:	697b      	ldr	r3, [r7, #20]
 8000e22:	3314      	adds	r3, #20
 8000e24:	617b      	str	r3, [r7, #20]
 8000e26:	787b      	ldrb	r3, [r7, #1]
 8000e28:	2b00      	cmp	r3, #0
 8000e2a:	d006      	beq.n	8000e3a <USART_ITConfig+0x76>
 8000e2c:	697b      	ldr	r3, [r7, #20]
 8000e2e:	6819      	ldr	r1, [r3, #0]
 8000e30:	697b      	ldr	r3, [r7, #20]
 8000e32:	68ba      	ldr	r2, [r7, #8]
 8000e34:	430a      	orrs	r2, r1
 8000e36:	601a      	str	r2, [r3, #0]
 8000e38:	e006      	b.n	8000e48 <USART_ITConfig+0x84>
 8000e3a:	697b      	ldr	r3, [r7, #20]
 8000e3c:	6819      	ldr	r1, [r3, #0]
 8000e3e:	68bb      	ldr	r3, [r7, #8]
 8000e40:	43da      	mvns	r2, r3
 8000e42:	697b      	ldr	r3, [r7, #20]
 8000e44:	400a      	ands	r2, r1
 8000e46:	601a      	str	r2, [r3, #0]
 8000e48:	bf00      	nop
 8000e4a:	371c      	adds	r7, #28
 8000e4c:	46bd      	mov	sp, r7
 8000e4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e52:	4770      	bx	lr

08000e54 <USART_GetITStatus>:
 8000e54:	b480      	push	{r7}
 8000e56:	b087      	sub	sp, #28
 8000e58:	af00      	add	r7, sp, #0
 8000e5a:	6078      	str	r0, [r7, #4]
 8000e5c:	460b      	mov	r3, r1
 8000e5e:	807b      	strh	r3, [r7, #2]
 8000e60:	2300      	movs	r3, #0
 8000e62:	60fb      	str	r3, [r7, #12]
 8000e64:	2300      	movs	r3, #0
 8000e66:	617b      	str	r3, [r7, #20]
 8000e68:	2300      	movs	r3, #0
 8000e6a:	60bb      	str	r3, [r7, #8]
 8000e6c:	2300      	movs	r3, #0
 8000e6e:	74fb      	strb	r3, [r7, #19]
 8000e70:	887b      	ldrh	r3, [r7, #2]
 8000e72:	b2db      	uxtb	r3, r3
 8000e74:	095b      	lsrs	r3, r3, #5
 8000e76:	b2db      	uxtb	r3, r3
 8000e78:	60bb      	str	r3, [r7, #8]
 8000e7a:	887b      	ldrh	r3, [r7, #2]
 8000e7c:	f003 031f 	and.w	r3, r3, #31
 8000e80:	617b      	str	r3, [r7, #20]
 8000e82:	2201      	movs	r2, #1
 8000e84:	697b      	ldr	r3, [r7, #20]
 8000e86:	fa02 f303 	lsl.w	r3, r2, r3
 8000e8a:	617b      	str	r3, [r7, #20]
 8000e8c:	68bb      	ldr	r3, [r7, #8]
 8000e8e:	2b01      	cmp	r3, #1
 8000e90:	d107      	bne.n	8000ea2 <USART_GetITStatus+0x4e>
 8000e92:	687b      	ldr	r3, [r7, #4]
 8000e94:	899b      	ldrh	r3, [r3, #12]
 8000e96:	b29b      	uxth	r3, r3
 8000e98:	461a      	mov	r2, r3
 8000e9a:	697b      	ldr	r3, [r7, #20]
 8000e9c:	4013      	ands	r3, r2
 8000e9e:	617b      	str	r3, [r7, #20]
 8000ea0:	e011      	b.n	8000ec6 <USART_GetITStatus+0x72>
 8000ea2:	68bb      	ldr	r3, [r7, #8]
 8000ea4:	2b02      	cmp	r3, #2
 8000ea6:	d107      	bne.n	8000eb8 <USART_GetITStatus+0x64>
 8000ea8:	687b      	ldr	r3, [r7, #4]
 8000eaa:	8a1b      	ldrh	r3, [r3, #16]
 8000eac:	b29b      	uxth	r3, r3
 8000eae:	461a      	mov	r2, r3
 8000eb0:	697b      	ldr	r3, [r7, #20]
 8000eb2:	4013      	ands	r3, r2
 8000eb4:	617b      	str	r3, [r7, #20]
 8000eb6:	e006      	b.n	8000ec6 <USART_GetITStatus+0x72>
 8000eb8:	687b      	ldr	r3, [r7, #4]
 8000eba:	8a9b      	ldrh	r3, [r3, #20]
 8000ebc:	b29b      	uxth	r3, r3
 8000ebe:	461a      	mov	r2, r3
 8000ec0:	697b      	ldr	r3, [r7, #20]
 8000ec2:	4013      	ands	r3, r2
 8000ec4:	617b      	str	r3, [r7, #20]
 8000ec6:	887b      	ldrh	r3, [r7, #2]
 8000ec8:	0a1b      	lsrs	r3, r3, #8
 8000eca:	b29b      	uxth	r3, r3
 8000ecc:	60fb      	str	r3, [r7, #12]
 8000ece:	2201      	movs	r2, #1
 8000ed0:	68fb      	ldr	r3, [r7, #12]
 8000ed2:	fa02 f303 	lsl.w	r3, r2, r3
 8000ed6:	60fb      	str	r3, [r7, #12]
 8000ed8:	687b      	ldr	r3, [r7, #4]
 8000eda:	881b      	ldrh	r3, [r3, #0]
 8000edc:	b29b      	uxth	r3, r3
 8000ede:	461a      	mov	r2, r3
 8000ee0:	68fb      	ldr	r3, [r7, #12]
 8000ee2:	4013      	ands	r3, r2
 8000ee4:	60fb      	str	r3, [r7, #12]
 8000ee6:	697b      	ldr	r3, [r7, #20]
 8000ee8:	2b00      	cmp	r3, #0
 8000eea:	d005      	beq.n	8000ef8 <USART_GetITStatus+0xa4>
 8000eec:	68fb      	ldr	r3, [r7, #12]
 8000eee:	2b00      	cmp	r3, #0
 8000ef0:	d002      	beq.n	8000ef8 <USART_GetITStatus+0xa4>
 8000ef2:	2301      	movs	r3, #1
 8000ef4:	74fb      	strb	r3, [r7, #19]
 8000ef6:	e001      	b.n	8000efc <USART_GetITStatus+0xa8>
 8000ef8:	2300      	movs	r3, #0
 8000efa:	74fb      	strb	r3, [r7, #19]
 8000efc:	7cfb      	ldrb	r3, [r7, #19]
 8000efe:	4618      	mov	r0, r3
 8000f00:	371c      	adds	r7, #28
 8000f02:	46bd      	mov	sp, r7
 8000f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f08:	4770      	bx	lr

08000f0a <USART_ClearITPendingBit>:
 8000f0a:	b480      	push	{r7}
 8000f0c:	b085      	sub	sp, #20
 8000f0e:	af00      	add	r7, sp, #0
 8000f10:	6078      	str	r0, [r7, #4]
 8000f12:	460b      	mov	r3, r1
 8000f14:	807b      	strh	r3, [r7, #2]
 8000f16:	2300      	movs	r3, #0
 8000f18:	81fb      	strh	r3, [r7, #14]
 8000f1a:	2300      	movs	r3, #0
 8000f1c:	81bb      	strh	r3, [r7, #12]
 8000f1e:	887b      	ldrh	r3, [r7, #2]
 8000f20:	0a1b      	lsrs	r3, r3, #8
 8000f22:	81fb      	strh	r3, [r7, #14]
 8000f24:	89fb      	ldrh	r3, [r7, #14]
 8000f26:	2201      	movs	r2, #1
 8000f28:	fa02 f303 	lsl.w	r3, r2, r3
 8000f2c:	81bb      	strh	r3, [r7, #12]
 8000f2e:	89bb      	ldrh	r3, [r7, #12]
 8000f30:	43db      	mvns	r3, r3
 8000f32:	b29a      	uxth	r2, r3
 8000f34:	687b      	ldr	r3, [r7, #4]
 8000f36:	801a      	strh	r2, [r3, #0]
 8000f38:	bf00      	nop
 8000f3a:	3714      	adds	r7, #20
 8000f3c:	46bd      	mov	sp, r7
 8000f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f42:	4770      	bx	lr

08000f44 <__libc_init_array>:
 8000f44:	b570      	push	{r4, r5, r6, lr}
 8000f46:	4d0d      	ldr	r5, [pc, #52]	; (8000f7c <__libc_init_array+0x38>)
 8000f48:	4c0d      	ldr	r4, [pc, #52]	; (8000f80 <__libc_init_array+0x3c>)
 8000f4a:	1b64      	subs	r4, r4, r5
 8000f4c:	10a4      	asrs	r4, r4, #2
 8000f4e:	2600      	movs	r6, #0
 8000f50:	42a6      	cmp	r6, r4
 8000f52:	d109      	bne.n	8000f68 <__libc_init_array+0x24>
 8000f54:	4d0b      	ldr	r5, [pc, #44]	; (8000f84 <__libc_init_array+0x40>)
 8000f56:	4c0c      	ldr	r4, [pc, #48]	; (8000f88 <__libc_init_array+0x44>)
 8000f58:	f000 f818 	bl	8000f8c <_init>
 8000f5c:	1b64      	subs	r4, r4, r5
 8000f5e:	10a4      	asrs	r4, r4, #2
 8000f60:	2600      	movs	r6, #0
 8000f62:	42a6      	cmp	r6, r4
 8000f64:	d105      	bne.n	8000f72 <__libc_init_array+0x2e>
 8000f66:	bd70      	pop	{r4, r5, r6, pc}
 8000f68:	f855 3b04 	ldr.w	r3, [r5], #4
 8000f6c:	4798      	blx	r3
 8000f6e:	3601      	adds	r6, #1
 8000f70:	e7ee      	b.n	8000f50 <__libc_init_array+0xc>
 8000f72:	f855 3b04 	ldr.w	r3, [r5], #4
 8000f76:	4798      	blx	r3
 8000f78:	3601      	adds	r6, #1
 8000f7a:	e7f2      	b.n	8000f62 <__libc_init_array+0x1e>
 8000f7c:	08000fa4 	.word	0x08000fa4
 8000f80:	08000fa4 	.word	0x08000fa4
 8000f84:	08000fa4 	.word	0x08000fa4
 8000f88:	08000fa8 	.word	0x08000fa8

08000f8c <_init>:
 8000f8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f8e:	bf00      	nop
 8000f90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000f92:	bc08      	pop	{r3}
 8000f94:	469e      	mov	lr, r3
 8000f96:	4770      	bx	lr

08000f98 <_fini>:
 8000f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f9a:	bf00      	nop
 8000f9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000f9e:	bc08      	pop	{r3}
 8000fa0:	469e      	mov	lr, r3
 8000fa2:	4770      	bx	lr
