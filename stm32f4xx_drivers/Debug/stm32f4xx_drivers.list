
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000604  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000798  080007a0  000107a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000798  08000798  000107a0  2**0
                  CONTENTS
  4 .ARM          00000000  08000798  08000798  000107a0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000798  080007a0  000107a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000798  08000798  00010798  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800079c  0800079c  0001079c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000107a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080007a0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080007a0  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000107a0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009ca  00000000  00000000  000107d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000288  00000000  00000000  0001119a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00011428  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  000114e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000163e  00000000  00000000  00011580  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000dab  00000000  00000000  00012bbe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000574f  00000000  00000000  00013969  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000190b8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000024c  00000000  00000000  0001910c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000780 	.word	0x08000780

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000780 	.word	0x08000780

080001d4 <delay_ms>:

#include "stm32f401xx.h"
#define BUTTON_PRESS		0
void delay_ms(uint32_t milisecond)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b085      	sub	sp, #20
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
	for(int i  = 0 ; i < milisecond; i++)
 80001dc:	2300      	movs	r3, #0
 80001de:	60fb      	str	r3, [r7, #12]
 80001e0:	e00d      	b.n	80001fe <delay_ms+0x2a>
	{
		for(int j = 0; j < 5000; j++);
 80001e2:	2300      	movs	r3, #0
 80001e4:	60bb      	str	r3, [r7, #8]
 80001e6:	e002      	b.n	80001ee <delay_ms+0x1a>
 80001e8:	68bb      	ldr	r3, [r7, #8]
 80001ea:	3301      	adds	r3, #1
 80001ec:	60bb      	str	r3, [r7, #8]
 80001ee:	68bb      	ldr	r3, [r7, #8]
 80001f0:	f241 3287 	movw	r2, #4999	; 0x1387
 80001f4:	4293      	cmp	r3, r2
 80001f6:	ddf7      	ble.n	80001e8 <delay_ms+0x14>
	for(int i  = 0 ; i < milisecond; i++)
 80001f8:	68fb      	ldr	r3, [r7, #12]
 80001fa:	3301      	adds	r3, #1
 80001fc:	60fb      	str	r3, [r7, #12]
 80001fe:	68fb      	ldr	r3, [r7, #12]
 8000200:	687a      	ldr	r2, [r7, #4]
 8000202:	429a      	cmp	r2, r3
 8000204:	d8ed      	bhi.n	80001e2 <delay_ms+0xe>
	}
}
 8000206:	bf00      	nop
 8000208:	bf00      	nop
 800020a:	3714      	adds	r7, #20
 800020c:	46bd      	mov	sp, r7
 800020e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000212:	4770      	bx	lr

08000214 <main>:
int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b086      	sub	sp, #24
 8000218:	af00      	add	r7, sp, #0
	GPIO_Hangle_t GpioLed, GpioButton;
	// Enable Clock
	GPIO_PeriClockControl(GpioLed.pGPIOx, ENABLE);
 800021a:	68fb      	ldr	r3, [r7, #12]
 800021c:	2101      	movs	r1, #1
 800021e:	4618      	mov	r0, r3
 8000220:	f000 f864 	bl	80002ec <GPIO_PeriClockControl>
	// configur LED
	GpioLed.pGPIOx = GPIOA;
 8000224:	4b1a      	ldr	r3, [pc, #104]	; (8000290 <main+0x7c>)
 8000226:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000228:	2300      	movs	r3, #0
 800022a:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800022c:	2301      	movs	r3, #1
 800022e:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_MODE_SPEED_FAST;
 8000230:	2302      	movs	r3, #2
 8000232:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000234:	2300      	movs	r3, #0
 8000236:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000238:	2300      	movs	r3, #0
 800023a:	74fb      	strb	r3, [r7, #19]

	GPIO_Init(&GpioLed);
 800023c:	f107 030c 	add.w	r3, r7, #12
 8000240:	4618      	mov	r0, r3
 8000242:	f000 f8e9 	bl	8000418 <GPIO_Init>
	// config BUTTON
	GpioButton.pGPIOx = GPIOB;
 8000246:	4b13      	ldr	r3, [pc, #76]	; (8000294 <main+0x80>)
 8000248:	603b      	str	r3, [r7, #0]
	GpioButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_4;
 800024a:	2304      	movs	r3, #4
 800024c:	713b      	strb	r3, [r7, #4]
	GpioButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 800024e:	2300      	movs	r3, #0
 8000250:	717b      	strb	r3, [r7, #5]
	GpioButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_MODE_SPEED_FAST;
 8000252:	2302      	movs	r3, #2
 8000254:	71bb      	strb	r3, [r7, #6]
	GpioButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000256:	2300      	movs	r3, #0
 8000258:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GpioButton.pGPIOx, ENABLE);
 800025a:	683b      	ldr	r3, [r7, #0]
 800025c:	2101      	movs	r1, #1
 800025e:	4618      	mov	r0, r3
 8000260:	f000 f844 	bl	80002ec <GPIO_PeriClockControl>

	GPIO_Init(&GpioButton);
 8000264:	463b      	mov	r3, r7
 8000266:	4618      	mov	r0, r3
 8000268:	f000 f8d6 	bl	8000418 <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GpioButton.pGPIOx, GPIO_PIN_NO_4) == BUTTON_PRESS)
 800026c:	683b      	ldr	r3, [r7, #0]
 800026e:	2104      	movs	r1, #4
 8000270:	4618      	mov	r0, r3
 8000272:	f000 fa35 	bl	80006e0 <GPIO_ReadFromInputPin>
 8000276:	4603      	mov	r3, r0
 8000278:	2b00      	cmp	r3, #0
 800027a:	d1f7      	bne.n	800026c <main+0x58>
		{
			delay_ms(50);
 800027c:	2032      	movs	r0, #50	; 0x32
 800027e:	f7ff ffa9 	bl	80001d4 <delay_ms>
			GPIO_ToggleOutputPin(GpioLed.pGPIOx, GPIO_PIN_NO_0);
 8000282:	68fb      	ldr	r3, [r7, #12]
 8000284:	2100      	movs	r1, #0
 8000286:	4618      	mov	r0, r3
 8000288:	f000 fa40 	bl	800070c <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GpioButton.pGPIOx, GPIO_PIN_NO_4) == BUTTON_PRESS)
 800028c:	e7ee      	b.n	800026c <main+0x58>
 800028e:	bf00      	nop
 8000290:	40020000 	.word	0x40020000
 8000294:	40020400 	.word	0x40020400

08000298 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000298:	480d      	ldr	r0, [pc, #52]	; (80002d0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800029a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800029c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a0:	480c      	ldr	r0, [pc, #48]	; (80002d4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002a2:	490d      	ldr	r1, [pc, #52]	; (80002d8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a4:	4a0d      	ldr	r2, [pc, #52]	; (80002dc <LoopForever+0xe>)
  movs r3, #0
 80002a6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002a8:	e002      	b.n	80002b0 <LoopCopyDataInit>

080002aa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002aa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002ac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ae:	3304      	adds	r3, #4

080002b0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002b2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b4:	d3f9      	bcc.n	80002aa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002b6:	4a0a      	ldr	r2, [pc, #40]	; (80002e0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002b8:	4c0a      	ldr	r4, [pc, #40]	; (80002e4 <LoopForever+0x16>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002bc:	e001      	b.n	80002c2 <LoopFillZerobss>

080002be <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002be:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c0:	3204      	adds	r2, #4

080002c2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002c2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c4:	d3fb      	bcc.n	80002be <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002c6:	f000 fa37 	bl	8000738 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ca:	f7ff ffa3 	bl	8000214 <main>

080002ce <LoopForever>:

LoopForever:
    b LoopForever
 80002ce:	e7fe      	b.n	80002ce <LoopForever>
  ldr   r0, =_estack
 80002d0:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80002d4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002d8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002dc:	080007a0 	.word	0x080007a0
  ldr r2, =_sbss
 80002e0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002e4:	2000001c 	.word	0x2000001c

080002e8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002e8:	e7fe      	b.n	80002e8 <ADC_IRQHandler>
	...

080002ec <GPIO_PeriClockControl>:
 							unit8_t EnorDi // macros ENABLE or DISABLE
 * @return					none
 * @Note					none
*/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002ec:	b480      	push	{r7}
 80002ee:	b083      	sub	sp, #12
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	6078      	str	r0, [r7, #4]
 80002f4:	460b      	mov	r3, r1
 80002f6:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002f8:	78fb      	ldrb	r3, [r7, #3]
 80002fa:	2b01      	cmp	r3, #1
 80002fc:	d13d      	bne.n	800037a <GPIO_PeriClockControl+0x8e>
	{
		if(pGPIOx == GPIOA)
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a3f      	ldr	r2, [pc, #252]	; (8000400 <GPIO_PeriClockControl+0x114>)
 8000302:	4293      	cmp	r3, r2
 8000304:	d106      	bne.n	8000314 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN;
 8000306:	4b3f      	ldr	r3, [pc, #252]	; (8000404 <GPIO_PeriClockControl+0x118>)
 8000308:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030a:	4a3e      	ldr	r2, [pc, #248]	; (8000404 <GPIO_PeriClockControl+0x118>)
 800030c:	f043 0301 	orr.w	r3, r3, #1
 8000310:	6313      	str	r3, [r2, #48]	; 0x30
		}else
		{
			GPIOH_PCLK_DI;
		}
	}
}
 8000312:	e06f      	b.n	80003f4 <GPIO_PeriClockControl+0x108>
		}else if(pGPIOx == GPIOB)
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	4a3c      	ldr	r2, [pc, #240]	; (8000408 <GPIO_PeriClockControl+0x11c>)
 8000318:	4293      	cmp	r3, r2
 800031a:	d106      	bne.n	800032a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN;
 800031c:	4b39      	ldr	r3, [pc, #228]	; (8000404 <GPIO_PeriClockControl+0x118>)
 800031e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000320:	4a38      	ldr	r2, [pc, #224]	; (8000404 <GPIO_PeriClockControl+0x118>)
 8000322:	f043 0302 	orr.w	r3, r3, #2
 8000326:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000328:	e064      	b.n	80003f4 <GPIO_PeriClockControl+0x108>
		}else if(pGPIOx == GPIOC)
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a37      	ldr	r2, [pc, #220]	; (800040c <GPIO_PeriClockControl+0x120>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN;
 8000332:	4b34      	ldr	r3, [pc, #208]	; (8000404 <GPIO_PeriClockControl+0x118>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000336:	4a33      	ldr	r2, [pc, #204]	; (8000404 <GPIO_PeriClockControl+0x118>)
 8000338:	f043 0304 	orr.w	r3, r3, #4
 800033c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033e:	e059      	b.n	80003f4 <GPIO_PeriClockControl+0x108>
		}else if(pGPIOx == GPIOD)
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a33      	ldr	r2, [pc, #204]	; (8000410 <GPIO_PeriClockControl+0x124>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d106      	bne.n	8000356 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN;
 8000348:	4b2e      	ldr	r3, [pc, #184]	; (8000404 <GPIO_PeriClockControl+0x118>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034c:	4a2d      	ldr	r2, [pc, #180]	; (8000404 <GPIO_PeriClockControl+0x118>)
 800034e:	f043 0308 	orr.w	r3, r3, #8
 8000352:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000354:	e04e      	b.n	80003f4 <GPIO_PeriClockControl+0x108>
		}else if(pGPIOx == GPIOE)
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	4a2e      	ldr	r2, [pc, #184]	; (8000414 <GPIO_PeriClockControl+0x128>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d106      	bne.n	800036c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN;
 800035e:	4b29      	ldr	r3, [pc, #164]	; (8000404 <GPIO_PeriClockControl+0x118>)
 8000360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000362:	4a28      	ldr	r2, [pc, #160]	; (8000404 <GPIO_PeriClockControl+0x118>)
 8000364:	f043 0310 	orr.w	r3, r3, #16
 8000368:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036a:	e043      	b.n	80003f4 <GPIO_PeriClockControl+0x108>
			GPIOH_PCLK_EN;
 800036c:	4b25      	ldr	r3, [pc, #148]	; (8000404 <GPIO_PeriClockControl+0x118>)
 800036e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000370:	4a24      	ldr	r2, [pc, #144]	; (8000404 <GPIO_PeriClockControl+0x118>)
 8000372:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000376:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000378:	e03c      	b.n	80003f4 <GPIO_PeriClockControl+0x108>
		if(pGPIOx == GPIOA)
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	4a20      	ldr	r2, [pc, #128]	; (8000400 <GPIO_PeriClockControl+0x114>)
 800037e:	4293      	cmp	r3, r2
 8000380:	d106      	bne.n	8000390 <GPIO_PeriClockControl+0xa4>
			GPIOA_PCLK_DI;
 8000382:	4b20      	ldr	r3, [pc, #128]	; (8000404 <GPIO_PeriClockControl+0x118>)
 8000384:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000386:	4a1f      	ldr	r2, [pc, #124]	; (8000404 <GPIO_PeriClockControl+0x118>)
 8000388:	f023 0301 	bic.w	r3, r3, #1
 800038c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038e:	e031      	b.n	80003f4 <GPIO_PeriClockControl+0x108>
		}else if(pGPIOx == GPIOB)
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	4a1d      	ldr	r2, [pc, #116]	; (8000408 <GPIO_PeriClockControl+0x11c>)
 8000394:	4293      	cmp	r3, r2
 8000396:	d106      	bne.n	80003a6 <GPIO_PeriClockControl+0xba>
			GPIOB_PCLK_DI;
 8000398:	4b1a      	ldr	r3, [pc, #104]	; (8000404 <GPIO_PeriClockControl+0x118>)
 800039a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039c:	4a19      	ldr	r2, [pc, #100]	; (8000404 <GPIO_PeriClockControl+0x118>)
 800039e:	f023 0302 	bic.w	r3, r3, #2
 80003a2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a4:	e026      	b.n	80003f4 <GPIO_PeriClockControl+0x108>
		}else if(pGPIOx == GPIOC)
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	4a18      	ldr	r2, [pc, #96]	; (800040c <GPIO_PeriClockControl+0x120>)
 80003aa:	4293      	cmp	r3, r2
 80003ac:	d106      	bne.n	80003bc <GPIO_PeriClockControl+0xd0>
			GPIOC_PCLK_DI;
 80003ae:	4b15      	ldr	r3, [pc, #84]	; (8000404 <GPIO_PeriClockControl+0x118>)
 80003b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b2:	4a14      	ldr	r2, [pc, #80]	; (8000404 <GPIO_PeriClockControl+0x118>)
 80003b4:	f023 0304 	bic.w	r3, r3, #4
 80003b8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ba:	e01b      	b.n	80003f4 <GPIO_PeriClockControl+0x108>
		}else if(pGPIOx == GPIOD)
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	4a14      	ldr	r2, [pc, #80]	; (8000410 <GPIO_PeriClockControl+0x124>)
 80003c0:	4293      	cmp	r3, r2
 80003c2:	d106      	bne.n	80003d2 <GPIO_PeriClockControl+0xe6>
			GPIOD_PCLK_DI;
 80003c4:	4b0f      	ldr	r3, [pc, #60]	; (8000404 <GPIO_PeriClockControl+0x118>)
 80003c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c8:	4a0e      	ldr	r2, [pc, #56]	; (8000404 <GPIO_PeriClockControl+0x118>)
 80003ca:	f023 0308 	bic.w	r3, r3, #8
 80003ce:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d0:	e010      	b.n	80003f4 <GPIO_PeriClockControl+0x108>
		}else if(pGPIOx == GPIOE)
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	4a0f      	ldr	r2, [pc, #60]	; (8000414 <GPIO_PeriClockControl+0x128>)
 80003d6:	4293      	cmp	r3, r2
 80003d8:	d106      	bne.n	80003e8 <GPIO_PeriClockControl+0xfc>
			GPIOE_PCLK_DI;
 80003da:	4b0a      	ldr	r3, [pc, #40]	; (8000404 <GPIO_PeriClockControl+0x118>)
 80003dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003de:	4a09      	ldr	r2, [pc, #36]	; (8000404 <GPIO_PeriClockControl+0x118>)
 80003e0:	f023 0310 	bic.w	r3, r3, #16
 80003e4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e6:	e005      	b.n	80003f4 <GPIO_PeriClockControl+0x108>
			GPIOH_PCLK_DI;
 80003e8:	4b06      	ldr	r3, [pc, #24]	; (8000404 <GPIO_PeriClockControl+0x118>)
 80003ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ec:	4a05      	ldr	r2, [pc, #20]	; (8000404 <GPIO_PeriClockControl+0x118>)
 80003ee:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80003f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f4:	bf00      	nop
 80003f6:	370c      	adds	r7, #12
 80003f8:	46bd      	mov	sp, r7
 80003fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003fe:	4770      	bx	lr
 8000400:	40020000 	.word	0x40020000
 8000404:	40023800 	.word	0x40023800
 8000408:	40020400 	.word	0x40020400
 800040c:	40020800 	.word	0x40020800
 8000410:	40020c00 	.word	0x40020c00
 8000414:	40021000 	.word	0x40021000

08000418 <GPIO_Init>:
 							GPIO_Handle_t *pGPIOHandle
 * @return					none
 * @Note					none
*/
void GPIO_Init(GPIO_Hangle_t *pGPIOHandle)
{
 8000418:	b580      	push	{r7, lr}
 800041a:	b086      	sub	sp, #24
 800041c:	af00      	add	r7, sp, #0
 800041e:	6078      	str	r0, [r7, #4]
	uint32_t temp; // temp.resgister
	// enable the peripheral clock
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	2101      	movs	r1, #1
 8000426:	4618      	mov	r0, r3
 8000428:	f7ff ff60 	bl	80002ec <GPIO_PeriClockControl>
	// Configure the mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	795b      	ldrb	r3, [r3, #5]
 8000430:	2b03      	cmp	r3, #3
 8000432:	d820      	bhi.n	8000476 <GPIO_Init+0x5e>
	{
		// non interrupt
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	795b      	ldrb	r3, [r3, #5]
 8000438:	461a      	mov	r2, r3
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	791b      	ldrb	r3, [r3, #4]
 800043e:	005b      	lsls	r3, r3, #1
 8000440:	fa02 f303 	lsl.w	r3, r2, r3
 8000444:	613b      	str	r3, [r7, #16]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << 2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	681a      	ldr	r2, [r3, #0]
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	791b      	ldrb	r3, [r3, #4]
 8000450:	005b      	lsls	r3, r3, #1
 8000452:	2103      	movs	r1, #3
 8000454:	fa01 f303 	lsl.w	r3, r1, r3
 8000458:	43db      	mvns	r3, r3
 800045a:	4619      	mov	r1, r3
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	400a      	ands	r2, r1
 8000462:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;// setting
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	6819      	ldr	r1, [r3, #0]
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	693a      	ldr	r2, [r7, #16]
 8000470:	430a      	orrs	r2, r1
 8000472:	601a      	str	r2, [r3, #0]
 8000474:	e096      	b.n	80005a4 <GPIO_Init+0x18c>
	}else
	{
		// interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	795b      	ldrb	r3, [r3, #5]
 800047a:	2b04      	cmp	r3, #4
 800047c:	d117      	bne.n	80004ae <GPIO_Init+0x96>
		{
			// config the FTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800047e:	4b90      	ldr	r3, [pc, #576]	; (80006c0 <GPIO_Init+0x2a8>)
 8000480:	68db      	ldr	r3, [r3, #12]
 8000482:	687a      	ldr	r2, [r7, #4]
 8000484:	7912      	ldrb	r2, [r2, #4]
 8000486:	4611      	mov	r1, r2
 8000488:	2201      	movs	r2, #1
 800048a:	408a      	lsls	r2, r1
 800048c:	4611      	mov	r1, r2
 800048e:	4a8c      	ldr	r2, [pc, #560]	; (80006c0 <GPIO_Init+0x2a8>)
 8000490:	430b      	orrs	r3, r1
 8000492:	60d3      	str	r3, [r2, #12]
			// clearing RTSR
			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000494:	4b8a      	ldr	r3, [pc, #552]	; (80006c0 <GPIO_Init+0x2a8>)
 8000496:	689b      	ldr	r3, [r3, #8]
 8000498:	687a      	ldr	r2, [r7, #4]
 800049a:	7912      	ldrb	r2, [r2, #4]
 800049c:	4611      	mov	r1, r2
 800049e:	2201      	movs	r2, #1
 80004a0:	408a      	lsls	r2, r1
 80004a2:	43d2      	mvns	r2, r2
 80004a4:	4611      	mov	r1, r2
 80004a6:	4a86      	ldr	r2, [pc, #536]	; (80006c0 <GPIO_Init+0x2a8>)
 80004a8:	400b      	ands	r3, r1
 80004aa:	6093      	str	r3, [r2, #8]
 80004ac:	e031      	b.n	8000512 <GPIO_Init+0xfa>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RT)
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	795b      	ldrb	r3, [r3, #5]
 80004b2:	2b05      	cmp	r3, #5
 80004b4:	d817      	bhi.n	80004e6 <GPIO_Init+0xce>
		{
			// config the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b6:	4b82      	ldr	r3, [pc, #520]	; (80006c0 <GPIO_Init+0x2a8>)
 80004b8:	689b      	ldr	r3, [r3, #8]
 80004ba:	687a      	ldr	r2, [r7, #4]
 80004bc:	7912      	ldrb	r2, [r2, #4]
 80004be:	4611      	mov	r1, r2
 80004c0:	2201      	movs	r2, #1
 80004c2:	408a      	lsls	r2, r1
 80004c4:	4611      	mov	r1, r2
 80004c6:	4a7e      	ldr	r2, [pc, #504]	; (80006c0 <GPIO_Init+0x2a8>)
 80004c8:	430b      	orrs	r3, r1
 80004ca:	6093      	str	r3, [r2, #8]
			// clearing FTSR
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004cc:	4b7c      	ldr	r3, [pc, #496]	; (80006c0 <GPIO_Init+0x2a8>)
 80004ce:	68db      	ldr	r3, [r3, #12]
 80004d0:	687a      	ldr	r2, [r7, #4]
 80004d2:	7912      	ldrb	r2, [r2, #4]
 80004d4:	4611      	mov	r1, r2
 80004d6:	2201      	movs	r2, #1
 80004d8:	408a      	lsls	r2, r1
 80004da:	43d2      	mvns	r2, r2
 80004dc:	4611      	mov	r1, r2
 80004de:	4a78      	ldr	r2, [pc, #480]	; (80006c0 <GPIO_Init+0x2a8>)
 80004e0:	400b      	ands	r3, r1
 80004e2:	60d3      	str	r3, [r2, #12]
 80004e4:	e015      	b.n	8000512 <GPIO_Init+0xfa>
		}else
		{
			// config the both FTSR and RTSR
			// config the FTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004e6:	4b76      	ldr	r3, [pc, #472]	; (80006c0 <GPIO_Init+0x2a8>)
 80004e8:	68db      	ldr	r3, [r3, #12]
 80004ea:	687a      	ldr	r2, [r7, #4]
 80004ec:	7912      	ldrb	r2, [r2, #4]
 80004ee:	4611      	mov	r1, r2
 80004f0:	2201      	movs	r2, #1
 80004f2:	408a      	lsls	r2, r1
 80004f4:	4611      	mov	r1, r2
 80004f6:	4a72      	ldr	r2, [pc, #456]	; (80006c0 <GPIO_Init+0x2a8>)
 80004f8:	430b      	orrs	r3, r1
 80004fa:	60d3      	str	r3, [r2, #12]
			// config the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004fc:	4b70      	ldr	r3, [pc, #448]	; (80006c0 <GPIO_Init+0x2a8>)
 80004fe:	689b      	ldr	r3, [r3, #8]
 8000500:	687a      	ldr	r2, [r7, #4]
 8000502:	7912      	ldrb	r2, [r2, #4]
 8000504:	4611      	mov	r1, r2
 8000506:	2201      	movs	r2, #1
 8000508:	408a      	lsls	r2, r1
 800050a:	4611      	mov	r1, r2
 800050c:	4a6c      	ldr	r2, [pc, #432]	; (80006c0 <GPIO_Init+0x2a8>)
 800050e:	430b      	orrs	r3, r1
 8000510:	6093      	str	r3, [r2, #8]
		}
		// configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	791b      	ldrb	r3, [r3, #4]
 8000516:	089b      	lsrs	r3, r3, #2
 8000518:	75fb      	strb	r3, [r7, #23]
		uint8_t temp2 =  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	791b      	ldrb	r3, [r3, #4]
 800051e:	f003 0303 	and.w	r3, r3, #3
 8000522:	75bb      	strb	r3, [r7, #22]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	4a66      	ldr	r2, [pc, #408]	; (80006c4 <GPIO_Init+0x2ac>)
 800052a:	4293      	cmp	r3, r2
 800052c:	d01d      	beq.n	800056a <GPIO_Init+0x152>
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	4a65      	ldr	r2, [pc, #404]	; (80006c8 <GPIO_Init+0x2b0>)
 8000534:	4293      	cmp	r3, r2
 8000536:	d016      	beq.n	8000566 <GPIO_Init+0x14e>
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	4a63      	ldr	r2, [pc, #396]	; (80006cc <GPIO_Init+0x2b4>)
 800053e:	4293      	cmp	r3, r2
 8000540:	d00f      	beq.n	8000562 <GPIO_Init+0x14a>
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	681b      	ldr	r3, [r3, #0]
 8000546:	4a62      	ldr	r2, [pc, #392]	; (80006d0 <GPIO_Init+0x2b8>)
 8000548:	4293      	cmp	r3, r2
 800054a:	d008      	beq.n	800055e <GPIO_Init+0x146>
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	4a60      	ldr	r2, [pc, #384]	; (80006d4 <GPIO_Init+0x2bc>)
 8000552:	4293      	cmp	r3, r2
 8000554:	d101      	bne.n	800055a <GPIO_Init+0x142>
 8000556:	2304      	movs	r3, #4
 8000558:	e008      	b.n	800056c <GPIO_Init+0x154>
 800055a:	2307      	movs	r3, #7
 800055c:	e006      	b.n	800056c <GPIO_Init+0x154>
 800055e:	2303      	movs	r3, #3
 8000560:	e004      	b.n	800056c <GPIO_Init+0x154>
 8000562:	2302      	movs	r3, #2
 8000564:	e002      	b.n	800056c <GPIO_Init+0x154>
 8000566:	2301      	movs	r3, #1
 8000568:	e000      	b.n	800056c <GPIO_Init+0x154>
 800056a:	2300      	movs	r3, #0
 800056c:	757b      	strb	r3, [r7, #21]
		SYSCFG_PCLK_EN;
 800056e:	4b5a      	ldr	r3, [pc, #360]	; (80006d8 <GPIO_Init+0x2c0>)
 8000570:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000572:	4a59      	ldr	r2, [pc, #356]	; (80006d8 <GPIO_Init+0x2c0>)
 8000574:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000578:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 800057a:	7d7a      	ldrb	r2, [r7, #21]
 800057c:	7dbb      	ldrb	r3, [r7, #22]
 800057e:	009b      	lsls	r3, r3, #2
 8000580:	fa02 f103 	lsl.w	r1, r2, r3
 8000584:	4a55      	ldr	r2, [pc, #340]	; (80006dc <GPIO_Init+0x2c4>)
 8000586:	7dfb      	ldrb	r3, [r7, #23]
 8000588:	3302      	adds	r3, #2
 800058a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		// enable the exti interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800058e:	4b4c      	ldr	r3, [pc, #304]	; (80006c0 <GPIO_Init+0x2a8>)
 8000590:	681b      	ldr	r3, [r3, #0]
 8000592:	687a      	ldr	r2, [r7, #4]
 8000594:	7912      	ldrb	r2, [r2, #4]
 8000596:	4611      	mov	r1, r2
 8000598:	2201      	movs	r2, #1
 800059a:	408a      	lsls	r2, r1
 800059c:	4611      	mov	r1, r2
 800059e:	4a48      	ldr	r2, [pc, #288]	; (80006c0 <GPIO_Init+0x2a8>)
 80005a0:	430b      	orrs	r3, r1
 80005a2:	6013      	str	r3, [r2, #0]
	}
	temp = 0;
 80005a4:	2300      	movs	r3, #0
 80005a6:	613b      	str	r3, [r7, #16]
	// configure the speed
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	799b      	ldrb	r3, [r3, #6]
 80005ac:	461a      	mov	r2, r3
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	791b      	ldrb	r3, [r3, #4]
 80005b2:	005b      	lsls	r3, r3, #1
 80005b4:	fa02 f303 	lsl.w	r3, r2, r3
 80005b8:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << 2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	689a      	ldr	r2, [r3, #8]
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	791b      	ldrb	r3, [r3, #4]
 80005c4:	005b      	lsls	r3, r3, #1
 80005c6:	2103      	movs	r1, #3
 80005c8:	fa01 f303 	lsl.w	r3, r1, r3
 80005cc:	43db      	mvns	r3, r3
 80005ce:	4619      	mov	r1, r3
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	400a      	ands	r2, r1
 80005d6:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	6899      	ldr	r1, [r3, #8]
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	693a      	ldr	r2, [r7, #16]
 80005e4:	430a      	orrs	r2, r1
 80005e6:	609a      	str	r2, [r3, #8]
	temp = 0;
 80005e8:	2300      	movs	r3, #0
 80005ea:	613b      	str	r3, [r7, #16]
	// configure pupd settings
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	79db      	ldrb	r3, [r3, #7]
 80005f0:	461a      	mov	r2, r3
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	791b      	ldrb	r3, [r3, #4]
 80005f6:	005b      	lsls	r3, r3, #1
 80005f8:	fa02 f303 	lsl.w	r3, r2, r3
 80005fc:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << 2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	68da      	ldr	r2, [r3, #12]
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	791b      	ldrb	r3, [r3, #4]
 8000608:	005b      	lsls	r3, r3, #1
 800060a:	2103      	movs	r1, #3
 800060c:	fa01 f303 	lsl.w	r3, r1, r3
 8000610:	43db      	mvns	r3, r3
 8000612:	4619      	mov	r1, r3
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	400a      	ands	r2, r1
 800061a:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	68d9      	ldr	r1, [r3, #12]
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	693a      	ldr	r2, [r7, #16]
 8000628:	430a      	orrs	r2, r1
 800062a:	60da      	str	r2, [r3, #12]
	temp = 0;
 800062c:	2300      	movs	r3, #0
 800062e:	613b      	str	r3, [r7, #16]
	// configure the optype
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	7a1b      	ldrb	r3, [r3, #8]
 8000634:	461a      	mov	r2, r3
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	791b      	ldrb	r3, [r3, #4]
 800063a:	fa02 f303 	lsl.w	r3, r2, r3
 800063e:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	685a      	ldr	r2, [r3, #4]
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	791b      	ldrb	r3, [r3, #4]
 800064a:	4619      	mov	r1, r3
 800064c:	2303      	movs	r3, #3
 800064e:	408b      	lsls	r3, r1
 8000650:	43db      	mvns	r3, r3
 8000652:	4619      	mov	r1, r3
 8000654:	687b      	ldr	r3, [r7, #4]
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	400a      	ands	r2, r1
 800065a:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	6859      	ldr	r1, [r3, #4]
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	681b      	ldr	r3, [r3, #0]
 8000666:	693a      	ldr	r2, [r7, #16]
 8000668:	430a      	orrs	r2, r1
 800066a:	605a      	str	r2, [r3, #4]
	temp = 0;
 800066c:	2300      	movs	r3, #0
 800066e:	613b      	str	r3, [r7, #16]
	//configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	795b      	ldrb	r3, [r3, #5]
 8000674:	2b02      	cmp	r3, #2
 8000676:	d11e      	bne.n	80006b6 <GPIO_Init+0x29e>
	{
		uint32_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode / 8;
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	7a5b      	ldrb	r3, [r3, #9]
 800067c:	08db      	lsrs	r3, r3, #3
 800067e:	b2db      	uxtb	r3, r3
 8000680:	60fb      	str	r3, [r7, #12]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode % 8;
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	7a5b      	ldrb	r3, [r3, #9]
 8000686:	f003 0307 	and.w	r3, r3, #7
 800068a:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2);
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	681b      	ldr	r3, [r3, #0]
 8000690:	68fa      	ldr	r2, [r7, #12]
 8000692:	3208      	adds	r2, #8
 8000694:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	7a5b      	ldrb	r3, [r3, #9]
 800069c:	4619      	mov	r1, r3
 800069e:	68bb      	ldr	r3, [r7, #8]
 80006a0:	009b      	lsls	r3, r3, #2
 80006a2:	fa01 f303 	lsl.w	r3, r1, r3
 80006a6:	4619      	mov	r1, r3
 80006a8:	687b      	ldr	r3, [r7, #4]
 80006aa:	681b      	ldr	r3, [r3, #0]
 80006ac:	4311      	orrs	r1, r2
 80006ae:	68fa      	ldr	r2, [r7, #12]
 80006b0:	3208      	adds	r2, #8
 80006b2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80006b6:	bf00      	nop
 80006b8:	3718      	adds	r7, #24
 80006ba:	46bd      	mov	sp, r7
 80006bc:	bd80      	pop	{r7, pc}
 80006be:	bf00      	nop
 80006c0:	40013c00 	.word	0x40013c00
 80006c4:	40020000 	.word	0x40020000
 80006c8:	40020400 	.word	0x40020400
 80006cc:	40020800 	.word	0x40020800
 80006d0:	40020c00 	.word	0x40020c00
 80006d4:	40021000 	.word	0x40021000
 80006d8:	40023800 	.word	0x40023800
 80006dc:	40013800 	.word	0x40013800

080006e0 <GPIO_ReadFromInputPin>:
 							uint8_t PinNumber // value pin number
 * @return					uint8_t
 * @Note					none
*/
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006e0:	b480      	push	{r7}
 80006e2:	b085      	sub	sp, #20
 80006e4:	af00      	add	r7, sp, #0
 80006e6:	6078      	str	r0, [r7, #4]
 80006e8:	460b      	mov	r3, r1
 80006ea:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	691a      	ldr	r2, [r3, #16]
 80006f0:	78fb      	ldrb	r3, [r7, #3]
 80006f2:	fa22 f303 	lsr.w	r3, r2, r3
 80006f6:	b2db      	uxtb	r3, r3
 80006f8:	f003 0301 	and.w	r3, r3, #1
 80006fc:	73fb      	strb	r3, [r7, #15]
	return value;
 80006fe:	7bfb      	ldrb	r3, [r7, #15]
}
 8000700:	4618      	mov	r0, r3
 8000702:	3714      	adds	r7, #20
 8000704:	46bd      	mov	sp, r7
 8000706:	f85d 7b04 	ldr.w	r7, [sp], #4
 800070a:	4770      	bx	lr

0800070c <GPIO_ToggleOutputPin>:
 * 							uint8_t PinNumber // value pin number
 * @return					none
 * @Note					none
*/
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800070c:	b480      	push	{r7}
 800070e:	b083      	sub	sp, #12
 8000710:	af00      	add	r7, sp, #0
 8000712:	6078      	str	r0, [r7, #4]
 8000714:	460b      	mov	r3, r1
 8000716:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	695b      	ldr	r3, [r3, #20]
 800071c:	78fa      	ldrb	r2, [r7, #3]
 800071e:	2101      	movs	r1, #1
 8000720:	fa01 f202 	lsl.w	r2, r1, r2
 8000724:	405a      	eors	r2, r3
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	615a      	str	r2, [r3, #20]
}
 800072a:	bf00      	nop
 800072c:	370c      	adds	r7, #12
 800072e:	46bd      	mov	sp, r7
 8000730:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000734:	4770      	bx	lr
	...

08000738 <__libc_init_array>:
 8000738:	b570      	push	{r4, r5, r6, lr}
 800073a:	4d0d      	ldr	r5, [pc, #52]	; (8000770 <__libc_init_array+0x38>)
 800073c:	4c0d      	ldr	r4, [pc, #52]	; (8000774 <__libc_init_array+0x3c>)
 800073e:	1b64      	subs	r4, r4, r5
 8000740:	10a4      	asrs	r4, r4, #2
 8000742:	2600      	movs	r6, #0
 8000744:	42a6      	cmp	r6, r4
 8000746:	d109      	bne.n	800075c <__libc_init_array+0x24>
 8000748:	4d0b      	ldr	r5, [pc, #44]	; (8000778 <__libc_init_array+0x40>)
 800074a:	4c0c      	ldr	r4, [pc, #48]	; (800077c <__libc_init_array+0x44>)
 800074c:	f000 f818 	bl	8000780 <_init>
 8000750:	1b64      	subs	r4, r4, r5
 8000752:	10a4      	asrs	r4, r4, #2
 8000754:	2600      	movs	r6, #0
 8000756:	42a6      	cmp	r6, r4
 8000758:	d105      	bne.n	8000766 <__libc_init_array+0x2e>
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000760:	4798      	blx	r3
 8000762:	3601      	adds	r6, #1
 8000764:	e7ee      	b.n	8000744 <__libc_init_array+0xc>
 8000766:	f855 3b04 	ldr.w	r3, [r5], #4
 800076a:	4798      	blx	r3
 800076c:	3601      	adds	r6, #1
 800076e:	e7f2      	b.n	8000756 <__libc_init_array+0x1e>
 8000770:	08000798 	.word	0x08000798
 8000774:	08000798 	.word	0x08000798
 8000778:	08000798 	.word	0x08000798
 800077c:	0800079c 	.word	0x0800079c

08000780 <_init>:
 8000780:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000782:	bf00      	nop
 8000784:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000786:	bc08      	pop	{r3}
 8000788:	469e      	mov	lr, r3
 800078a:	4770      	bx	lr

0800078c <_fini>:
 800078c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800078e:	bf00      	nop
 8000790:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000792:	bc08      	pop	{r3}
 8000794:	469e      	mov	lr, r3
 8000796:	4770      	bx	lr
